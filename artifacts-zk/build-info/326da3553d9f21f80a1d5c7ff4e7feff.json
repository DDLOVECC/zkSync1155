{"id":"326da3553d9f21f80a1d5c7ff4e7feff","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual override returns (uint256[] memory) {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/AiYueNFTExchange.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract AiYueNFTExchange is ERC1155, ERC1155Burnable {\r\n    using SafeERC20 for IERC20;\r\n    struct InitialOwner {\r\n        address owner;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct InitialNumber {\r\n        address owner;\r\n        uint256 number;\r\n    }\r\n\r\n    struct CurrentOwner {\r\n        address owner;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct Vote {\r\n        address voter;\r\n        uint256 number;\r\n    }\r\n\r\n    mapping(uint256 => InitialOwner) public initialOwners;\r\n    mapping(uint256 => InitialNumber) public initialNumbers;\r\n    mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner;\r\n    mapping(uint256 => Vote[]) public voteInfo;\r\n    mapping(uint256 => string) private _uris;\r\n    string public name;\r\n    string public symbol;\r\n    constructor(string memory _name, string memory _symbol) ERC1155(\"\") {\r\n        name = _name;\r\n        symbol = _symbol;\r\n    }\r\n    function setURI(string memory newuri) public {\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function uri(uint256 tokenId) override public view returns (string memory){\r\n        return (_uris[tokenId]);\r\n    }\r\n\r\n    function setTokenUri(uint256 tokenId, string memory uri) public {\r\n        _uris[tokenId] = uri;\r\n    }\r\n\r\n    function mint(address account, uint256 id, uint256 number, uint256 amount, string memory uri, bytes memory data) public\r\n    {\r\n        bool result = getNftEXit(id, account);\r\n        require(result != true, \"this id had mint\");\r\n        _mint(account, id, amount, data);\r\n        initOwnerAmount(account, id, amount);\r\n        initOwnerNumber(account, id, number);\r\n        initCurrentOwner(account, id, amount);\r\n        _uris[id] = uri;\r\n    }\r\n\r\n\r\n    function transferFrom(address from, address to, uint256 id, uint256 amount, bytes memory data) public {\r\n        bool result = getVoteInfoExit(id, from);\r\n        if (result == true && msg.sender == from) {\r\n            revert(\"this address in vote cannot transfer\");\r\n        }\r\n        safeTransferFrom(from, to, id, amount, data);\r\n        changeTokenIdAmount(from, to, id, amount);\r\n        if (result == true){\r\n            removeVoteInfo(id,from);\r\n        }\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }\r\n\r\n    function initOwnerAmount(address _owner, uint256 tokenId, uint256 _amount) internal {\r\n        InitialOwner memory initialOwner = InitialOwner({\r\n            owner : _owner,\r\n            amount : _amount\r\n            });\r\n        initialOwners[tokenId] = initialOwner;\r\n    }\r\n\r\n    function initOwnerNumber(address _owner, uint256 tokenId, uint256 _number) internal {\r\n        InitialNumber memory initialNumber = InitialNumber({\r\n            owner : _owner,\r\n            number : _number\r\n            });\r\n        initialNumbers[tokenId] = initialNumber;\r\n    }\r\n\r\n    function decreaseNumber(uint256 tokenId, uint256 decNumber) public {\r\n        require(initialNumbers[tokenId].number >= decNumber, \"less number to decrease\");\r\n        initialNumbers[tokenId].number = initialNumbers[tokenId].number - decNumber;\r\n    }\r\n\r\n    function initCurrentOwner(address _owner, uint256 tokenId, uint256 _amount) internal {\r\n        CurrentOwner memory currentOwner = CurrentOwner({\r\n            owner : _owner,\r\n            amount : _amount\r\n            });\r\n        tokenIdCurrentOwner[tokenId].push(currentOwner);\r\n    }\r\n\r\n\r\n    function changeTokenIdAmount(address _from, address _to, uint256 _tokenId, uint256 _amount) internal {\r\n        if (getShareExit(_tokenId, _to)) {\r\n            CurrentOwner memory currentOwner = getShareEntity(_tokenId, _to);\r\n            currentOwner.amount += _amount;\r\n\r\n            uint256 shareIndex = getShareArrayIndex(_tokenId, _to);\r\n            tokenIdCurrentOwner[_tokenId][shareIndex] = currentOwner;\r\n        } else {\r\n            CurrentOwner memory currentOwner = CurrentOwner({\r\n                owner : _to,\r\n                amount : _amount\r\n                });\r\n            tokenIdCurrentOwner[_tokenId].push(currentOwner);\r\n        }\r\n\r\n        CurrentOwner memory current = getShareEntity(_tokenId, _from);\r\n        current.amount = current.amount - _amount;\r\n\r\n        uint256 shareOneIndex = getShareArrayIndex(_tokenId, _from);\r\n        tokenIdCurrentOwner[_tokenId][shareOneIndex] = current;\r\n    }\r\n\r\n    function getShareExit(uint256 _tokenId, address owner) internal view returns (bool){\r\n        CurrentOwner[] memory shares = tokenIdCurrentOwner[_tokenId];\r\n        for (uint i = 0; i < shares.length; i++) {\r\n            if (shares[i].owner == owner) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getShareEntity(uint256 _tokenId, address owner) internal view returns (CurrentOwner memory){\r\n        CurrentOwner  memory share;\r\n        CurrentOwner[] memory shareList = tokenIdCurrentOwner[_tokenId];\r\n        for (uint i = 0; i < shareList.length; i++) {\r\n            if (shareList[i].owner == owner) {\r\n                share = shareList[i];\r\n                return share;\r\n            }\r\n        }\r\n        return share;\r\n    }\r\n\r\n    function getShareArrayIndex(uint256 _tokenId, address owner) internal view returns (uint256){\r\n        uint256 index;\r\n        CurrentOwner[] memory shareList = tokenIdCurrentOwner[_tokenId];\r\n        for (uint i = 0; i < shareList.length; i++) {\r\n            if (shareList[i].owner == owner) {\r\n                index = i;\r\n                return index;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n    function acquisition(address owner, address operator, uint256 id) public {\r\n        addVoteInfo(owner, operator, id);\r\n    }\r\n\r\n    function addVoteInfo(address voter, address operator, uint256 id) public {\r\n        uint256 _number = balanceOf(voter, id);\r\n        Vote memory newVote = Vote({\r\n            voter : voter,\r\n            number : _number\r\n            });\r\n        voteInfo[id].push(newVote);\r\n        _setApprovalForAll(voter, operator, true);\r\n    }\r\n\r\n    function approvalForAll(address owner, address operator) public virtual {\r\n        _setApprovalForAll(owner, operator, true);\r\n    }\r\n\r\n    function approvedForAll(address account, address operator) public view virtual returns (bool) {\r\n        return isApprovedForAll(account, operator);\r\n    }\r\n\r\n    function getVoteInfo(uint256 id) public view returns (uint256, uint256){\r\n        uint256 all = initialOwners[id].amount;\r\n        uint256 realVoteNumber = 0;\r\n        Vote[] memory voteList = voteInfo[id];\r\n        for (uint i = 0; i < voteList.length; i++) {\r\n            realVoteNumber += voteList[i].number;\r\n        }\r\n        return (all, realVoteNumber);\r\n    }\r\n\r\n    function removeVoteInfo(uint256 id, address voter) internal {\r\n        Vote[] memory voteList = voteInfo[id];\r\n        for (uint i = 0; i < voteList.length; i++) {\r\n            if (voteList[i].voter == voter) {\r\n                delete voteList[i];\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function getVoteInfoExit(uint256 id, address voter) public view returns (bool){\r\n        Vote[] memory voteList = voteInfo[id];\r\n        for (uint i = 0; i < voteList.length; i++) {\r\n            if (voteList[i].voter == voter) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getNftEXit(uint256 id, address owner) public view returns (bool){\r\n        if (initialOwners[id].owner == owner) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getVoteInfoResult(uint256 id) public view returns (bool){\r\n        uint256 all = initialOwners[id].amount;\r\n        uint256 realVoteNumber = 0;\r\n        bool result = false;\r\n        Vote[] memory voteList = voteInfo[id];\r\n        for (uint i = 0; i < voteList.length; i++) {\r\n            realVoteNumber += voteList[i].number;\r\n        }\r\n        uint256 per = calculatePercentage(realVoteNumber, all);\r\n        uint256 standard = calculatePercentage(2, 3);\r\n        if (per > standard) {\r\n            result = true;\r\n        }\r\n        if (per <= standard) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function calculatePercentage(uint256 numerator, uint256 denominator) public pure returns (uint256) {\r\n        require(denominator != 0, \"Denominator must be a non-zero value\");\r\n        uint256 percentage = (numerator * 100) / denominator;\r\n        return percentage;\r\n    }\r\n\r\n\r\n    function deposit() public payable {\r\n    }\r\n\r\n    function withdraw(address payable rec, uint256 amount) public {\r\n        address contractAddress = address(this);\r\n        require(contractAddress.balance > amount, \"less amount to withdraw\");\r\n        rec.transfer(amount);\r\n    }\r\n\r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    address public usdtAddr;\r\n\r\n    function setUsdtAddr(address _usdtAddr) public {\r\n        usdtAddr = _usdtAddr;\r\n    }\r\n\r\n    function acquisitionWithUsdt(address owner, address operator, uint256 id, uint amount) public {\r\n        addVoteInfo(owner, operator, id);\r\n        IERC20 token = IERC20(usdtAddr);\r\n        token.safeTransferFrom(msg.sender, operator, amount);\r\n    }\r\n\r\n}\r\n\r\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/AiYueNFTExchange.sol:50:43:\n   |\n50 |     function setTokenUri(uint256 tokenId, string memory uri) public {\n   |                                           ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/AiYueNFTExchange.sol:46:5:\n   |\n46 |     function uri(uint256 tokenId) override public view returns (string memory){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/AiYueNFTExchange.sol","start":1481,"end":1498},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/AiYueNFTExchange.sol:54:80:\n   |\n54 |     function mint(address account, uint256 id, uint256 number, uint256 amount, string memory uri, bytes memory data) public\n   |                                                                                ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/AiYueNFTExchange.sol:46:5:\n   |\n46 |     function uri(uint256 tokenId) override public view returns (string memory){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/AiYueNFTExchange.sol","start":1629,"end":1646},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/AiYueNFTExchange.sol:201:5:\n    |\n201 |     function removeVoteInfo(uint256 id, address voter) internal {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"file":"contracts/AiYueNFTExchange.sol","start":7079,"end":7361},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":6276,"end":6300},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/AiYueNFTExchange.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"16","start":9072,"end":9092},"type":"Warning"}],"version":"0.8.18","long_version":"0.8.18+commit.87f61d96.Windows.msvc","zk_version":"1.3.10","sources":{"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Address":[2289],"Context":[2311],"ERC1155":[1222],"ERC165":[2930],"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC1155Receiver":[1385],"IERC165":[2942]},"id":1223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1345,"src":"134:24:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1386,"src":"159:32:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1470,"src":"192:46:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":2290,"src":"239:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":2312,"src":"273:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":2931,"src":"307:46:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["590:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2311,"src":"590:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"590:7:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["599:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2930,"src":"599:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"599:6:0"},{"baseName":{"id":13,"name":"IERC1155","nameLocations":["607:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"607:8:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"607:8:0"},{"baseName":{"id":15,"name":"IERC1155MetadataURI","nameLocations":["617:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1469,"src":"617:19:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"617:19:0"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"355:214:0","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1222,"linearizedBaseContracts":[1222,1469,1344,2930,2942,2311],"name":"ERC1155","nameLocation":"579:7:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":19,"libraryName":{"id":17,"name":"Address","nameLocations":["649:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"649:7:0"},"nodeType":"UsingForDirective","src":"643:26:0","typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":25,"mutability":"mutable","name":"_balances","nameLocation":"780:9:0","nodeType":"VariableDeclaration","scope":1222,"src":"724:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":24,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"724:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"743:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":31,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"899:18:0","nodeType":"VariableDeclaration","scope":1222,"src":"846:71:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":30,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":29,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"865:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":28,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":33,"mutability":"mutable","name":"_uri","nameLocation":"1053:4:0","nodeType":"VariableDeclaration","scope":1222,"src":"1038:19:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":32,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"1139:30:0","statements":[{"expression":{"arguments":[{"id":40,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1157:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":39,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1149:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1149:13:0"}]},"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"1064:38:0","text":" @dev See {_setURI}."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"uri_","nameLocation":"1133:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1119:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35,"name":"string","nodeType":"ElementaryTypeName","src":"1119:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1118:20:0"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"1139:0:0"},"scope":1222,"src":"1107:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2929,2941],"body":{"id":74,"nodeType":"Block","src":"1344:197:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1373:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":57,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"1393:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}],"id":56,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1388:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":58,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1388:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1344","typeString":"type(contract IERC1155)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1403:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1388:26:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1373:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1430:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":63,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1450:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1469_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1469_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":62,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1445:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1469","typeString":"type(contract IERC1155MetadataURI)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1471:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1445:37:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1430:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":70,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1522:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":68,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1498:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1222_$","typeString":"type(contract super ERC1155)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1504:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2929,"src":"1498:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:161:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":54,"id":73,"nodeType":"Return","src":"1354:180:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1175:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":75,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1245:17:0","nodeType":"FunctionDefinition","overrides":{"id":51,"nodeType":"OverrideSpecifier","overrides":[{"id":49,"name":"ERC165","nameLocations":["1312:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2930,"src":"1312:6:0"},{"id":50,"name":"IERC165","nameLocations":["1320:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"1320:7:0"}],"src":"1303:25:0"},"parameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"interfaceId","nameLocation":"1270:11:0","nodeType":"VariableDeclaration","scope":75,"src":"1263:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":46,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1263:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1262:20:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"1338:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":52,"name":"bool","nodeType":"ElementaryTypeName","src":"1338:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1337:6:0"},"scope":1222,"src":"1236:305:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1468],"body":{"id":86,"nodeType":"Block","src":"2015:28:0","statements":[{"expression":{"id":84,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2032:4:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":83,"id":85,"nodeType":"Return","src":"2025:11:0"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"1547:388:0","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":87,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1949:3:0","nodeType":"FunctionDefinition","overrides":{"id":80,"nodeType":"OverrideSpecifier","overrides":[],"src":"1982:8:0"},"parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":87,"src":"1953:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1952:9:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":87,"src":"2000:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":81,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1999:15:0"},"scope":1222,"src":"1940:103:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1282],"body":{"id":114,"nodeType":"Block","src":"2280:132:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":99,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2298:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2309:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:0","typeDescriptions":{}}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2321:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"2290:76:0"},{"expression":{"baseExpression":{"baseExpression":{"id":108,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2383:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":110,"indexExpression":{"id":109,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2393:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":112,"indexExpression":{"id":111,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2397:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":97,"id":113,"nodeType":"Return","src":"2376:29:0"}]},"documentation":{"id":88,"nodeType":"StructuredDocumentation","src":"2049:131:0","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":115,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2194:9:0","nodeType":"FunctionDefinition","overrides":{"id":94,"nodeType":"OverrideSpecifier","overrides":[],"src":"2253:8:0"},"parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"account","nameLocation":"2212:7:0","nodeType":"VariableDeclaration","scope":115,"src":"2204:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2204:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"id","nameLocation":"2229:2:0","nodeType":"VariableDeclaration","scope":115,"src":"2221:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:29:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"2271:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:0"},"scope":1222,"src":"2185:227:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1295],"body":{"id":178,"nodeType":"Block","src":"2720:335:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":130,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2738:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2747:6:0","memberName":"length","nodeType":"MemberAccess","src":"2738:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":132,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2757:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:6:0","memberName":"length","nodeType":"MemberAccess","src":"2757:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2730:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":137,"nodeType":"ExpressionStatement","src":"2730:83:0"},{"assignments":[142],"declarations":[{"constant":false,"id":142,"mutability":"mutable","name":"batchBalances","nameLocation":"2841:13:0","nodeType":"VariableDeclaration","scope":178,"src":"2824:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":141,"nodeType":"ArrayTypeName","src":"2824:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":149,"initialValue":{"arguments":[{"expression":{"id":146,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2871:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2880:6:0","memberName":"length","nodeType":"MemberAccess","src":"2871:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2857:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":144,"nodeType":"ArrayTypeName","src":"2861:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2824:63:0"},{"body":{"id":174,"nodeType":"Block","src":"2944:74:0","statements":[{"expression":{"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":161,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2958:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":163,"indexExpression":{"id":162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2972:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2958:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":165,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2987:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":167,"indexExpression":{"id":166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2996:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2987:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":168,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"3000:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":170,"indexExpression":{"id":169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3004:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":164,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2977:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2977:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":173,"nodeType":"ExpressionStatement","src":"2958:49:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2918:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":155,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2922:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:6:0","memberName":"length","nodeType":"MemberAccess","src":"2922:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":175,"initializationExpression":{"assignments":[151],"declarations":[{"constant":false,"id":151,"mutability":"mutable","name":"i","nameLocation":"2911:1:0","nodeType":"VariableDeclaration","scope":175,"src":"2903:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":153,"initialValue":{"hexValue":"30","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2903:13:0"},"loopExpression":{"expression":{"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2939:3:0","subExpression":{"id":158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2941:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":160,"nodeType":"ExpressionStatement","src":"2939:3:0"},"nodeType":"ForStatement","src":"2898:120:0"},{"expression":{"id":176,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3035:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":128,"id":177,"nodeType":"Return","src":"3028:20:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"2418:146:0","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":179,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2578:14:0","nodeType":"FunctionDefinition","overrides":{"id":124,"nodeType":"OverrideSpecifier","overrides":[],"src":"2684:8:0"},"parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"accounts","nameLocation":"2619:8:0","nodeType":"VariableDeclaration","scope":179,"src":"2602:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ArrayTypeName","src":"2602:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"ids","nameLocation":"2654:3:0","nodeType":"VariableDeclaration","scope":179,"src":"2637:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":121,"nodeType":"ArrayTypeName","src":"2637:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2592:71:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":179,"src":"2702:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":126,"nodeType":"ArrayTypeName","src":"2702:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2701:18:0"},"scope":1222,"src":"2569:486:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":195,"nodeType":"Block","src":"3207:69:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":189,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"3236:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3250:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3260:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":188,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3217:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"ExpressionStatement","src":"3217:52:0"}]},"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"3061:57:0","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":196,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3132:17:0","nodeType":"FunctionDefinition","overrides":{"id":186,"nodeType":"OverrideSpecifier","overrides":[],"src":"3198:8:0"},"parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"operator","nameLocation":"3158:8:0","nodeType":"VariableDeclaration","scope":196,"src":"3150:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"3150:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"approved","nameLocation":"3173:8:0","nodeType":"VariableDeclaration","scope":196,"src":"3168:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":183,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3149:33:0"},"returnParameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"3207:0:0"},"scope":1222,"src":"3123:153:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":213,"nodeType":"Block","src":"3448:61:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":207,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"3465:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":209,"indexExpression":{"id":208,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3484:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":211,"indexExpression":{"id":210,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3493:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":206,"id":212,"nodeType":"Return","src":"3458:44:0"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"3282:56:0","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":214,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3352:16:0","nodeType":"FunctionDefinition","overrides":{"id":203,"nodeType":"OverrideSpecifier","overrides":[],"src":"3424:8:0"},"parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"account","nameLocation":"3377:7:0","nodeType":"VariableDeclaration","scope":214,"src":"3369:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"operator","nameLocation":"3394:8:0","nodeType":"VariableDeclaration","scope":214,"src":"3386:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3368:35:0"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"3442:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"3442:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3441:6:0"},"scope":1222,"src":"3343:166:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1327],"body":{"id":251,"nodeType":"Block","src":"3745:225:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":230,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3776:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"3784:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3784:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3776:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":235,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3817:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":236,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"3823:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":234,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3800:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3776:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3850:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3755:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:153:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"3755:153:0"},{"expression":{"arguments":[{"id":244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3936:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":245,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3942:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":246,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"3946:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":247,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3950:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":248,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3958:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":243,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"3918:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3918:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"3918:45:0"}]},"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3515:56:0","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":252,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3585:16:0","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"3736:8:0"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"from","nameLocation":"3619:4:0","nodeType":"VariableDeclaration","scope":252,"src":"3611:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3611:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"to","nameLocation":"3641:2:0","nodeType":"VariableDeclaration","scope":252,"src":"3633:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"id","nameLocation":"3661:2:0","nodeType":"VariableDeclaration","scope":252,"src":"3653:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"amount","nameLocation":"3681:6:0","nodeType":"VariableDeclaration","scope":252,"src":"3673:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3673:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"data","nameLocation":"3710:4:0","nodeType":"VariableDeclaration","scope":252,"src":"3697:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":224,"name":"bytes","nodeType":"ElementaryTypeName","src":"3697:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3601:119:0"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"3745:0:0"},"scope":1222,"src":"3576:394:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":291,"nodeType":"Block","src":"4236:232:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":270,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4267:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":271,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"4275:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4267:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":275,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4308:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"4314:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":274,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"4291:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4267:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4341:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4246:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:153:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"4246:153:0"},{"expression":{"arguments":[{"id":284,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4432:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":285,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4438:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":286,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4442:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":287,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4447:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"4456:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":283,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4409:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"4409:52:0"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"3976:61:0","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":292,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4051:21:0","nodeType":"FunctionDefinition","overrides":{"id":267,"nodeType":"OverrideSpecifier","overrides":[],"src":"4227:8:0"},"parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"from","nameLocation":"4090:4:0","nodeType":"VariableDeclaration","scope":292,"src":"4082:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"to","nameLocation":"4112:2:0","nodeType":"VariableDeclaration","scope":292,"src":"4104:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"ids","nameLocation":"4141:3:0","nodeType":"VariableDeclaration","scope":292,"src":"4124:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":259,"nodeType":"ArrayTypeName","src":"4124:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"amounts","nameLocation":"4171:7:0","nodeType":"VariableDeclaration","scope":292,"src":"4154:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4154:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":262,"nodeType":"ArrayTypeName","src":"4154:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"data","nameLocation":"4201:4:0","nodeType":"VariableDeclaration","scope":292,"src":"4188:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":264,"name":"bytes","nodeType":"ElementaryTypeName","src":"4188:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4072:139:0"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"4236:0:0"},"scope":1222,"src":"4042:426:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":408,"nodeType":"Block","src":"5081:784:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5099:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5113:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5105:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"5105:7:0","typeDescriptions":{}}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5105:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5099:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5117:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"5091:66:0"},{"assignments":[317],"declarations":[{"constant":false,"id":317,"mutability":"mutable","name":"operator","nameLocation":"5176:8:0","nodeType":"VariableDeclaration","scope":408,"src":"5168:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":320,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":318,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"5187:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5168:31:0"},{"assignments":[325],"declarations":[{"constant":false,"id":325,"mutability":"mutable","name":"ids","nameLocation":"5226:3:0","nodeType":"VariableDeclaration","scope":408,"src":"5209:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":324,"nodeType":"ArrayTypeName","src":"5209:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":329,"initialValue":{"arguments":[{"id":327,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5250:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":326,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"5232:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5232:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5209:44:0"},{"assignments":[334],"declarations":[{"constant":false,"id":334,"mutability":"mutable","name":"amounts","nameLocation":"5280:7:0","nodeType":"VariableDeclaration","scope":408,"src":"5263:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ArrayTypeName","src":"5263:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":338,"initialValue":{"arguments":[{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5308:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":335,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"5290:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5263:52:0"},{"expression":{"arguments":[{"id":340,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5347:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5357:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5363:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":343,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5367:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":344,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5372:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":345,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5381:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":339,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5326:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"5326:60:0"},{"assignments":[349],"declarations":[{"constant":false,"id":349,"mutability":"mutable","name":"fromBalance","nameLocation":"5405:11:0","nodeType":"VariableDeclaration","scope":408,"src":"5397:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":355,"initialValue":{"baseExpression":{"baseExpression":{"id":350,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5419:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":352,"indexExpression":{"id":351,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5429:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":354,"indexExpression":{"id":353,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5433:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5397:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":357,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5456:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":358,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5471:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5456:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5479:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5448:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5448:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5448:76:0"},{"id":373,"nodeType":"UncheckedBlock","src":"5534:77:0","statements":[{"expression":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":363,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5558:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":366,"indexExpression":{"id":364,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5568:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5558:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":367,"indexExpression":{"id":365,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5572:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5558:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":368,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5580:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":369,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5594:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5580:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5558:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ExpressionStatement","src":"5558:42:0"}]},{"expression":{"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":374,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5620:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":377,"indexExpression":{"id":375,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5630:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5620:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":378,"indexExpression":{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5634:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5620:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":379,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5641:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":381,"nodeType":"ExpressionStatement","src":"5620:27:0"},{"eventCall":{"arguments":[{"id":383,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5678:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5688:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":385,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5694:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5698:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":387,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5702:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":382,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5663:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5663:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"EmitStatement","src":"5658:51:0"},{"expression":{"arguments":[{"id":391,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5740:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":392,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":393,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5756:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":394,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5760:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":395,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5765:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":396,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5774:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":390,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5720:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"ExpressionStatement","src":"5720:59:0"},{"expression":{"arguments":[{"id":400,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5821:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":401,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5831:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5837:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5841:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":404,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5845:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":405,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5853:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":399,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5790:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5790:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"5790:68:0"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"4474:439:0","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"4927:17:0","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"from","nameLocation":"4962:4:0","nodeType":"VariableDeclaration","scope":409,"src":"4954:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"to","nameLocation":"4984:2:0","nodeType":"VariableDeclaration","scope":409,"src":"4976:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"4976:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"id","nameLocation":"5004:2:0","nodeType":"VariableDeclaration","scope":409,"src":"4996:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"amount","nameLocation":"5024:6:0","nodeType":"VariableDeclaration","scope":409,"src":"5016:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"5016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"data","nameLocation":"5053:4:0","nodeType":"VariableDeclaration","scope":409,"src":"5040:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":302,"name":"bytes","nodeType":"ElementaryTypeName","src":"5040:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4944:119:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"5081:0:0"},"scope":1222,"src":"4918:947:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"6399:927:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":426,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6417:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6421:6:0","memberName":"length","nodeType":"MemberAccess","src":"6417:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":428,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6431:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6439:6:0","memberName":"length","nodeType":"MemberAccess","src":"6431:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6417:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6447:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6409:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6409:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"6409:81:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"6508:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6522:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6514:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"6514:7:0","typeDescriptions":{}}},"id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6514:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6508:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6526:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6500:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"ExpressionStatement","src":"6500:66:0"},{"assignments":[445],"declarations":[{"constant":false,"id":445,"mutability":"mutable","name":"operator","nameLocation":"6585:8:0","nodeType":"VariableDeclaration","scope":543,"src":"6577:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":448,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":446,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"6596:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6596:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6577:31:0"},{"expression":{"arguments":[{"id":450,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6640:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":451,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6650:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"6656:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6660:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":454,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6665:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":455,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6674:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":449,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6619:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"6619:60:0"},{"body":{"id":515,"nodeType":"Block","src":"6731:370:0","statements":[{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"id","nameLocation":"6753:2:0","nodeType":"VariableDeclaration","scope":515,"src":"6745:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6745:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":474,"initialValue":{"baseExpression":{"id":471,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6758:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":473,"indexExpression":{"id":472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6762:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6758:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6745:19:0"},{"assignments":[476],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"amount","nameLocation":"6786:6:0","nodeType":"VariableDeclaration","scope":515,"src":"6778:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":480,"initialValue":{"baseExpression":{"id":477,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6795:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":479,"indexExpression":{"id":478,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6803:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6795:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6778:27:0"},{"assignments":[482],"declarations":[{"constant":false,"id":482,"mutability":"mutable","name":"fromBalance","nameLocation":"6828:11:0","nodeType":"VariableDeclaration","scope":515,"src":"6820:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":488,"initialValue":{"baseExpression":{"baseExpression":{"id":483,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"6842:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":485,"indexExpression":{"id":484,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6852:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":487,"indexExpression":{"id":486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6856:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6820:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":490,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"6883:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":491,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6898:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6906:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6875:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"6875:76:0"},{"id":506,"nodeType":"UncheckedBlock","src":"6965:85:0","statements":[{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":496,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"6993:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":499,"indexExpression":{"id":497,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7003:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6993:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":500,"indexExpression":{"id":498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7007:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6993:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":501,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"7015:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":502,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7029:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7015:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6993:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"nodeType":"ExpressionStatement","src":"6993:42:0"}]},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":507,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"7063:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":510,"indexExpression":{"id":508,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7073:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7063:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":511,"indexExpression":{"id":509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7077:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7063:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7084:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7063:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ExpressionStatement","src":"7063:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6710:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":463,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6714:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6718:6:0","memberName":"length","nodeType":"MemberAccess","src":"6714:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6710:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":516,"initializationExpression":{"assignments":[459],"declarations":[{"constant":false,"id":459,"mutability":"mutable","name":"i","nameLocation":"6703:1:0","nodeType":"VariableDeclaration","scope":516,"src":"6695:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"6695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":461,"initialValue":{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6695:13:0"},"loopExpression":{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6726:3:0","subExpression":{"id":466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6728:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"6726:3:0"},"nodeType":"ForStatement","src":"6690:411:0"},{"eventCall":{"arguments":[{"id":518,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7130:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7140:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7146:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"7150:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":522,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7155:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":517,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"7116:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7116:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"7111:52:0"},{"expression":{"arguments":[{"id":526,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7194:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7204:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7210:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"7214:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":530,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7219:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7228:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":525,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7174:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7174:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"7174:59:0"},{"expression":{"arguments":[{"id":535,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7280:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7290:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7296:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":538,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"7300:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":539,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7305:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":540,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7314:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"7244:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7244:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"7244:75:0"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"5871:335:0","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"6220:22:0","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"from","nameLocation":"6260:4:0","nodeType":"VariableDeclaration","scope":544,"src":"6252:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"6252:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"to","nameLocation":"6282:2:0","nodeType":"VariableDeclaration","scope":544,"src":"6274:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"6274:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"ids","nameLocation":"6311:3:0","nodeType":"VariableDeclaration","scope":544,"src":"6294:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":416,"nodeType":"ArrayTypeName","src":"6294:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"amounts","nameLocation":"6341:7:0","nodeType":"VariableDeclaration","scope":544,"src":"6324:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":419,"nodeType":"ArrayTypeName","src":"6324:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"data","nameLocation":"6371:4:0","nodeType":"VariableDeclaration","scope":544,"src":"6358:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":421,"name":"bytes","nodeType":"ElementaryTypeName","src":"6358:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6242:139:0"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"6399:0:0"},"scope":1222,"src":"6211:1115:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":554,"nodeType":"Block","src":"8205:30:0","statements":[{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"8215:4:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":551,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8222:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8215:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":553,"nodeType":"ExpressionStatement","src":"8215:13:0"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"7332:812:0","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"8158:7:0","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"newuri","nameLocation":"8180:6:0","nodeType":"VariableDeclaration","scope":555,"src":"8166:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":546,"name":"string","nodeType":"ElementaryTypeName","src":"8166:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8165:22:0"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"8205:0:0"},"scope":1222,"src":"8149:86:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"8699:580:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8717:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8731:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"8723:7:0","typeDescriptions":{}}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8717:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8735:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8709:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8709:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":576,"nodeType":"ExpressionStatement","src":"8709:62:0"},{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"operator","nameLocation":"8790:8:0","nodeType":"VariableDeclaration","scope":655,"src":"8782:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"8782:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":581,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8801:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8801:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8782:31:0"},{"assignments":[586],"declarations":[{"constant":false,"id":586,"mutability":"mutable","name":"ids","nameLocation":"8840:3:0","nodeType":"VariableDeclaration","scope":655,"src":"8823:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8823:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":585,"nodeType":"ArrayTypeName","src":"8823:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":590,"initialValue":{"arguments":[{"id":588,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8864:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":587,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8846:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8846:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8823:44:0"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"amounts","nameLocation":"8894:7:0","nodeType":"VariableDeclaration","scope":655,"src":"8877:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"nodeType":"ArrayTypeName","src":"8877:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":599,"initialValue":{"arguments":[{"id":597,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8922:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":596,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8904:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8904:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8877:52:0"},{"expression":{"arguments":[{"id":601,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8961:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8979:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8971:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"8971:7:0","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8971:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8983:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"8987:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":608,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8992:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":609,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9001:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":600,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8940:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"8940:66:0"},{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":612,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"9017:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":615,"indexExpression":{"id":613,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9027:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9017:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":616,"indexExpression":{"id":614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9031:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9017:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9038:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9017:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":619,"nodeType":"ExpressionStatement","src":"9017:27:0"},{"eventCall":{"arguments":[{"id":621,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"9074:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9092:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9084:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"9084:7:0","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9084:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9096:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9100:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":628,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9104:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":620,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9059:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9059:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"EmitStatement","src":"9054:57:0"},{"expression":{"arguments":[{"id":632,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"9142:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9160:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:0","typeDescriptions":{}}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9164:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9168:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":639,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9173:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":640,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9182:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":631,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"9122:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9122:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"9122:65:0"},{"expression":{"arguments":[{"id":644,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"9229:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9239:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"9239:7:0","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9239:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9251:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9255:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9259:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9267:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":643,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"9198:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9198:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"9198:74:0"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"8241:362:0","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8617:5:0","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"to","nameLocation":"8631:2:0","nodeType":"VariableDeclaration","scope":656,"src":"8623:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"8623:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"id","nameLocation":"8643:2:0","nodeType":"VariableDeclaration","scope":656,"src":"8635:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"amount","nameLocation":"8655:6:0","nodeType":"VariableDeclaration","scope":656,"src":"8647:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"8676:4:0","nodeType":"VariableDeclaration","scope":656,"src":"8663:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"8663:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8622:59:0"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"8699:0:0"},"scope":1222,"src":"8608:671:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":766,"nodeType":"Block","src":"9823:637:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"9841:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9855:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9847:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"9847:7:0","typeDescriptions":{}}},"id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9847:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9841:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9859:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9833:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"9833:62:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":681,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"9913:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9917:6:0","memberName":"length","nodeType":"MemberAccess","src":"9913:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":683,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"9927:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9935:6:0","memberName":"length","nodeType":"MemberAccess","src":"9927:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9913:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9943:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9905:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9905:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9905:81:0"},{"assignments":[690],"declarations":[{"constant":false,"id":690,"mutability":"mutable","name":"operator","nameLocation":"10005:8:0","nodeType":"VariableDeclaration","scope":766,"src":"9997:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"9997:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":693,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"10016:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10016:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9997:31:0"},{"expression":{"arguments":[{"id":695,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10060:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:0","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10082:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10086:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":702,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10091:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":703,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10100:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":694,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"10039:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10039:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"ExpressionStatement","src":"10039:66:0"},{"body":{"id":729,"nodeType":"Block","src":"10157:60:0","statements":[{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":717,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"10171:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":722,"indexExpression":{"baseExpression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10181:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":720,"indexExpression":{"id":719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10185:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10181:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10171:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":723,"indexExpression":{"id":721,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10189:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":724,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10196:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"indexExpression":{"id":725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10204:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10196:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":728,"nodeType":"ExpressionStatement","src":"10171:35:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10136:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":711,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10140:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10144:6:0","memberName":"length","nodeType":"MemberAccess","src":"10140:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10136:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":730,"initializationExpression":{"assignments":[707],"declarations":[{"constant":false,"id":707,"mutability":"mutable","name":"i","nameLocation":"10129:1:0","nodeType":"VariableDeclaration","scope":730,"src":"10121:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":709,"initialValue":{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10133:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:13:0"},"loopExpression":{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10152:3:0","subExpression":{"id":714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10152:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ExpressionStatement","src":"10152:3:0"},"nodeType":"ForStatement","src":"10116:101:0"},{"eventCall":{"arguments":[{"id":732,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10246:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10264:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10256:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"10256:7:0","typeDescriptions":{}}},"id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10256:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":737,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10268:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10272:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":739,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10277:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":731,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"10232:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10232:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"EmitStatement","src":"10227:58:0"},{"expression":{"arguments":[{"id":743,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10316:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10334:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10326:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:0","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10338:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10342:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":750,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10347:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10356:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":742,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10296:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"10296:65:0"},{"expression":{"arguments":[{"id":755,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10408:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10426:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10418:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"10418:7:0","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10418:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":760,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10430:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10434:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":762,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10439:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":763,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10448:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":754,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"10372:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10372:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"ExpressionStatement","src":"10372:81:0"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"9285:379:0","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"9678:10:0","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"9706:2:0","nodeType":"VariableDeclaration","scope":767,"src":"9698:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"9698:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"ids","nameLocation":"9735:3:0","nodeType":"VariableDeclaration","scope":767,"src":"9718:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"9718:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":661,"nodeType":"ArrayTypeName","src":"9718:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"amounts","nameLocation":"9765:7:0","nodeType":"VariableDeclaration","scope":767,"src":"9748:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"9748:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ArrayTypeName","src":"9748:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"data","nameLocation":"9795:4:0","nodeType":"VariableDeclaration","scope":767,"src":"9782:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":666,"name":"bytes","nodeType":"ElementaryTypeName","src":"9782:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9688:117:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"9823:0:0"},"scope":1222,"src":"9669:791:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":871,"nodeType":"Block","src":"10820:682:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":778,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"10838:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10854:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10846:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10846:7:0","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10846:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10838:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10858:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10830:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10830:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"10830:66:0"},{"assignments":[788],"declarations":[{"constant":false,"id":788,"mutability":"mutable","name":"operator","nameLocation":"10915:8:0","nodeType":"VariableDeclaration","scope":871,"src":"10907:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"10907:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":789,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"10926:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10907:31:0"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"ids","nameLocation":"10965:3:0","nodeType":"VariableDeclaration","scope":871,"src":"10948:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ArrayTypeName","src":"10948:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":800,"initialValue":{"arguments":[{"id":798,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10989:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":797,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"10971:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10971:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10948:44:0"},{"assignments":[805],"declarations":[{"constant":false,"id":805,"mutability":"mutable","name":"amounts","nameLocation":"11019:7:0","nodeType":"VariableDeclaration","scope":871,"src":"11002:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"11002:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ArrayTypeName","src":"11002:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":809,"initialValue":{"arguments":[{"id":807,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11047:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"11029:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11029:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11002:52:0"},{"expression":{"arguments":[{"id":811,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11086:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11096:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11110:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11102:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"11102:7:0","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11102:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"11114:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":818,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"11119:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11128:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":810,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"11065:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"ExpressionStatement","src":"11065:66:0"},{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"fromBalance","nameLocation":"11150:11:0","nodeType":"VariableDeclaration","scope":871,"src":"11142:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11142:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":829,"initialValue":{"baseExpression":{"baseExpression":{"id":824,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"11164:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":826,"indexExpression":{"id":825,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"11174:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":828,"indexExpression":{"id":827,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11178:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11142:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"11201:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":832,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11216:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11201:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11224:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11193:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"11193:70:0"},{"id":847,"nodeType":"UncheckedBlock","src":"11273:77:0","statements":[{"expression":{"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":837,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"11297:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":840,"indexExpression":{"id":838,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"11307:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11297:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":841,"indexExpression":{"id":839,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11311:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11297:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"11319:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11333:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11319:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11297:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":846,"nodeType":"ExpressionStatement","src":"11297:42:0"}]},{"eventCall":{"arguments":[{"id":849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11380:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11390:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11404:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11396:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"11396:7:0","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11396:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"11408:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11412:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":848,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"11365:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11365:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"EmitStatement","src":"11360:59:0"},{"expression":{"arguments":[{"id":860,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11450:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11460:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:0","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"11478:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":867,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"11483:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11492:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":859,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11430:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11430:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"11430:65:0"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"10466:275:0","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":872,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10755:5:0","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"from","nameLocation":"10769:4:0","nodeType":"VariableDeclaration","scope":872,"src":"10761:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"id","nameLocation":"10783:2:0","nodeType":"VariableDeclaration","scope":872,"src":"10775:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"10775:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"amount","nameLocation":"10795:6:0","nodeType":"VariableDeclaration","scope":872,"src":"10787:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10760:42:0"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"10820:0:0"},"scope":1222,"src":"10746:756:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"11840:814:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":885,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"11858:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11874:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11866:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"11866:7:0","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11866:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11858:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11878:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11850:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11850:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"11850:66:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":895,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"11934:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11938:6:0","memberName":"length","nodeType":"MemberAccess","src":"11934:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":897,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"11948:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11956:6:0","memberName":"length","nodeType":"MemberAccess","src":"11948:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11934:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11964:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11926:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11926:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"11926:81:0"},{"assignments":[904],"declarations":[{"constant":false,"id":904,"mutability":"mutable","name":"operator","nameLocation":"12026:8:0","nodeType":"VariableDeclaration","scope":994,"src":"12018:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":907,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":905,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"12037:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12018:31:0"},{"expression":{"arguments":[{"id":909,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"12081:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12091:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12105:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12097:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"12097:7:0","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12097:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12109:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":916,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12114:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12123:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":908,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12060:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12060:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"12060:66:0"},{"body":{"id":969,"nodeType":"Block","src":"12178:323:0","statements":[{"assignments":[932],"declarations":[{"constant":false,"id":932,"mutability":"mutable","name":"id","nameLocation":"12200:2:0","nodeType":"VariableDeclaration","scope":969,"src":"12192:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"12192:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":936,"initialValue":{"baseExpression":{"id":933,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12205:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":935,"indexExpression":{"id":934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12209:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12205:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12192:19:0"},{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"amount","nameLocation":"12233:6:0","nodeType":"VariableDeclaration","scope":969,"src":"12225:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"initialValue":{"baseExpression":{"id":939,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12242:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":941,"indexExpression":{"id":940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12250:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12242:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12225:27:0"},{"assignments":[944],"declarations":[{"constant":false,"id":944,"mutability":"mutable","name":"fromBalance","nameLocation":"12275:11:0","nodeType":"VariableDeclaration","scope":969,"src":"12267:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":950,"initialValue":{"baseExpression":{"baseExpression":{"id":945,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"12289:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":947,"indexExpression":{"id":946,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"12299:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":949,"indexExpression":{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12303:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12267:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"12330:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":953,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"12345:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12330:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12353:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12322:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12322:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"ExpressionStatement","src":"12322:70:0"},{"id":968,"nodeType":"UncheckedBlock","src":"12406:85:0","statements":[{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":958,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"12434:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":961,"indexExpression":{"id":959,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"12444:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12434:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":962,"indexExpression":{"id":960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12448:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12434:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"12456:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":964,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"12470:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12456:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12434:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"nodeType":"ExpressionStatement","src":"12434:42:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12157:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":925,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12161:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:6:0","memberName":"length","nodeType":"MemberAccess","src":"12161:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12157:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":970,"initializationExpression":{"assignments":[921],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"i","nameLocation":"12150:1:0","nodeType":"VariableDeclaration","scope":970,"src":"12142:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12142:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":923,"initialValue":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12154:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12142:13:0"},"loopExpression":{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12173:3:0","subExpression":{"id":928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12173:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"nodeType":"ExpressionStatement","src":"12173:3:0"},"nodeType":"ForStatement","src":"12137:364:0"},{"eventCall":{"arguments":[{"id":972,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"12530:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12540:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12554:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12546:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:0","typeDescriptions":{}}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":978,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12558:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":979,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12563:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":971,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"12516:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12516:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"EmitStatement","src":"12511:60:0"},{"expression":{"arguments":[{"id":983,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"12602:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":984,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12612:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12618:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"12618:7:0","typeDescriptions":{}}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12618:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":989,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12630:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":990,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12635:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12644:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":982,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"12582:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12582:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"12582:65:0"}]},"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"11508:228:0","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":995,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"11750:10:0","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"from","nameLocation":"11769:4:0","nodeType":"VariableDeclaration","scope":995,"src":"11761:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"11761:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"11792:3:0","nodeType":"VariableDeclaration","scope":995,"src":"11775:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"11775:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"11775:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"amounts","nameLocation":"11814:7:0","nodeType":"VariableDeclaration","scope":995,"src":"11797:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"11797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"11797:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11760:62:0"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"11840:0:0"},"scope":1222,"src":"11741:913:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"12883:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"12901:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1007,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12910:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12901:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12920:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12893:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12893:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"12893:71:0"},{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1012,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"12974:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1015,"indexExpression":{"id":1013,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"12993:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1016,"indexExpression":{"id":1014,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"13000:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12974:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1017,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"13012:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12974:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1019,"nodeType":"ExpressionStatement","src":"12974:46:0"},{"eventCall":{"arguments":[{"id":1021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"13050:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1022,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"13057:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"13067:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1020,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"13035:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13035:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"EmitStatement","src":"13030:46:0"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"12660:125:0","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12799:18:0","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"owner","nameLocation":"12826:5:0","nodeType":"VariableDeclaration","scope":1027,"src":"12818:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"12818:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"operator","nameLocation":"12841:8:0","nodeType":"VariableDeclaration","scope":1027,"src":"12833:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12833:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"approved","nameLocation":"12856:8:0","nodeType":"VariableDeclaration","scope":1027,"src":"12851:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1001,"name":"bool","nodeType":"ElementaryTypeName","src":"12851:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12817:48:0"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"12883:0:0"},"scope":1222,"src":"12790:293:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"14231:2:0","statements":[]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"13089:925:0","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14028:20:0","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"operator","nameLocation":"14066:8:0","nodeType":"VariableDeclaration","scope":1046,"src":"14058:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"14058:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"from","nameLocation":"14092:4:0","nodeType":"VariableDeclaration","scope":1046,"src":"14084:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"14084:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"to","nameLocation":"14114:2:0","nodeType":"VariableDeclaration","scope":1046,"src":"14106:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"ids","nameLocation":"14143:3:0","nodeType":"VariableDeclaration","scope":1046,"src":"14126:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ArrayTypeName","src":"14126:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"amounts","nameLocation":"14173:7:0","nodeType":"VariableDeclaration","scope":1046,"src":"14156:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"14156:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"nodeType":"ArrayTypeName","src":"14156:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"data","nameLocation":"14203:4:0","nodeType":"VariableDeclaration","scope":1046,"src":"14190:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"14190:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14048:165:0"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"14231:0:0"},"scope":1222,"src":"14019:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"15377:2:0","statements":[]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"14239:922:0","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15175:19:0","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"operator","nameLocation":"15212:8:0","nodeType":"VariableDeclaration","scope":1065,"src":"15204:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"15204:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"from","nameLocation":"15238:4:0","nodeType":"VariableDeclaration","scope":1065,"src":"15230:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"15230:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"to","nameLocation":"15260:2:0","nodeType":"VariableDeclaration","scope":1065,"src":"15252:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"15252:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"ids","nameLocation":"15289:3:0","nodeType":"VariableDeclaration","scope":1065,"src":"15272:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"15272:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ArrayTypeName","src":"15272:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"amounts","nameLocation":"15319:7:0","nodeType":"VariableDeclaration","scope":1065,"src":"15302:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"15302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ArrayTypeName","src":"15302:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"data","nameLocation":"15349:4:0","nodeType":"VariableDeclaration","scope":1065,"src":"15336:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"15336:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15194:165:0"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"15377:0:0"},"scope":1222,"src":"15166:213:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"15578:532:0","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1080,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"15592:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15595:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"15592:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15592:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1126,"nodeType":"IfStatement","src":"15588:516:0","trueBody":{"id":1125,"nodeType":"Block","src":"15609:495:0","statements":[{"clauses":[{"block":{"id":1107,"nodeType":"Block","src":"15726:184:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1096,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"15748:8:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1097,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"15760:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15777:17:0","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"15760:34:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15795:8:0","memberName":"selector","nodeType":"MemberAccess","src":"15760:43:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15748:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"15744:152:0","trueBody":{"id":1105,"nodeType":"Block","src":"15805:91:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15834:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1101,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15827:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15827:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"ExpressionStatement","src":"15827:50:0"}]}}]},"errorName":"","id":1108,"nodeType":"TryCatchClause","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"response","nameLocation":"15716:8:0","nodeType":"VariableDeclaration","scope":1108,"src":"15709:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1093,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15709:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15708:17:0"},"src":"15700:210:0"},{"block":{"id":1116,"nodeType":"Block","src":"15945:47:0","statements":[{"expression":{"arguments":[{"id":1113,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"15970:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1112,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15963:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15963:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"15963:14:0"}]},"errorName":"Error","id":1117,"nodeType":"TryCatchClause","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"reason","nameLocation":"15937:6:0","nodeType":"VariableDeclaration","scope":1117,"src":"15923:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1109,"name":"string","nodeType":"ElementaryTypeName","src":"15923:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15922:22:0"},"src":"15911:81:0"},{"block":{"id":1122,"nodeType":"Block","src":"15999:95:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16024:54:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1118,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16017:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16017:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"ExpressionStatement","src":"16017:62:0"}]},"errorName":"","id":1123,"nodeType":"TryCatchClause","src":"15993:101:0"}],"externalCall":{"arguments":[{"id":1087,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"15666:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"15676:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"15682:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"15686:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1091,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"15694:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"15644:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1083,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"15627:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1385","typeString":"contract IERC1155Receiver"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15648:17:0","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"15627:38:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:72:0","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1124,"nodeType":"TryStatement","src":"15623:471:0"}]}}]},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"15394:30:0","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"operator","nameLocation":"15442:8:0","nodeType":"VariableDeclaration","scope":1128,"src":"15434:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"15434:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"from","nameLocation":"15468:4:0","nodeType":"VariableDeclaration","scope":1128,"src":"15460:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"15460:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"to","nameLocation":"15490:2:0","nodeType":"VariableDeclaration","scope":1128,"src":"15482:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"15482:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"id","nameLocation":"15510:2:0","nodeType":"VariableDeclaration","scope":1128,"src":"15502:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"15502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"amount","nameLocation":"15530:6:0","nodeType":"VariableDeclaration","scope":1128,"src":"15522:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"15522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"data","nameLocation":"15559:4:0","nodeType":"VariableDeclaration","scope":1128,"src":"15546:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1076,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15424:145:0"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"15578:0:0"},"scope":1222,"src":"15385:725:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1192,"nodeType":"Block","src":"16334:574:0","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1145,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"16348:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16351:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"16348:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16348:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"IfStatement","src":"16344:558:0","trueBody":{"id":1190,"nodeType":"Block","src":"16365:537:0","statements":[{"clauses":[{"block":{"id":1172,"nodeType":"Block","src":"16519:189:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"16541:8:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1162,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"16553:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16570:22:0","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"16553:39:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16593:8:0","memberName":"selector","nodeType":"MemberAccess","src":"16553:48:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16541:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1171,"nodeType":"IfStatement","src":"16537:157:0","trueBody":{"id":1170,"nodeType":"Block","src":"16603:91:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16632:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1166,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16625:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16625:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"16625:50:0"}]}}]},"errorName":"","id":1173,"nodeType":"TryCatchClause","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"response","nameLocation":"16496:8:0","nodeType":"VariableDeclaration","scope":1173,"src":"16489:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1158,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16489:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16471:47:0"},"src":"16463:245:0"},{"block":{"id":1181,"nodeType":"Block","src":"16743:47:0","statements":[{"expression":{"arguments":[{"id":1178,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"16768:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1177,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16761:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16761:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"16761:14:0"}]},"errorName":"Error","id":1182,"nodeType":"TryCatchClause","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"reason","nameLocation":"16735:6:0","nodeType":"VariableDeclaration","scope":1182,"src":"16721:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1174,"name":"string","nodeType":"ElementaryTypeName","src":"16721:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16720:22:0"},"src":"16709:81:0"},{"block":{"id":1187,"nodeType":"Block","src":"16797:95:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16822:54:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1183,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16815:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16815:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"16815:62:0"}]},"errorName":"","id":1188,"nodeType":"TryCatchClause","src":"16791:101:0"}],"externalCall":{"arguments":[{"id":1152,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"16427:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"16437:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"16443:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1155,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"16448:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"16457:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1149,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"16400:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"16383:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1385","typeString":"contract IERC1155Receiver"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16404:22:0","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"16383:43:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:79:0","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1189,"nodeType":"TryStatement","src":"16379:513:0"}]}}]},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"16125:35:0","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"operator","nameLocation":"16178:8:0","nodeType":"VariableDeclaration","scope":1193,"src":"16170:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"16170:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"from","nameLocation":"16204:4:0","nodeType":"VariableDeclaration","scope":1193,"src":"16196:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"16196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"to","nameLocation":"16226:2:0","nodeType":"VariableDeclaration","scope":1193,"src":"16218:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"16218:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"ids","nameLocation":"16255:3:0","nodeType":"VariableDeclaration","scope":1193,"src":"16238:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"16238:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1136,"nodeType":"ArrayTypeName","src":"16238:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"amounts","nameLocation":"16285:7:0","nodeType":"VariableDeclaration","scope":1193,"src":"16268:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"16268:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ArrayTypeName","src":"16268:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"data","nameLocation":"16315:4:0","nodeType":"VariableDeclaration","scope":1193,"src":"16302:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"16302:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16160:165:0"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"16334:0:0"},"scope":1222,"src":"16116:792:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1220,"nodeType":"Block","src":"16998:109:0","statements":[{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"array","nameLocation":"17025:5:0","nodeType":"VariableDeclaration","scope":1220,"src":"17008:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ArrayTypeName","src":"17008:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1211,"initialValue":{"arguments":[{"hexValue":"31","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17047:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17033:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"17037:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1207,"nodeType":"ArrayTypeName","src":"17037:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17033:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17008:41:0"},{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1212,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"17059:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1214,"indexExpression":{"hexValue":"30","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17065:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1215,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"17070:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17059:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"17059:18:0"},{"expression":{"id":1218,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"17095:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1200,"id":1219,"nodeType":"Return","src":"17088:12:0"}]},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"16923:17:0","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"element","nameLocation":"16949:7:0","nodeType":"VariableDeclaration","scope":1221,"src":"16941:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"16941:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16940:17:0"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"16980:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"16980:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ArrayTypeName","src":"16980:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16979:18:0"},"scope":1222,"src":"16914:193:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1223,"src":"570:16539:0","usedErrors":[]}],"src":"109:17001:0"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1344],"IERC165":[2942]},"id":1345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1224,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1345,"sourceUnit":2943,"src":"135:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1227,"name":"IERC165","nameLocations":["372:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"372:7:1"},"id":1228,"nodeType":"InheritanceSpecifier","src":"372:7:1"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"184:165:1","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1344,"linearizedBaseContracts":[1344,2942],"name":"IERC1155","nameLocation":"360:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"386:121:1","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1241,"name":"TransferSingle","nameLocation":"518:14:1","nodeType":"EventDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"549:8:1","nodeType":"VariableDeclaration","scope":1241,"src":"533:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"575:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"559:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"597:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"581:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"609:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"601:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"621:5:1","nodeType":"VariableDeclaration","scope":1241,"src":"613:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:1"},"src":"512:116:1"},{"anonymous":false,"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"634:144:1","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1256,"name":"TransferBatch","nameLocation":"789:13:1","nodeType":"EventDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"828:8:1","nodeType":"VariableDeclaration","scope":1256,"src":"812:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1246,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"862:4:1","nodeType":"VariableDeclaration","scope":1256,"src":"846:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"892:2:1","nodeType":"VariableDeclaration","scope":1256,"src":"876:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"914:3:1","nodeType":"VariableDeclaration","scope":1256,"src":"904:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"904:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1254,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"937:6:1","nodeType":"VariableDeclaration","scope":1256,"src":"927:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ArrayTypeName","src":"927:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:1"},"src":"783:167:1"},{"anonymous":false,"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"956:147:1","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1265,"name":"ApprovalForAll","nameLocation":"1114:14:1","nodeType":"EventDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1145:7:1","nodeType":"VariableDeclaration","scope":1265,"src":"1129:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1170:8:1","nodeType":"VariableDeclaration","scope":1265,"src":"1154:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1185:8:1","nodeType":"VariableDeclaration","scope":1265,"src":"1180:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:1"},"src":"1108:87:1"},{"anonymous":false,"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"1201:343:1","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1272,"name":"URI","nameLocation":"1555:3:1","nodeType":"EventDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1566:5:1","nodeType":"VariableDeclaration","scope":1272,"src":"1559:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1267,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1270,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1589:2:1","nodeType":"VariableDeclaration","scope":1272,"src":"1573:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:1"},"src":"1549:44:1"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"1599:173:1","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1786:9:1","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"account","nameLocation":"1804:7:1","nodeType":"VariableDeclaration","scope":1282,"src":"1796:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"id","nameLocation":"1821:2:1","nodeType":"VariableDeclaration","scope":1282,"src":"1813:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:1"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"1848:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:1"},"scope":1344,"src":"1777:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"1863:188:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1295,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2065:14:1","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"accounts","nameLocation":"2108:8:1","nodeType":"VariableDeclaration","scope":1295,"src":"2089:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"nodeType":"ArrayTypeName","src":"2089:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"ids","nameLocation":"2145:3:1","nodeType":"VariableDeclaration","scope":1295,"src":"2126:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ArrayTypeName","src":"2126:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:75:1"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"2178:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ArrayTypeName","src":"2178:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:18:1"},"scope":1344,"src":"2056:140:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"2202:248:1","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2464:17:1","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"operator","nameLocation":"2490:8:1","nodeType":"VariableDeclaration","scope":1303,"src":"2482:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"approved","nameLocation":"2505:8:1","nodeType":"VariableDeclaration","scope":1303,"src":"2500:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1299,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2481:33:1"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"2523:0:1"},"scope":1344,"src":"2455:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"2530:135:1","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2679:16:1","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"account","nameLocation":"2704:7:1","nodeType":"VariableDeclaration","scope":1313,"src":"2696:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"operator","nameLocation":"2721:8:1","nodeType":"VariableDeclaration","scope":1313,"src":"2713:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2695:35:1"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"2754:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1310,"name":"bool","nodeType":"ElementaryTypeName","src":"2754:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2753:6:1"},"scope":1344,"src":"2670:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2766:556:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1327,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3336:16:1","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3361:4:1","nodeType":"VariableDeclaration","scope":1327,"src":"3353:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3375:2:1","nodeType":"VariableDeclaration","scope":1327,"src":"3367:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"id","nameLocation":"3387:2:1","nodeType":"VariableDeclaration","scope":1327,"src":"3379:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"amount","nameLocation":"3399:6:1","nodeType":"VariableDeclaration","scope":1327,"src":"3391:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"data","nameLocation":"3422:4:1","nodeType":"VariableDeclaration","scope":1327,"src":"3407:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"3407:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:75:1"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"3436:0:1"},"scope":1344,"src":"3327:110:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"3443:390:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3847:21:1","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"from","nameLocation":"3886:4:1","nodeType":"VariableDeclaration","scope":1343,"src":"3878:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"to","nameLocation":"3908:2:1","nodeType":"VariableDeclaration","scope":1343,"src":"3900:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"3900:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"ids","nameLocation":"3939:3:1","nodeType":"VariableDeclaration","scope":1343,"src":"3920:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1334,"nodeType":"ArrayTypeName","src":"3920:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"amounts","nameLocation":"3971:7:1","nodeType":"VariableDeclaration","scope":1343,"src":"3952:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ArrayTypeName","src":"3952:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"data","nameLocation":"4003:4:1","nodeType":"VariableDeclaration","scope":1343,"src":"3988:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"3988:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3868:145:1"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"4022:0:1"},"scope":1344,"src":"3838:185:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1345,"src":"350:3675:1","usedErrors":[]}],"src":"110:3916:1"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1385],"IERC165":[2942]},"id":1386,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1346,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1386,"sourceUnit":2943,"src":"143:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1349,"name":"IERC165","nameLocations":["262:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"262:7:2"},"id":1350,"nodeType":"InheritanceSpecifier","src":"262:7:2"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"192:39:2","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1385,"linearizedBaseContracts":[1385,2942],"name":"IERC1155Receiver","nameLocation":"242:16:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"276:826:2","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1366,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:2","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"operator","nameLocation":"1151:8:2","nodeType":"VariableDeclaration","scope":1366,"src":"1143:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"from","nameLocation":"1177:4:2","nodeType":"VariableDeclaration","scope":1366,"src":"1169:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"id","nameLocation":"1199:2:2","nodeType":"VariableDeclaration","scope":1366,"src":"1191:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"value","nameLocation":"1219:5:2","nodeType":"VariableDeclaration","scope":1366,"src":"1211:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"data","nameLocation":"1249:4:2","nodeType":"VariableDeclaration","scope":1366,"src":"1234:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1360,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:2"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"1278:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1363,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:2"},"scope":1385,"src":"1107:179:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"1292:994:2","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1384,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:2","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"operator","nameLocation":"2340:8:2","nodeType":"VariableDeclaration","scope":1384,"src":"2332:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"from","nameLocation":"2366:4:2","nodeType":"VariableDeclaration","scope":1384,"src":"2358:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"ids","nameLocation":"2399:3:2","nodeType":"VariableDeclaration","scope":1384,"src":"2380:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1373,"nodeType":"ArrayTypeName","src":"2380:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"values","nameLocation":"2431:6:2","nodeType":"VariableDeclaration","scope":1384,"src":"2412:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1376,"nodeType":"ArrayTypeName","src":"2412:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"data","nameLocation":"2462:4:2","nodeType":"VariableDeclaration","scope":1384,"src":"2447:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:2"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1384,"src":"2491:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1381,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:2"},"scope":1385,"src":"2291:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1386,"src":"232:2269:2","usedErrors":[]}],"src":"118:2384:2"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"Address":[2289],"Context":[2311],"ERC1155":[1222],"ERC1155Burnable":[1454],"ERC165":[2930],"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC1155Receiver":[1385],"IERC165":[2942]},"id":1455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1387,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1455,"sourceUnit":1223,"src":"153:24:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1390,"name":"ERC1155","nameLocations":["394:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"394:7:3"},"id":1391,"nodeType":"InheritanceSpecifier","src":"394:7:3"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"179:177:3","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"},"fullyImplemented":false,"id":1454,"linearizedBaseContracts":[1454,1222,1469,1344,2930,2942,2311],"name":"ERC1155Burnable","nameLocation":"375:15:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1420,"nodeType":"Block","src":"481:212:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"512:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"523:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"523:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"512:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"556:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"565:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"565:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"539:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"539:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"512:66:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"592:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"491:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"491:159:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"491:159:3"},{"expression":{"arguments":[{"id":1415,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"676:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"680:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1414,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"661:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"661:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"661:25:3"}]},"functionSelector":"f5298aca","id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"417:4:3","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"account","nameLocation":"430:7:3","nodeType":"VariableDeclaration","scope":1421,"src":"422:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"id","nameLocation":"447:2:3","nodeType":"VariableDeclaration","scope":1421,"src":"439:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"value","nameLocation":"459:5:3","nodeType":"VariableDeclaration","scope":1421,"src":"451:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"421:44:3"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"481:0:3"},"scope":1454,"src":"408:285:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1452,"nodeType":"Block","src":"797:219:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"828:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1434,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"839:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"839:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"828:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1438,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"872:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1439,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"881:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1437,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"855:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"828:66:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"908:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"807:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"807:159:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1445,"nodeType":"ExpressionStatement","src":"807:159:3"},{"expression":{"arguments":[{"id":1447,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"988:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1448,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"997:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1449,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1002:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1446,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"977:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"977:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"977:32:3"}]},"functionSelector":"6b20c454","id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"708:9:3","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"account","nameLocation":"726:7:3","nodeType":"VariableDeclaration","scope":1453,"src":"718:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"ids","nameLocation":"752:3:3","nodeType":"VariableDeclaration","scope":1453,"src":"735:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1425,"nodeType":"ArrayTypeName","src":"735:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"values","nameLocation":"774:6:3","nodeType":"VariableDeclaration","scope":1453,"src":"757:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1428,"nodeType":"ArrayTypeName","src":"757:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"717:64:3"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"797:0:3"},"scope":1454,"src":"699:317:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1455,"src":"357:661:3","usedErrors":[]}],"src":"128:891:3"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC165":[2942]},"id":1470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1456,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1470,"sourceUnit":1345,"src":"142:25:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1459,"name":"IERC1155","nameLocations":["397:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"397:8:4"},"id":1460,"nodeType":"InheritanceSpecifier","src":"397:8:4"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"169:194:4","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1469,"linearizedBaseContracts":[1469,1344,2942],"name":"IERC1155MetadataURI","nameLocation":"374:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"412:192:4","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1468,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"618:3:4","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"id","nameLocation":"630:2:4","nodeType":"VariableDeclaration","scope":1468,"src":"622:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:12:4"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"657:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1465,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:4"},"scope":1469,"src":"609:63:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1470,"src":"364:310:4","usedErrors":[]}],"src":"117:558:4"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1547]},"id":1548,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1471,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1547,"linearizedBaseContracts":[1547],"name":"IERC20","nameLocation":"212:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"225:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1481,"name":"Transfer","nameLocation":"394:8:5","nodeType":"EventDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:5","nodeType":"VariableDeclaration","scope":1481,"src":"403:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:5","nodeType":"VariableDeclaration","scope":1481,"src":"425:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:5","nodeType":"VariableDeclaration","scope":1481,"src":"445:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:5"},"src":"388:72:5"},{"anonymous":false,"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"466:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1490,"name":"Approval","nameLocation":"625:8:5","nodeType":"EventDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:5","nodeType":"VariableDeclaration","scope":1490,"src":"634:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:5","nodeType":"VariableDeclaration","scope":1490,"src":"657:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:5","nodeType":"VariableDeclaration","scope":1490,"src":"682:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:5"},"src":"619:78:5"},{"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"703:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1496,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":1547,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"835:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1504,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":1504,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":1547,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"986:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1514,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:5","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"to","nameLocation":"1219:2:5","nodeType":"VariableDeclaration","scope":1514,"src":"1211:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"amount","nameLocation":"1231:6:5","nodeType":"VariableDeclaration","scope":1514,"src":"1223:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:5"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"1257:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1511,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:5"},"scope":1547,"src":"1193:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"1269:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1524,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:5","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"owner","nameLocation":"1565:5:5","nodeType":"VariableDeclaration","scope":1524,"src":"1557:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"spender","nameLocation":"1580:7:5","nodeType":"VariableDeclaration","scope":1524,"src":"1572:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:5"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"1612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:5"},"scope":1547,"src":"1538:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"1627:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1534,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:5","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"spender","nameLocation":"2299:7:5","nodeType":"VariableDeclaration","scope":1534,"src":"2291:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"amount","nameLocation":"2316:6:5","nodeType":"VariableDeclaration","scope":1534,"src":"2308:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:5"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1534,"src":"2342:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1531,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:5"},"scope":1547,"src":"2274:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"2354:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1546,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:5","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"from","nameLocation":"2676:4:5","nodeType":"VariableDeclaration","scope":1546,"src":"2668:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"to","nameLocation":"2690:2:5","nodeType":"VariableDeclaration","scope":1546,"src":"2682:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"amount","nameLocation":"2702:6:5","nodeType":"VariableDeclaration","scope":1546,"src":"2694:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:5"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"2728:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1543,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:5"},"scope":1547,"src":"2646:88:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1548,"src":"202:2534:5","usedErrors":[]}],"src":"106:2631:5"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1583]},"id":1584,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1549,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"148:480:6","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1583,"linearizedBaseContracts":[1583],"name":"IERC20Permit","nameLocation":"639:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"658:792:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1568,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:6","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"owner","nameLocation":"1488:5:6","nodeType":"VariableDeclaration","scope":1568,"src":"1480:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"spender","nameLocation":"1511:7:6","nodeType":"VariableDeclaration","scope":1568,"src":"1503:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"value","nameLocation":"1536:5:6","nodeType":"VariableDeclaration","scope":1568,"src":"1528:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:6","nodeType":"VariableDeclaration","scope":1568,"src":"1551:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"v","nameLocation":"1583:1:6","nodeType":"VariableDeclaration","scope":1568,"src":"1577:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1560,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"r","nameLocation":"1602:1:6","nodeType":"VariableDeclaration","scope":1568,"src":"1594:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"s","nameLocation":"1621:1:6","nodeType":"VariableDeclaration","scope":1568,"src":"1613:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:6"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[],"src":"1637:0:6"},"scope":1583,"src":"1455:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"1644:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1576,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:6","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"owner","nameLocation":"1967:5:6","nodeType":"VariableDeclaration","scope":1576,"src":"1959:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:6"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1576,"src":"1997:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:6"},"scope":1583,"src":"1943:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"2012:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1582,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:6","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"2223:2:6"},"returnParameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1582,"src":"2249:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:6"},"scope":1583,"src":"2198:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1584,"src":"629:1631:6","usedErrors":[]}],"src":"123:2138:6"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2289],"IERC20":[1547],"IERC20Permit":[1583],"SafeERC20":[1959]},"id":1960,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1585,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1960,"sourceUnit":1548,"src":"140:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1960,"sourceUnit":1584,"src":"164:40:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1960,"sourceUnit":2290,"src":"205:36:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"243:457:7","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1959,"linearizedBaseContracts":[1959],"name":"SafeERC20","nameLocation":"709:9:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1592,"libraryName":{"id":1590,"name":"Address","nameLocations":["731:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"731:7:7"},"nodeType":"UsingForDirective","src":"725:26:7","typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1615,"nodeType":"Block","src":"1013:103:7","statements":[{"expression":{"arguments":[{"id":1604,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1043:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1607,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1073:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"1073:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1098:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1102:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1605,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1603,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1023:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"1023:86:7"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"757:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:7","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"token","nameLocation":"970:5:7","nodeType":"VariableDeclaration","scope":1616,"src":"963:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1595,"nodeType":"UserDefinedTypeName","pathNode":{"id":1594,"name":"IERC20","nameLocations":["963:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"963:6:7"},"referencedDeclaration":1547,"src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"to","nameLocation":"985:2:7","nodeType":"VariableDeclaration","scope":1616,"src":"977:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"value","nameLocation":"997:5:7","nodeType":"VariableDeclaration","scope":1616,"src":"989:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:7"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"1013:0:7"},"scope":1959,"src":"941:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1642,"nodeType":"Block","src":"1445:113:7","statements":[{"expression":{"arguments":[{"id":1630,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"1475:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1633,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"1505:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"1505:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"1534:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1540:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1544:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1631,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1629,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1455:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"ExpressionStatement","src":"1455:96:7"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"1122:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:7","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"token","nameLocation":"1388:5:7","nodeType":"VariableDeclaration","scope":1643,"src":"1381:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1619,"nodeType":"UserDefinedTypeName","pathNode":{"id":1618,"name":"IERC20","nameLocations":["1381:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"1381:6:7"},"referencedDeclaration":1547,"src":"1381:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"from","nameLocation":"1403:4:7","nodeType":"VariableDeclaration","scope":1643,"src":"1395:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"to","nameLocation":"1417:2:7","nodeType":"VariableDeclaration","scope":1643,"src":"1409:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"value","nameLocation":"1429:5:7","nodeType":"VariableDeclaration","scope":1643,"src":"1421:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:7"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"1445:0:7"},"scope":1959,"src":"1355:203:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"1894:497:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"2143:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1959","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1959","typeString":"library SafeERC20"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:7","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"2190:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1659,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"2159:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1524,"src":"2159:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"2121:163:7"},{"expression":{"arguments":[{"id":1675,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"2314:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1678,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"2344:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1534,"src":"2344:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1681,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"2368:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"2377:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1676,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1674,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"2294:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"2294:90:7"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"1564:249:7","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"token","nameLocation":"1846:5:7","nodeType":"VariableDeclaration","scope":1687,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1646,"nodeType":"UserDefinedTypeName","pathNode":{"id":1645,"name":"IERC20","nameLocations":["1839:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"1839:6:7"},"referencedDeclaration":1547,"src":"1839:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"spender","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":1687,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"value","nameLocation":"1878:5:7","nodeType":"VariableDeclaration","scope":1687,"src":"1870:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:7"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"1894:0:7"},"scope":1959,"src":"1818:573:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1723,"nodeType":"Block","src":"2668:194:7","statements":[{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:7","nodeType":"VariableDeclaration","scope":1723,"src":"2678:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1708,"initialValue":{"arguments":[{"arguments":[{"id":1704,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1959","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1959","typeString":"library SafeERC20"}],"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:7","typeDescriptions":{}}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"2732:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1700,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2701:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1524,"src":"2701:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:7"},{"expression":{"arguments":[{"id":1710,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2770:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1713,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2800:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1534,"src":"2800:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1716,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"2824:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1717,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2833:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2848:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1711,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1709,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"2750:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"ExpressionStatement","src":"2750:105:7"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"2397:180:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:7","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"token","nameLocation":"2620:5:7","nodeType":"VariableDeclaration","scope":1724,"src":"2613:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1690,"nodeType":"UserDefinedTypeName","pathNode":{"id":1689,"name":"IERC20","nameLocations":["2613:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"2613:6:7"},"referencedDeclaration":1547,"src":"2613:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"spender","nameLocation":"2635:7:7","nodeType":"VariableDeclaration","scope":1724,"src":"2627:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"value","nameLocation":"2652:5:7","nodeType":"VariableDeclaration","scope":1724,"src":"2644:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:7"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[],"src":"2668:0:7"},"scope":1959,"src":"2582:280:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1768,"nodeType":"Block","src":"3139:321:7","statements":[{"id":1767,"nodeType":"UncheckedBlock","src":"3149:305:7","statements":[{"assignments":[1736],"declarations":[{"constant":false,"id":1736,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:7","nodeType":"VariableDeclaration","scope":1767,"src":"3173:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1745,"initialValue":{"arguments":[{"arguments":[{"id":1741,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1959","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1959","typeString":"library SafeERC20"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:7","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3227:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1737,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3196:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1524,"src":"3196:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1747,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"3257:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3273:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1752,"nodeType":"ExpressionStatement","src":"3249:75:7"},{"expression":{"arguments":[{"id":1754,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3358:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3388:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1534,"src":"3388:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:7","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1760,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3412:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"3421:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3436:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1755,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1753,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"3338:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1766,"nodeType":"ExpressionStatement","src":"3338:105:7"}]}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"2868:180:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1769,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:7","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"token","nameLocation":"3091:5:7","nodeType":"VariableDeclaration","scope":1769,"src":"3084:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1727,"nodeType":"UserDefinedTypeName","pathNode":{"id":1726,"name":"IERC20","nameLocations":["3084:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"3084:6:7"},"referencedDeclaration":1547,"src":"3084:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"spender","nameLocation":"3106:7:7","nodeType":"VariableDeclaration","scope":1769,"src":"3098:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"value","nameLocation":"3123:5:7","nodeType":"VariableDeclaration","scope":1769,"src":"3115:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:7"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"3139:0:7"},"scope":1959,"src":"3053:407:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"3833:333:7","statements":[{"assignments":[1781],"declarations":[{"constant":false,"id":1781,"mutability":"mutable","name":"approvalCall","nameLocation":"3856:12:7","nodeType":"VariableDeclaration","scope":1815,"src":"3843:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1780,"name":"bytes","nodeType":"ElementaryTypeName","src":"3843:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1790,"initialValue":{"arguments":[{"expression":{"expression":{"id":1784,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"3894:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3900:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1534,"src":"3894:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3908:8:7","memberName":"selector","nodeType":"MemberAccess","src":"3894:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"3918:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3927:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1782,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3871:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3875:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3871:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3843:90:7"},{"condition":{"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3948:45:7","subExpression":{"arguments":[{"id":1792,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"3973:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"id":1793,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"3980:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1791,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"3949:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3949:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"IfStatement","src":"3944:216:7","trueBody":{"id":1813,"nodeType":"Block","src":"3995:165:7","statements":[{"expression":{"arguments":[{"id":1797,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4029:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1800,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4059:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4065:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1534,"src":"4059:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:7","memberName":"selector","nodeType":"MemberAccess","src":"4059:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"4083:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1798,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4036:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4040:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4036:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4036:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1796,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"4009:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4009:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1807,"nodeType":"ExpressionStatement","src":"4009:86:7"},{"expression":{"arguments":[{"id":1809,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4129:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},{"id":1810,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4136:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1808,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"4109:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4109:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"4109:40:7"}]}}]},"documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"3466:285:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3765:12:7","nodeType":"FunctionDefinition","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"token","nameLocation":"3785:5:7","nodeType":"VariableDeclaration","scope":1816,"src":"3778:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1772,"nodeType":"UserDefinedTypeName","pathNode":{"id":1771,"name":"IERC20","nameLocations":["3778:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"3778:6:7"},"referencedDeclaration":1547,"src":"3778:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"spender","nameLocation":"3800:7:7","nodeType":"VariableDeclaration","scope":1816,"src":"3792:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"3817:5:7","nodeType":"VariableDeclaration","scope":1816,"src":"3809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3777:46:7"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[],"src":"3833:0:7"},"scope":1959,"src":"3756:410:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"4533:257:7","statements":[{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"nonceBefore","nameLocation":"4551:11:7","nodeType":"VariableDeclaration","scope":1872,"src":"4543:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"4543:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1843,"initialValue":{"arguments":[{"id":1841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"4578:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1839,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4565:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1583","typeString":"contract IERC20Permit"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4571:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"4565:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4565:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4543:41:7"},{"expression":{"arguments":[{"id":1847,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"4607:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1848,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"4614:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"4623:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1850,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"4630:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1851,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"4640:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1852,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"4643:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1853,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"4646:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1844,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4594:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1583","typeString":"contract IERC20Permit"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4600:6:7","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1568,"src":"4594:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4594:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"ExpressionStatement","src":"4594:54:7"},{"assignments":[1857],"declarations":[{"constant":false,"id":1857,"mutability":"mutable","name":"nonceAfter","nameLocation":"4666:10:7","nodeType":"VariableDeclaration","scope":1872,"src":"4658:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"4658:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1862,"initialValue":{"arguments":[{"id":1860,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"4692:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1858,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4679:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1583","typeString":"contract IERC20Permit"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4685:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"4679:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4679:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4658:40:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"4716:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"4730:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4730:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4747:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4708:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1871,"nodeType":"ExpressionStatement","src":"4708:75:7"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"4172:141:7","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4327:10:7","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"token","nameLocation":"4360:5:7","nodeType":"VariableDeclaration","scope":1873,"src":"4347:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1583","typeString":"contract IERC20Permit"},"typeName":{"id":1819,"nodeType":"UserDefinedTypeName","pathNode":{"id":1818,"name":"IERC20Permit","nameLocations":["4347:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1583,"src":"4347:12:7"},"referencedDeclaration":1583,"src":"4347:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1583","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"owner","nameLocation":"4383:5:7","nodeType":"VariableDeclaration","scope":1873,"src":"4375:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"spender","nameLocation":"4406:7:7","nodeType":"VariableDeclaration","scope":1873,"src":"4398:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"value","nameLocation":"4431:5:7","nodeType":"VariableDeclaration","scope":1873,"src":"4423:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"deadline","nameLocation":"4454:8:7","nodeType":"VariableDeclaration","scope":1873,"src":"4446:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"v","nameLocation":"4478:1:7","nodeType":"VariableDeclaration","scope":1873,"src":"4472:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1829,"name":"uint8","nodeType":"ElementaryTypeName","src":"4472:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"r","nameLocation":"4497:1:7","nodeType":"VariableDeclaration","scope":1873,"src":"4489:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"s","nameLocation":"4516:1:7","nodeType":"VariableDeclaration","scope":1873,"src":"4508:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4508:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4337:186:7"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"4533:0:7"},"scope":1959,"src":"4318:472:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"5243:572:7","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"returndata","nameLocation":"5605:10:7","nodeType":"VariableDeclaration","scope":1909,"src":"5592:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"5592:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1892,"initialValue":{"arguments":[{"id":1889,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5646:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5652:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1886,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"5626:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}],"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5618:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"5618:7:7","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5618:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5633:12:7","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"5618:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5618:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5592:95:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1894,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5705:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:6:7","memberName":"length","nodeType":"MemberAccess","src":"5705:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5726:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5705:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1900,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5742:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5755:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1901,"name":"bool","nodeType":"ElementaryTypeName","src":"5755:4:7","typeDescriptions":{}}}],"id":1903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5754:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1898,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5731:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5735:6:7","memberName":"decode","nodeType":"MemberAccess","src":"5731:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5731:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5705:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5763:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5697:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5697:111:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"5697:111:7"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"4796:372:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5182:19:7","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"token","nameLocation":"5209:5:7","nodeType":"VariableDeclaration","scope":1910,"src":"5202:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"IERC20","nameLocations":["5202:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"5202:6:7"},"referencedDeclaration":1547,"src":"5202:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"data","nameLocation":"5229:4:7","nodeType":"VariableDeclaration","scope":1910,"src":"5216:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1878,"name":"bytes","nodeType":"ElementaryTypeName","src":"5216:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5201:33:7"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"5243:0:7"},"scope":1959,"src":"5173:642:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1957,"nodeType":"Block","src":"6405:505:7","statements":[{"assignments":[1922,1924],"declarations":[{"constant":false,"id":1922,"mutability":"mutable","name":"success","nameLocation":"6706:7:7","nodeType":"VariableDeclaration","scope":1957,"src":"6701:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1921,"name":"bool","nodeType":"ElementaryTypeName","src":"6701:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"returndata","nameLocation":"6728:10:7","nodeType":"VariableDeclaration","scope":1957,"src":"6715:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"6715:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1932,"initialValue":{"arguments":[{"id":1930,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6762:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1927,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6750:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}],"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6742:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"6742:7:7","typeDescriptions":{}}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6742:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6757:4:7","memberName":"call","nodeType":"MemberAccess","src":"6742:19:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6742:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6700:67:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6796:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1934,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"6808:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6819:6:7","memberName":"length","nodeType":"MemberAccess","src":"6808:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6829:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6808:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1940,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"6845:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6858:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1941,"name":"bool","nodeType":"ElementaryTypeName","src":"6858:4:7","typeDescriptions":{}}}],"id":1943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1938,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6834:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6838:6:7","memberName":"decode","nodeType":"MemberAccess","src":"6834:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6808:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6807:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1952,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6896:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:7","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6888:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1948,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"6869:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2289_$","typeString":"type(library Address)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6877:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"6869:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6869:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:107:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1920,"id":1956,"nodeType":"Return","src":"6777:126:7"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"5821:490:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6325:23:7","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"token","nameLocation":"6356:5:7","nodeType":"VariableDeclaration","scope":1958,"src":"6349:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":1913,"nodeType":"UserDefinedTypeName","pathNode":{"id":1912,"name":"IERC20","nameLocations":["6349:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"6349:6:7"},"referencedDeclaration":1547,"src":"6349:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"data","nameLocation":"6376:4:7","nodeType":"VariableDeclaration","scope":1958,"src":"6363:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1915,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:33:7"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1958,"src":"6399:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1918,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:7"},"scope":1959,"src":"6316:594:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1960,"src":"701:6211:7","usedErrors":[]}],"src":"115:6798:7"}},"@openzeppelin/contracts/utils/Address.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2289]},"id":2290,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1961,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2289,"linearizedBaseContracts":[2289],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1976,"nodeType":"Block","src":"1478:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1970,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"1702:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:8","memberName":"code","nodeType":"MemberAccess","src":"1702:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:8","memberName":"length","nodeType":"MemberAccess","src":"1702:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1969,"id":1975,"nodeType":"Return","src":"1695:30:8"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"216:1191:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:8","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"account","nameLocation":"1440:7:8","nodeType":"VariableDeclaration","scope":1977,"src":"1432:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:8"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"1472:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1967,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:8"},"scope":2289,"src":"1412:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"2718:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1988,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2289","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2289","typeString":"library Address"}],"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:8","typeDescriptions":{}}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:8","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1991,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2761:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"2728:73:8"},{"assignments":[1997,null],"declarations":[{"constant":false,"id":1997,"mutability":"mutable","name":"success","nameLocation":"2818:7:8","nodeType":"VariableDeclaration","scope":2010,"src":"2813:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1996,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2004,"initialValue":{"arguments":[{"hexValue":"","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1998,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"2831:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:8","memberName":"call","nodeType":"MemberAccess","src":"2831:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2000,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2853:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:8"},{"expression":{"arguments":[{"id":2006,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2882:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"2874:78:8"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"1738:904:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:8","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:8","nodeType":"VariableDeclaration","scope":2011,"src":"2666:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"amount","nameLocation":"2701:6:8","nodeType":"VariableDeclaration","scope":2011,"src":"2693:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:8"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[],"src":"2718:0:8"},"scope":2289,"src":"2647:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"3790:96:8","statements":[{"expression":{"arguments":[{"id":2022,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"3829:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2023,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3837:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2021,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2069,2113],"referencedDeclaration":2113,"src":"3807:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2020,"id":2027,"nodeType":"Return","src":"3800:79:8"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"2965:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:8","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"target","nameLocation":"3731:6:8","nodeType":"VariableDeclaration","scope":2029,"src":"3723:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"data","nameLocation":"3752:4:8","nodeType":"VariableDeclaration","scope":2029,"src":"3739:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2015,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:8"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"3776:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:8"},"scope":2289,"src":"3701:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2048,"nodeType":"Block","src":"4255:76:8","statements":[{"expression":{"arguments":[{"id":2042,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4294:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"4302:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2045,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"4311:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2041,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2069,2113],"referencedDeclaration":2113,"src":"4272:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2040,"id":2047,"nodeType":"Return","src":"4265:59:8"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"3892:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:8","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"target","nameLocation":"4147:6:8","nodeType":"VariableDeclaration","scope":2049,"src":"4139:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"data","nameLocation":"4176:4:8","nodeType":"VariableDeclaration","scope":2049,"src":"4163:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2033,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:8","nodeType":"VariableDeclaration","scope":2049,"src":"4190:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2035,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:8"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"4241:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2038,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:8"},"scope":2289,"src":"4108:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"4806:111:8","statements":[{"expression":{"arguments":[{"id":2062,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"4845:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2063,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"4853:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"4859:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2061,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2069,2113],"referencedDeclaration":2113,"src":"4823:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2060,"id":2067,"nodeType":"Return","src":"4816:94:8"}]},"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"4337:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:8","nodeType":"FunctionDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"target","nameLocation":"4732:6:8","nodeType":"VariableDeclaration","scope":2069,"src":"4724:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"data","nameLocation":"4753:4:8","nodeType":"VariableDeclaration","scope":2069,"src":"4740:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2053,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"value","nameLocation":"4767:5:8","nodeType":"VariableDeclaration","scope":2069,"src":"4759:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:8"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"4792:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2058,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:8"},"scope":2289,"src":"4693:224:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"5344:267:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2086,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2289","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2289","typeString":"library Address"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:8","typeDescriptions":{}}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:8","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"5387:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2093,"nodeType":"ExpressionStatement","src":"5354:81:8"},{"assignments":[2095,2097],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"success","nameLocation":"5451:7:8","nodeType":"VariableDeclaration","scope":2112,"src":"5446:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2094,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:8","nodeType":"VariableDeclaration","scope":2112,"src":"5460:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2104,"initialValue":{"arguments":[{"id":2102,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"5513:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2098,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"5487:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:8","memberName":"call","nodeType":"MemberAccess","src":"5487:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"5506:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:8"},{"expression":{"arguments":[{"id":2106,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"5562:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2107,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"5570:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2108,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5579:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2109,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"5591:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2105,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"5535:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2082,"id":2111,"nodeType":"Return","src":"5528:76:8"}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"4923:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:8","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"target","nameLocation":"5213:6:8","nodeType":"VariableDeclaration","scope":2113,"src":"5205:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"data","nameLocation":"5242:4:8","nodeType":"VariableDeclaration","scope":2113,"src":"5229:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2073,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"value","nameLocation":"5264:5:8","nodeType":"VariableDeclaration","scope":2113,"src":"5256:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:8","nodeType":"VariableDeclaration","scope":2113,"src":"5279:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2077,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:8"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"5330:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2080,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:8"},"scope":2289,"src":"5165:446:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2129,"nodeType":"Block","src":"5888:97:8","statements":[{"expression":{"arguments":[{"id":2124,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5924:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2125,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"5932:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2123,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2130,2159],"referencedDeclaration":2159,"src":"5905:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2122,"id":2128,"nodeType":"Return","src":"5898:80:8"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"5617:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2130,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:8","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"target","nameLocation":"5824:6:8","nodeType":"VariableDeclaration","scope":2130,"src":"5816:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"data","nameLocation":"5845:4:8","nodeType":"VariableDeclaration","scope":2130,"src":"5832:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2117,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:8"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"5874:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2120,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:8"},"scope":2289,"src":"5788:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"6327:168:8","statements":[{"assignments":[2143,2145],"declarations":[{"constant":false,"id":2143,"mutability":"mutable","name":"success","nameLocation":"6343:7:8","nodeType":"VariableDeclaration","scope":2158,"src":"6338:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2142,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:8","nodeType":"VariableDeclaration","scope":2158,"src":"6352:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2144,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2150,"initialValue":{"arguments":[{"id":2148,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"6397:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2146,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"6379:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:8"},{"expression":{"arguments":[{"id":2152,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"6446:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"6454:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2154,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"6463:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2155,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6475:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2151,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6419:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2141,"id":2157,"nodeType":"Return","src":"6412:76:8"}]},"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"5991:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:8","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"target","nameLocation":"6214:6:8","nodeType":"VariableDeclaration","scope":2159,"src":"6206:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"data","nameLocation":"6243:4:8","nodeType":"VariableDeclaration","scope":2159,"src":"6230:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2134,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:8","nodeType":"VariableDeclaration","scope":2159,"src":"6257:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2136,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:8"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2159,"src":"6313:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:8"},"scope":2289,"src":"6169:326:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2175,"nodeType":"Block","src":"6771:101:8","statements":[{"expression":{"arguments":[{"id":2170,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"6809:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2171,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"6817:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2169,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2176,2205],"referencedDeclaration":2205,"src":"6788:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2168,"id":2174,"nodeType":"Return","src":"6781:84:8"}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"6501:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:8","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"target","nameLocation":"6712:6:8","nodeType":"VariableDeclaration","scope":2176,"src":"6704:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"data","nameLocation":"6733:4:8","nodeType":"VariableDeclaration","scope":2176,"src":"6720:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2163,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:8"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2176,"src":"6757:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2166,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:8"},"scope":2289,"src":"6674:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"7213:170:8","statements":[{"assignments":[2189,2191],"declarations":[{"constant":false,"id":2189,"mutability":"mutable","name":"success","nameLocation":"7229:7:8","nodeType":"VariableDeclaration","scope":2204,"src":"7224:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2188,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2191,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:8","nodeType":"VariableDeclaration","scope":2204,"src":"7238:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2190,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2196,"initialValue":{"arguments":[{"id":2194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"7285:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2192,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"7265:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:8"},{"expression":{"arguments":[{"id":2198,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"7334:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2199,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"7342:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2200,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"7351:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2201,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"7363:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2197,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"7307:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2187,"id":2203,"nodeType":"Return","src":"7300:76:8"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"6878:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:8","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"target","nameLocation":"7105:6:8","nodeType":"VariableDeclaration","scope":2205,"src":"7097:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"data","nameLocation":"7134:4:8","nodeType":"VariableDeclaration","scope":2205,"src":"7121:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2180,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:8","nodeType":"VariableDeclaration","scope":2205,"src":"7148:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2182,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:8"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"7199:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2185,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:8"},"scope":2289,"src":"7058:325:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2243,"nodeType":"Block","src":"7865:434:8","statements":[{"condition":{"id":2219,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"7879:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2241,"nodeType":"Block","src":"8235:58:8","statements":[{"expression":{"arguments":[{"id":2237,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"8257:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2238,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"8269:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2236,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"8249:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"ExpressionStatement","src":"8249:33:8"}]},"id":2242,"nodeType":"IfStatement","src":"7875:418:8","trueBody":{"id":2235,"nodeType":"Block","src":"7888:341:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2220,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7906:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:8","memberName":"length","nodeType":"MemberAccess","src":"7906:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"7902:286:8","trueBody":{"id":2231,"nodeType":"Block","src":"7930:258:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2226,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"8132:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2225,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"8121:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2230,"nodeType":"ExpressionStatement","src":"8113:60:8"}]}},{"expression":{"id":2233,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"8208:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2218,"id":2234,"nodeType":"Return","src":"8201:17:8"}]}}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"7389:277:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:8","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"target","nameLocation":"7724:6:8","nodeType":"VariableDeclaration","scope":2244,"src":"7716:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"success","nameLocation":"7745:7:8","nodeType":"VariableDeclaration","scope":2244,"src":"7740:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2209,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:8","nodeType":"VariableDeclaration","scope":2244,"src":"7762:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2211,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:8","nodeType":"VariableDeclaration","scope":2244,"src":"7795:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2213,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:8"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"7851:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2216,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:8"},"scope":2289,"src":"7671:628:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"8680:135:8","statements":[{"condition":{"id":2256,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"8694:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2265,"nodeType":"Block","src":"8751:58:8","statements":[{"expression":{"arguments":[{"id":2261,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"8773:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2262,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8785:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2260,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"8765:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2264,"nodeType":"ExpressionStatement","src":"8765:33:8"}]},"id":2266,"nodeType":"IfStatement","src":"8690:119:8","trueBody":{"id":2259,"nodeType":"Block","src":"8703:42:8","statements":[{"expression":{"id":2257,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"8724:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2255,"id":2258,"nodeType":"Return","src":"8717:17:8"}]}}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"8305:210:8","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:8","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"success","nameLocation":"8560:7:8","nodeType":"VariableDeclaration","scope":2268,"src":"8555:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2246,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:8","nodeType":"VariableDeclaration","scope":2268,"src":"8577:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2248,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:8","nodeType":"VariableDeclaration","scope":2268,"src":"8610:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2250,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:8"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"8666:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2253,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:8"},"scope":2289,"src":"8520:295:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"8904:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2275,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"8980:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:8","memberName":"length","nodeType":"MemberAccess","src":"8980:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2285,"nodeType":"Block","src":"9310:45:8","statements":[{"expression":{"arguments":[{"id":2282,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"9331:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2281,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2284,"nodeType":"ExpressionStatement","src":"9324:20:8"}]},"id":2286,"nodeType":"IfStatement","src":"8976:379:8","trueBody":{"id":2280,"nodeType":"Block","src":"9003:301:8","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:8","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:8"},"nodeType":"YulFunctionCall","src":"9202:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:8"},"nodeType":"YulFunctionCall","src":"9243:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:8"},"nodeType":"YulFunctionCall","src":"9236:44:8"},"nodeType":"YulExpressionStatement","src":"9236:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2270,"isOffset":false,"isSlot":false,"src":"9208:10:8","valueSize":1},{"declaration":2270,"isOffset":false,"isSlot":false,"src":"9251:10:8","valueSize":1}],"id":2279,"nodeType":"InlineAssembly","src":"9152:142:8"}]}}]},"id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:8","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:8","nodeType":"VariableDeclaration","scope":2288,"src":"8838:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2269,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:8","nodeType":"VariableDeclaration","scope":2288,"src":"8863:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2271,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:8"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[],"src":"8904:0:8"},"scope":2289,"src":"8821:540:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2290,"src":"194:9169:8","usedErrors":[]}],"src":"101:9263:8"}},"@openzeppelin/contracts/utils/Context.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2311]},"id":2312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2291,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"111:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2311,"linearizedBaseContracts":[2311],"name":"Context","nameLocation":"626:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2300,"nodeType":"Block","src":"702:34:9","statements":[{"expression":{"expression":{"id":2297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:9","memberName":"sender","nodeType":"MemberAccess","src":"719:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2296,"id":2299,"nodeType":"Return","src":"712:17:9"}]},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:9","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[],"src":"659:2:9"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"693:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:9"},"scope":2311,"src":"640:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"809:32:9","statements":[{"expression":{"expression":{"id":2306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:9","memberName":"data","nodeType":"MemberAccess","src":"826:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2305,"id":2308,"nodeType":"Return","src":"819:15:9"}]},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:9","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"759:2:9"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"793:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2303,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:9"},"scope":2311,"src":"742:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2312,"src":"608:235:9","usedErrors":[]}],"src":"86:758:9"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3808],"SignedMath":[3913],"Strings":[2540]},"id":2541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2313,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2541,"sourceUnit":3809,"src":"126:25:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2541,"sourceUnit":3914,"src":"152:31:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"185:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":2540,"linearizedBaseContracts":[2540],"name":"Strings","nameLocation":"228:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2319,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:10","nodeType":"VariableDeclaration","scope":2540,"src":"242:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2317,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2322,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:10","nodeType":"VariableDeclaration","scope":2540,"src":"302:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2320,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2369,"nodeType":"Block","src":"518:625:10","statements":[{"id":2368,"nodeType":"UncheckedBlock","src":"528:609:10","statements":[{"assignments":[2331],"declarations":[{"constant":false,"id":2331,"mutability":"mutable","name":"length","nameLocation":"560:6:10","nodeType":"VariableDeclaration","scope":2368,"src":"552:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2338,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"580:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2332,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"569:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3808_$","typeString":"type(library Math)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3645,"src":"569:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:10"},{"assignments":[2340],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"buffer","nameLocation":"618:6:10","nodeType":"VariableDeclaration","scope":2368,"src":"604:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2345,"initialValue":{"arguments":[{"id":2343,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"638:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:10"},{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"ptr","nameLocation":"667:3:10","nodeType":"VariableDeclaration","scope":2368,"src":"659:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2348,"nodeType":"VariableDeclarationStatement","src":"659:11:10"},{"AST":{"nodeType":"YulBlock","src":"740:67:10","statements":[{"nodeType":"YulAssignment","src":"758:35:10","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:10","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:10"},"nodeType":"YulFunctionCall","src":"777:15:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:10"},"nodeType":"YulFunctionCall","src":"765:28:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2340,"isOffset":false,"isSlot":false,"src":"769:6:10","valueSize":1},{"declaration":2331,"isOffset":false,"isSlot":false,"src":"785:6:10","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"758:3:10","valueSize":1}],"id":2349,"nodeType":"InlineAssembly","src":"731:76:10"},{"body":{"id":2364,"nodeType":"Block","src":"833:267:10","statements":[{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:10","subExpression":{"id":2351,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"851:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2353,"nodeType":"ExpressionStatement","src":"851:5:10"},{"AST":{"nodeType":"YulBlock","src":"934:84:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:10"},"nodeType":"YulFunctionCall","src":"974:14:10"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:10"},"nodeType":"YulFunctionCall","src":"969:30:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:10"},"nodeType":"YulFunctionCall","src":"956:44:10"},"nodeType":"YulExpressionStatement","src":"956:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2319,"isOffset":false,"isSlot":false,"src":"990:8:10","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"964:3:10","valueSize":1},{"declaration":2325,"isOffset":false,"isSlot":false,"src":"978:5:10","valueSize":1}],"id":2354,"nodeType":"InlineAssembly","src":"925:93:10"},{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"1035:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2358,"nodeType":"ExpressionStatement","src":"1035:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"1068:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2363,"nodeType":"IfStatement","src":"1064:21:10","trueBody":{"id":2362,"nodeType":"Break","src":"1080:5:10"}}]},"condition":{"hexValue":"74727565","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2365,"nodeType":"WhileStatement","src":"820:280:10"},{"expression":{"id":2366,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"1120:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2329,"id":2367,"nodeType":"Return","src":"1113:13:10"}]}]},"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"352:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2370,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:10","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"value","nameLocation":"473:5:10","nodeType":"VariableDeclaration","scope":2370,"src":"465:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:10"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"503:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2327,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:10"},"scope":2540,"src":"447:696:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2397,"nodeType":"Block","src":"1313:103:10","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1354:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:10","trueExpression":{"hexValue":"2d","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1400:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2389,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"1385:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3913_$","typeString":"type(library SignedMath)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"1385:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2370,2398],"referencedDeclaration":2370,"src":"1376:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2380,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2378,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:10","typeDescriptions":{}}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2377,"id":2396,"nodeType":"Return","src":"1323:86:10"}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"1149:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:10","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"value","nameLocation":"1268:5:10","nodeType":"VariableDeclaration","scope":2398,"src":"1261:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2372,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:10"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"1298:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2375,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:10"},"scope":2540,"src":"1243:173:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"1595:100:10","statements":[{"id":2416,"nodeType":"UncheckedBlock","src":"1605:84:10","statements":[{"expression":{"arguments":[{"id":2407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"1648:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"1667:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2408,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"1655:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3808_$","typeString":"type(library Math)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"1655:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2406,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2418,2494,2514],"referencedDeclaration":2494,"src":"1636:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2405,"id":2415,"nodeType":"Return","src":"1629:49:10"}]}]},"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"1422:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:10","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"value","nameLocation":"1550:5:10","nodeType":"VariableDeclaration","scope":2418,"src":"1542:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:10"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"1580:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2403,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:10"},"scope":2540,"src":"1521:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2493,"nodeType":"Block","src":"1908:347:10","statements":[{"assignments":[2429],"declarations":[{"constant":false,"id":2429,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:10","nodeType":"VariableDeclaration","scope":2493,"src":"1918:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2428,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2438,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2433,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1954:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2430,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:10"},{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2439,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"1975:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2441,"indexExpression":{"hexValue":"30","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2444,"nodeType":"ExpressionStatement","src":"1975:15:10"},{"expression":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2445,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2000:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2447,"indexExpression":{"hexValue":"31","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2450,"nodeType":"ExpressionStatement","src":"2000:15:10"},{"body":{"id":2479,"nodeType":"Block","src":"2070:83:10","statements":[{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2465,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2084:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2467,"indexExpression":{"id":2466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"2091:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2468,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"2096:8:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2472,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2105:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2474,"nodeType":"ExpressionStatement","src":"2084:33:10"},{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2131:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ExpressionStatement","src":"2131:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"2058:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2480,"initializationExpression":{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"i","nameLocation":"2038:1:10","nodeType":"VariableDeclaration","scope":2480,"src":"2030:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2458,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2454,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2046:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:10"},"loopExpression":{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:10","subExpression":{"id":2462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"2067:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"2065:3:10"},"nodeType":"ForStatement","src":"2025:128:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2170:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"ExpressionStatement","src":"2162:55:10"},{"expression":{"arguments":[{"id":2490,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2241:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2488,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:10","typeDescriptions":{}}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2427,"id":2492,"nodeType":"Return","src":"2227:21:10"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1701:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:10","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"value","nameLocation":"1847:5:10","nodeType":"VariableDeclaration","scope":2494,"src":"1839:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"length","nameLocation":"1862:6:10","nodeType":"VariableDeclaration","scope":2494,"src":"1854:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:10"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2494,"src":"1893:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2425,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:10"},"scope":2540,"src":"1818:437:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2513,"nodeType":"Block","src":"2480:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2507,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"2525:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2505,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:10","typeDescriptions":{}}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:10","typeDescriptions":{}}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2510,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2533:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2502,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2418,2494,2514],"referencedDeclaration":2494,"src":"2497:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2501,"id":2512,"nodeType":"Return","src":"2490:59:10"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"2261:141:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:10","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"addr","nameLocation":"2436:4:10","nodeType":"VariableDeclaration","scope":2514,"src":"2428:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:10"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2514,"src":"2465:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2499,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:10"},"scope":2540,"src":"2407:149:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2538,"nodeType":"Block","src":"2711:66:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"2744:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2525,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:10","typeDescriptions":{}}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2524,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"2767:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2531,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:10","typeDescriptions":{}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2530,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2523,"id":2537,"nodeType":"Return","src":"2721:49:10"}]},"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"2562:66:10","text":" @dev Returns true if the two strings are equal."},"id":2539,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:10","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"a","nameLocation":"2662:1:10","nodeType":"VariableDeclaration","scope":2539,"src":"2648:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2516,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"b","nameLocation":"2679:1:10","nodeType":"VariableDeclaration","scope":2539,"src":"2665:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2518,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:10"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2539,"src":"2705:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2521,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:10"},"scope":2540,"src":"2633:144:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2541,"src":"220:2559:10","usedErrors":[]}],"src":"101:2679:10"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2906],"Math":[3808],"SignedMath":[3913],"Strings":[2540]},"id":2907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2542,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2907,"sourceUnit":2541,"src":"137:24:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"163:205:11","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2906,"linearizedBaseContracts":[2906],"name":"ECDSA","nameLocation":"377:5:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2550,"members":[{"id":2545,"name":"NoError","nameLocation":"417:7:11","nodeType":"EnumValue","src":"417:7:11"},{"id":2546,"name":"InvalidSignature","nameLocation":"434:16:11","nodeType":"EnumValue","src":"434:16:11"},{"id":2547,"name":"InvalidSignatureLength","nameLocation":"460:22:11","nodeType":"EnumValue","src":"460:22:11"},{"id":2548,"name":"InvalidSignatureS","nameLocation":"492:17:11","nodeType":"EnumValue","src":"492:17:11"},{"id":2549,"name":"InvalidSignatureV","nameLocation":"519:17:11","nodeType":"EnumValue","src":"519:17:11"}],"name":"RecoverError","nameLocation":"394:12:11","nodeType":"EnumDefinition","src":"389:175:11"},{"body":{"id":2593,"nodeType":"Block","src":"624:457:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"638:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2557,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"647:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2545,"src":"647:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"734:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2563,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"743:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"743:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"843:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2572,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"852:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"852:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"965:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2581,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"974:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"974:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2589,"nodeType":"IfStatement","src":"961:114:11","trueBody":{"id":2588,"nodeType":"Block","src":"1006:69:11","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2584,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2587,"nodeType":"ExpressionStatement","src":"1020:44:11"}]}},"id":2590,"nodeType":"IfStatement","src":"839:236:11","trueBody":{"id":2579,"nodeType":"Block","src":"889:66:11","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2575,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"ExpressionStatement","src":"903:41:11"}]}},"id":2591,"nodeType":"IfStatement","src":"730:345:11","trueBody":{"id":2570,"nodeType":"Block","src":"774:59:11","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2566,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2569,"nodeType":"ExpressionStatement","src":"788:34:11"}]}},"id":2592,"nodeType":"IfStatement","src":"634:441:11","trueBody":{"id":2561,"nodeType":"Block","src":"669:55:11","statements":[{"functionReturnParameters":2555,"id":2560,"nodeType":"Return","src":"683:7:11"}]}}]},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:11","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"error","nameLocation":"604:5:11","nodeType":"VariableDeclaration","scope":2594,"src":"591:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2552,"nodeType":"UserDefinedTypeName","pathNode":{"id":2551,"name":"RecoverError","nameLocations":["591:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"591:12:11"},"referencedDeclaration":2550,"src":"591:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:11"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[],"src":"624:0:11"},"scope":2906,"src":"570:511:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2639,"nodeType":"Block","src":"2249:626:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2607,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"2263:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:11","memberName":"length","nodeType":"MemberAccess","src":"2263:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2637,"nodeType":"Block","src":"2788:81:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:11","typeDescriptions":{}}},"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2633,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"2822:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"2822:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}}],"id":2635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2606,"id":2636,"nodeType":"Return","src":"2802:56:11"}]},"id":2638,"nodeType":"IfStatement","src":"2259:610:11","trueBody":{"id":2628,"nodeType":"Block","src":"2287:495:11","statements":[{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"r","nameLocation":"2309:1:11","nodeType":"VariableDeclaration","scope":2628,"src":"2301:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2613,"nodeType":"VariableDeclarationStatement","src":"2301:9:11"},{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"s","nameLocation":"2332:1:11","nodeType":"VariableDeclaration","scope":2628,"src":"2324:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2616,"nodeType":"VariableDeclarationStatement","src":"2324:9:11"},{"assignments":[2618],"declarations":[{"constant":false,"id":2618,"mutability":"mutable","name":"v","nameLocation":"2353:1:11","nodeType":"VariableDeclaration","scope":2628,"src":"2347:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2617,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2619,"nodeType":"VariableDeclarationStatement","src":"2347:7:11"},{"AST":{"nodeType":"YulBlock","src":"2555:171:11","statements":[{"nodeType":"YulAssignment","src":"2573:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:11"},"nodeType":"YulFunctionCall","src":"2584:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:11"},"nodeType":"YulFunctionCall","src":"2578:27:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:11"}]},{"nodeType":"YulAssignment","src":"2622:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:11"},"nodeType":"YulFunctionCall","src":"2633:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:11"},"nodeType":"YulFunctionCall","src":"2627:27:11"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:11"}]},{"nodeType":"YulAssignment","src":"2671:41:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:11"},"nodeType":"YulFunctionCall","src":"2690:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:11"},"nodeType":"YulFunctionCall","src":"2684:27:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:11"},"nodeType":"YulFunctionCall","src":"2676:36:11"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2612,"isOffset":false,"isSlot":false,"src":"2573:1:11","valueSize":1},{"declaration":2615,"isOffset":false,"isSlot":false,"src":"2622:1:11","valueSize":1},{"declaration":2599,"isOffset":false,"isSlot":false,"src":"2588:9:11","valueSize":1},{"declaration":2599,"isOffset":false,"isSlot":false,"src":"2637:9:11","valueSize":1},{"declaration":2599,"isOffset":false,"isSlot":false,"src":"2694:9:11","valueSize":1},{"declaration":2618,"isOffset":false,"isSlot":false,"src":"2671:1:11","valueSize":1}],"id":2620,"nodeType":"InlineAssembly","src":"2546:180:11"},{"expression":{"arguments":[{"id":2622,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"2757:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2623,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"2763:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2624,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"2766:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2625,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2769:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2621,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2640,2714,2808],"referencedDeclaration":2808,"src":"2746:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2606,"id":2627,"nodeType":"Return","src":"2739:32:11"}]}}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"1087:1053:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2640,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:11","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"hash","nameLocation":"2173:4:11","nodeType":"VariableDeclaration","scope":2640,"src":"2165:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"signature","nameLocation":"2192:9:11","nodeType":"VariableDeclaration","scope":2640,"src":"2179:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2598,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:11"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"2226:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"2235:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2604,"nodeType":"UserDefinedTypeName","pathNode":{"id":2603,"name":"RecoverError","nameLocations":["2235:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"2235:12:11"},"referencedDeclaration":2550,"src":"2235:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:11"},"scope":2906,"src":"2145:730:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"3748:140:11","statements":[{"assignments":[2651,2654],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:11","nodeType":"VariableDeclaration","scope":2666,"src":"3759:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"error","nameLocation":"3791:5:11","nodeType":"VariableDeclaration","scope":2666,"src":"3778:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2653,"nodeType":"UserDefinedTypeName","pathNode":{"id":2652,"name":"RecoverError","nameLocations":["3778:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"3778:12:11"},"referencedDeclaration":2550,"src":"3778:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2659,"initialValue":{"arguments":[{"id":2656,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"3811:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2657,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"3817:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2655,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2640,2714,2808],"referencedDeclaration":2640,"src":"3800:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:11"},{"expression":{"arguments":[{"id":2661,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"3849:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}],"id":2660,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"3837:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2550_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"ExpressionStatement","src":"3837:18:11"},{"expression":{"id":2664,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3872:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2649,"id":2665,"nodeType":"Return","src":"3865:16:11"}]},"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"2881:775:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:11","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"hash","nameLocation":"3686:4:11","nodeType":"VariableDeclaration","scope":2667,"src":"3678:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"signature","nameLocation":"3705:9:11","nodeType":"VariableDeclaration","scope":2667,"src":"3692:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2644,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:11"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2667,"src":"3739:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:11"},"scope":2906,"src":"3661:227:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"4245:203:11","statements":[{"assignments":[2683],"declarations":[{"constant":false,"id":2683,"mutability":"mutable","name":"s","nameLocation":"4263:1:11","nodeType":"VariableDeclaration","scope":2713,"src":"4255:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2690,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"4267:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:11","typeDescriptions":{}}},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:11"},{"assignments":[2692],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"v","nameLocation":"4363:1:11","nodeType":"VariableDeclaration","scope":2713,"src":"4357:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2691,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2705,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2697,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"4382:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:11","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2693,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:11","typeDescriptions":{}}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:11"},{"expression":{"arguments":[{"id":2707,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4427:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2708,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"4433:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2709,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4436:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2710,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"4439:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2706,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2640,2714,2808],"referencedDeclaration":2808,"src":"4416:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2681,"id":2712,"nodeType":"Return","src":"4409:32:11"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"3894:243:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:11","nodeType":"FunctionDefinition","parameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"hash","nameLocation":"4170:4:11","nodeType":"VariableDeclaration","scope":2714,"src":"4162:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"r","nameLocation":"4184:1:11","nodeType":"VariableDeclaration","scope":2714,"src":"4176:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"vs","nameLocation":"4195:2:11","nodeType":"VariableDeclaration","scope":2714,"src":"4187:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:11"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"4222:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"4231:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2679,"nodeType":"UserDefinedTypeName","pathNode":{"id":2678,"name":"RecoverError","nameLocations":["4231:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"4231:12:11"},"referencedDeclaration":2550,"src":"4231:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:11"},"scope":2906,"src":"4142:306:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2743,"nodeType":"Block","src":"4699:136:11","statements":[{"assignments":[2727,2730],"declarations":[{"constant":false,"id":2727,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:11","nodeType":"VariableDeclaration","scope":2743,"src":"4710:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"error","nameLocation":"4742:5:11","nodeType":"VariableDeclaration","scope":2743,"src":"4729:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2729,"nodeType":"UserDefinedTypeName","pathNode":{"id":2728,"name":"RecoverError","nameLocations":["4729:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"4729:12:11"},"referencedDeclaration":2550,"src":"4729:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2736,"initialValue":{"arguments":[{"id":2732,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"4762:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2733,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"4768:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2734,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4771:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2731,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2640,2714,2808],"referencedDeclaration":2714,"src":"4751:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:11"},{"expression":{"arguments":[{"id":2738,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"4796:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}],"id":2737,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4784:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2550_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2740,"nodeType":"ExpressionStatement","src":"4784:18:11"},{"expression":{"id":2741,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"4819:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2725,"id":2742,"nodeType":"Return","src":"4812:16:11"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"4454:154:11","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2744,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:11","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"hash","nameLocation":"4638:4:11","nodeType":"VariableDeclaration","scope":2744,"src":"4630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"r","nameLocation":"4652:1:11","nodeType":"VariableDeclaration","scope":2744,"src":"4644:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"vs","nameLocation":"4663:2:11","nodeType":"VariableDeclaration","scope":2744,"src":"4655:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:11"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2744,"src":"4690:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:11"},"scope":2906,"src":"4613:222:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2807,"nodeType":"Block","src":"5120:1345:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2763,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6016:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:11","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2776,"nodeType":"IfStatement","src":"6004:161:11","trueBody":{"id":2775,"nodeType":"Block","src":"6089:76:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:11","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2771,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6123:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"6123:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}}],"id":2773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2760,"id":2774,"nodeType":"Return","src":"6103:51:11"}]}},{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"signer","nameLocation":"6267:6:11","nodeType":"VariableDeclaration","scope":2807,"src":"6259:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2785,"initialValue":{"arguments":[{"id":2780,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6286:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2781,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"6292:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2782,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"6295:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2783,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6298:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2779,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"6314:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:11","typeDescriptions":{}}},"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2801,"nodeType":"IfStatement","src":"6310:101:11","trueBody":{"id":2800,"nodeType":"Block","src":"6336:75:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:11","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2796,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6370:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"6370:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}}],"id":2798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2760,"id":2799,"nodeType":"Return","src":"6350:50:11"}]}},{"expression":{"components":[{"id":2802,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"6429:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2803,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6437:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2550_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2545,"src":"6437:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}}],"id":2805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2760,"id":2806,"nodeType":"Return","src":"6421:37:11"}]},"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"4841:163:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:11","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"hash","nameLocation":"5037:4:11","nodeType":"VariableDeclaration","scope":2808,"src":"5029:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"v","nameLocation":"5049:1:11","nodeType":"VariableDeclaration","scope":2808,"src":"5043:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2748,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"r","nameLocation":"5060:1:11","nodeType":"VariableDeclaration","scope":2808,"src":"5052:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"s","nameLocation":"5071:1:11","nodeType":"VariableDeclaration","scope":2808,"src":"5063:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:11"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"5097:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"5106:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2758,"nodeType":"UserDefinedTypeName","pathNode":{"id":2757,"name":"RecoverError","nameLocations":["5106:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"5106:12:11"},"referencedDeclaration":2550,"src":"5106:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:11"},"scope":2906,"src":"5009:1456:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"6692:138:11","statements":[{"assignments":[2823,2826],"declarations":[{"constant":false,"id":2823,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:11","nodeType":"VariableDeclaration","scope":2840,"src":"6703:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"error","nameLocation":"6735:5:11","nodeType":"VariableDeclaration","scope":2840,"src":"6722:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2825,"nodeType":"UserDefinedTypeName","pathNode":{"id":2824,"name":"RecoverError","nameLocations":["6722:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"6722:12:11"},"referencedDeclaration":2550,"src":"6722:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2833,"initialValue":{"arguments":[{"id":2828,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"6755:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2829,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"6761:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2830,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"6764:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2831,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6767:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2827,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2640,2714,2808],"referencedDeclaration":2808,"src":"6744:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2550_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:11"},{"expression":{"arguments":[{"id":2835,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"6791:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2550","typeString":"enum ECDSA.RecoverError"}],"id":2834,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"6779:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2550_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"ExpressionStatement","src":"6779:18:11"},{"expression":{"id":2838,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"6814:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2821,"id":2839,"nodeType":"Return","src":"6807:16:11"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"6471:122:11","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:11","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"hash","nameLocation":"6623:4:11","nodeType":"VariableDeclaration","scope":2841,"src":"6615:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"v","nameLocation":"6635:1:11","nodeType":"VariableDeclaration","scope":2841,"src":"6629:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2812,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"r","nameLocation":"6646:1:11","nodeType":"VariableDeclaration","scope":2841,"src":"6638:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"s","nameLocation":"6657:1:11","nodeType":"VariableDeclaration","scope":2841,"src":"6649:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:11"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2841,"src":"6683:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:11"},"scope":2906,"src":"6598:232:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2850,"nodeType":"Block","src":"7206:310:11","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:11","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:11","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:11"},"nodeType":"YulFunctionCall","src":"7376:48:11"},"nodeType":"YulExpressionStatement","src":"7376:48:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:11","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:11"},"nodeType":"YulFunctionCall","src":"7437:18:11"},"nodeType":"YulExpressionStatement","src":"7437:18:11"},{"nodeType":"YulAssignment","src":"7468:32:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:11","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:11"},"nodeType":"YulFunctionCall","src":"7479:21:11"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2844,"isOffset":false,"isSlot":false,"src":"7450:4:11","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"7468:7:11","valueSize":1}],"id":2849,"nodeType":"InlineAssembly","src":"7353:157:11"}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"6836:279:11","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:11","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"hash","nameLocation":"7160:4:11","nodeType":"VariableDeclaration","scope":2851,"src":"7152:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:11"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"message","nameLocation":"7197:7:11","nodeType":"VariableDeclaration","scope":2851,"src":"7189:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:11"},"scope":2906,"src":"7120:396:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2872,"nodeType":"Block","src":"7881:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2865,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"7976:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:11","memberName":"length","nodeType":"MemberAccess","src":"7976:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2863,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"7959:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2540_$","typeString":"type(library Strings)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2370,"src":"7959:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2868,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"7987:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2860,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2859,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2858,"id":2871,"nodeType":"Return","src":"7891:99:11"}]},"documentation":{"id":2852,"nodeType":"StructuredDocumentation","src":"7522:274:11","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2873,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:11","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"s","nameLocation":"7846:1:11","nodeType":"VariableDeclaration","scope":2873,"src":"7833:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2853,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:11"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2873,"src":"7872:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:11"},"scope":2906,"src":"7801:196:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2884,"nodeType":"Block","src":"8443:290:11","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:11"},"nodeType":"YulFunctionCall","src":"8530:11:11"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:11"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:11","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:11"},"nodeType":"YulFunctionCall","src":"8554:23:11"},"nodeType":"YulExpressionStatement","src":"8554:23:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:11"},"nodeType":"YulFunctionCall","src":"8597:14:11"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:11"},"nodeType":"YulFunctionCall","src":"8590:39:11"},"nodeType":"YulExpressionStatement","src":"8590:39:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:11"},"nodeType":"YulFunctionCall","src":"8649:14:11"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:11"},"nodeType":"YulFunctionCall","src":"8642:34:11"},"nodeType":"YulExpressionStatement","src":"8642:34:11"},{"nodeType":"YulAssignment","src":"8689:28:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:11","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:11"},"nodeType":"YulFunctionCall","src":"8697:20:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2881,"isOffset":false,"isSlot":false,"src":"8689:4:11","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"8613:15:11","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"8665:10:11","valueSize":1}],"id":2883,"nodeType":"InlineAssembly","src":"8496:231:11"}]},"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"8003:328:11","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:11","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:11","nodeType":"VariableDeclaration","scope":2885,"src":"8361:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:11","nodeType":"VariableDeclaration","scope":2885,"src":"8386:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:11"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"data","nameLocation":"8437:4:11","nodeType":"VariableDeclaration","scope":2885,"src":"8429:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:11"},"scope":2906,"src":"8336:397:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2904,"nodeType":"Block","src":"9048:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2899,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9104:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2900,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"9115:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2896,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2895,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2894,"id":2903,"nodeType":"Return","src":"9058:63:11"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"8739:193:11","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:11","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"validator","nameLocation":"8986:9:11","nodeType":"VariableDeclaration","scope":2905,"src":"8978:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2887,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"data","nameLocation":"9010:4:11","nodeType":"VariableDeclaration","scope":2905,"src":"8997:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2889,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:11"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"9039:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:11"},"scope":2906,"src":"8937:191:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2907,"src":"369:8761:11","usedErrors":[]}],"src":"112:9019:11"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2930],"IERC165":[2942]},"id":2931,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2908,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2931,"sourceUnit":2943,"src":"124:23:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2911,"name":"IERC165","nameLocations":["754:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"754:7:12"},"id":2912,"nodeType":"InheritanceSpecifier","src":"754:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"149:576:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2930,"linearizedBaseContracts":[2930,2942],"name":"ERC165","nameLocation":"744:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2941],"body":{"id":2928,"nodeType":"Block","src":"920:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"937:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2923,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"957:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2942_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2942_$","typeString":"type(contract IERC165)"}],"id":2922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2942","typeString":"type(contract IERC165)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2920,"id":2927,"nodeType":"Return","src":"930:47:12"}]},"documentation":{"id":2913,"nodeType":"StructuredDocumentation","src":"768:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2929,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:12","nodeType":"FunctionDefinition","overrides":{"id":2917,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:12"},"parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:12","nodeType":"VariableDeclaration","scope":2929,"src":"856:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2914,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:12"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"914:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2918,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:12"},"scope":2930,"src":"829:155:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2931,"src":"726:260:12","usedErrors":[]}],"src":"99:888:12"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2942]},"id":2943,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2932,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"125:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2942,"linearizedBaseContracts":[2942],"name":"IERC165","nameLocation":"415:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"429:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2941,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:13","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:13","nodeType":"VariableDeclaration","scope":2941,"src":"801:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2935,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:13"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2941,"src":"844:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2938,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:13"},"scope":2942,"src":"774:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2943,"src":"405:447:13","usedErrors":[]}],"src":"100:753:13"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3808]},"id":3809,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2944,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"128:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3808,"linearizedBaseContracts":[3808],"name":"Math","nameLocation":"210:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2949,"members":[{"id":2946,"name":"Down","nameLocation":"245:4:14","nodeType":"EnumValue","src":"245:4:14"},{"id":2947,"name":"Up","nameLocation":"287:2:14","nodeType":"EnumValue","src":"287:2:14"},{"id":2948,"name":"Zero","nameLocation":"318:4:14","nodeType":"EnumValue","src":"318:4:14"}],"name":"Rounding","nameLocation":"226:8:14","nodeType":"EnumDefinition","src":"221:122:14"},{"body":{"id":2966,"nodeType":"Block","src":"480:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"497:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"509:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:14","trueExpression":{"id":2962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"505:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2958,"id":2965,"nodeType":"Return","src":"490:20:14"}]},"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"349:59:14","text":" @dev Returns the largest of two numbers."},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:14","nodeType":"FunctionDefinition","parameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"a","nameLocation":"434:1:14","nodeType":"VariableDeclaration","scope":2967,"src":"426:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"b","nameLocation":"445:1:14","nodeType":"VariableDeclaration","scope":2967,"src":"437:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:14"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2967,"src":"471:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:14"},"scope":3808,"src":"413:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2984,"nodeType":"Block","src":"655:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"672:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"676:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:14","trueExpression":{"id":2980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"680:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2976,"id":2983,"nodeType":"Return","src":"665:20:14"}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"523:60:14","text":" @dev Returns the smallest of two numbers."},"id":2985,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:14","nodeType":"FunctionDefinition","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":2985,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":2985,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2985,"src":"646:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:14"},"scope":3808,"src":"588:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3007,"nodeType":"Block","src":"876:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2996,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"935:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3000,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2994,"id":3006,"nodeType":"Return","src":"923:28:14"}]},"documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"698:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3008,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:14","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"a","nameLocation":"830:1:14","nodeType":"VariableDeclaration","scope":3008,"src":"822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"b","nameLocation":"841:1:14","nodeType":"VariableDeclaration","scope":3008,"src":"833:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:14"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3008,"src":"867:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:14"},"scope":3808,"src":"805:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3032,"nodeType":"Block","src":"1228:123:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"1316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"1330:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3026,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"1339:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:14","trueExpression":{"hexValue":"30","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3017,"id":3031,"nodeType":"Return","src":"1309:35:14"}]},"documentation":{"id":3009,"nodeType":"StructuredDocumentation","src":"964:188:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:14","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"a","nameLocation":"1182:1:14","nodeType":"VariableDeclaration","scope":3033,"src":"1174:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"b","nameLocation":"1193:1:14","nodeType":"VariableDeclaration","scope":3033,"src":"1185:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:14"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3033,"src":"1219:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:14"},"scope":3808,"src":"1157:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"1765:4115:14","statements":[{"id":3154,"nodeType":"UncheckedBlock","src":"1775:4099:14","statements":[{"assignments":[3046],"declarations":[{"constant":false,"id":3046,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:14","nodeType":"VariableDeclaration","scope":3154,"src":"2096:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3047,"nodeType":"VariableDeclarationStatement","src":"2096:13:14"},{"assignments":[3049],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:14","nodeType":"VariableDeclaration","scope":3154,"src":"2168:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3050,"nodeType":"VariableDeclarationStatement","src":"2168:13:14"},{"AST":{"nodeType":"YulBlock","src":"2248:157:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:14"},"nodeType":"YulFunctionCall","src":"2289:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:14"},"nodeType":"YulFunctionCall","src":"2276:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:14","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:14"},"nodeType":"YulFunctionCall","src":"2322:9:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:14"}]},{"nodeType":"YulAssignment","src":"2348:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:14"},"nodeType":"YulFunctionCall","src":"2361:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:14"},"nodeType":"YulFunctionCall","src":"2377:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:14"},"nodeType":"YulFunctionCall","src":"2357:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3046,"isOffset":false,"isSlot":false,"src":"2313:5:14","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"2369:5:14","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"2384:5:14","valueSize":1},{"declaration":3049,"isOffset":false,"isSlot":false,"src":"2348:5:14","valueSize":1},{"declaration":3036,"isOffset":false,"isSlot":false,"src":"2283:1:14","valueSize":1},{"declaration":3036,"isOffset":false,"isSlot":false,"src":"2326:1:14","valueSize":1},{"declaration":3038,"isOffset":false,"isSlot":false,"src":"2286:1:14","valueSize":1},{"declaration":3038,"isOffset":false,"isSlot":false,"src":"2329:1:14","valueSize":1}],"id":3051,"nodeType":"InlineAssembly","src":"2239:166:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2486:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"2482:368:14","trueBody":{"id":3059,"nodeType":"Block","src":"2498:352:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"2816:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3056,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"2824:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3044,"id":3058,"nodeType":"Return","src":"2809:26:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"2960:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3063,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2974:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3067,"nodeType":"ExpressionStatement","src":"2952:53:14"},{"assignments":[3069],"declarations":[{"constant":false,"id":3069,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:14","nodeType":"VariableDeclaration","scope":3154,"src":"3261:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3070,"nodeType":"VariableDeclarationStatement","src":"3261:17:14"},{"AST":{"nodeType":"YulBlock","src":"3301:291:14","statements":[{"nodeType":"YulAssignment","src":"3370:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:14"},"nodeType":"YulFunctionCall","src":"3383:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:14"}]},{"nodeType":"YulAssignment","src":"3490:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:14"},"nodeType":"YulFunctionCall","src":"3510:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:14"},"nodeType":"YulFunctionCall","src":"3499:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:14"}]},{"nodeType":"YulAssignment","src":"3548:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:14"},"nodeType":"YulFunctionCall","src":"3557:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3040,"isOffset":false,"isSlot":false,"src":"3396:11:14","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"3524:5:14","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"3548:5:14","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"3561:5:14","valueSize":1},{"declaration":3049,"isOffset":false,"isSlot":false,"src":"3490:5:14","valueSize":1},{"declaration":3049,"isOffset":false,"isSlot":false,"src":"3503:5:14","valueSize":1},{"declaration":3069,"isOffset":false,"isSlot":false,"src":"3370:9:14","valueSize":1},{"declaration":3069,"isOffset":false,"isSlot":false,"src":"3513:9:14","valueSize":1},{"declaration":3069,"isOffset":false,"isSlot":false,"src":"3568:9:14","valueSize":1},{"declaration":3036,"isOffset":false,"isSlot":false,"src":"3390:1:14","valueSize":1},{"declaration":3038,"isOffset":false,"isSlot":false,"src":"3393:1:14","valueSize":1}],"id":3071,"nodeType":"InlineAssembly","src":"3292:300:14"},{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"twos","nameLocation":"3907:4:14","nodeType":"VariableDeclaration","scope":3154,"src":"3899:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"3914:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:14","subExpression":{"id":3075,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"3930:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:14"},{"AST":{"nodeType":"YulBlock","src":"3969:362:14","statements":[{"nodeType":"YulAssignment","src":"4034:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:14"},"nodeType":"YulFunctionCall","src":"4049:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:14"}]},{"nodeType":"YulAssignment","src":"4138:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:14"},"nodeType":"YulFunctionCall","src":"4147:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:14"}]},{"nodeType":"YulAssignment","src":"4278:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:14"},"nodeType":"YulFunctionCall","src":"4294:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:14"},"nodeType":"YulFunctionCall","src":"4290:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:14"},"nodeType":"YulFunctionCall","src":"4286:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3040,"isOffset":false,"isSlot":false,"src":"4034:11:14","valueSize":1},{"declaration":3040,"isOffset":false,"isSlot":false,"src":"4053:11:14","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"4138:5:14","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"4151:5:14","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"4066:4:14","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"4158:4:14","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"4278:4:14","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"4301:4:14","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"4308:4:14","valueSize":1}],"id":3082,"nodeType":"InlineAssembly","src":"3960:371:14"},{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3083,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"4397:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4406:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3085,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"4414:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3088,"nodeType":"ExpressionStatement","src":"4397:21:14"},{"assignments":[3090],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:14","nodeType":"VariableDeclaration","scope":3154,"src":"4736:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3097,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3092,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4759:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:14"},{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3098,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4992:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5007:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3101,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5021:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"nodeType":"ExpressionStatement","src":"4992:36:14"},{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5076:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3109,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5090:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3113,"nodeType":"ExpressionStatement","src":"5061:36:14"},{"expression":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3114,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5131:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5146:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3117,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3121,"nodeType":"ExpressionStatement","src":"5131:36:14"},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3122,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5201:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5216:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3125,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"5201:36:14"},{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3130,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5286:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3133,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5300:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3137,"nodeType":"ExpressionStatement","src":"5271:36:14"},{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3138,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5342:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5357:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3141,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5371:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ExpressionStatement","src":"5342:36:14"},{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5812:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"5821:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3148,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5829:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"5812:24:14"},{"expression":{"id":3152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5857:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3044,"id":3153,"nodeType":"Return","src":"5850:13:14"}]}]},"documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"1357:305:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:14","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"x","nameLocation":"1691:1:14","nodeType":"VariableDeclaration","scope":3156,"src":"1683:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"y","nameLocation":"1702:1:14","nodeType":"VariableDeclaration","scope":3156,"src":"1694:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:14","nodeType":"VariableDeclaration","scope":3156,"src":"1705:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:14"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"result","nameLocation":"1757:6:14","nodeType":"VariableDeclaration","scope":3156,"src":"1749:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:14"},"scope":3808,"src":"1667:4213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3199,"nodeType":"Block","src":"6122:189:14","statements":[{"assignments":[3172],"declarations":[{"constant":false,"id":3172,"mutability":"mutable","name":"result","nameLocation":"6140:6:14","nodeType":"VariableDeclaration","scope":3199,"src":"6132:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3178,"initialValue":{"arguments":[{"id":3174,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"6156:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3175,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"6159:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3176,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"6162:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3156,3200],"referencedDeclaration":3156,"src":"6149:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3179,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"6188:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3180,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"6200:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2949_$","typeString":"type(enum Math.Rounding)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"6200:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"src":"6188:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3184,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"6222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3185,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"6225:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3186,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"6228:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3183,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3196,"nodeType":"IfStatement","src":"6184:98:14","trueBody":{"id":3195,"nodeType":"Block","src":"6246:36:14","statements":[{"expression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"6260:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"nodeType":"ExpressionStatement","src":"6260:11:14"}]}},{"expression":{"id":3197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"6298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3170,"id":3198,"nodeType":"Return","src":"6291:13:14"}]},"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"5886:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3200,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:14","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"x","nameLocation":"6036:1:14","nodeType":"VariableDeclaration","scope":3200,"src":"6028:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"y","nameLocation":"6047:1:14","nodeType":"VariableDeclaration","scope":3200,"src":"6039:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:14","nodeType":"VariableDeclaration","scope":3200,"src":"6050:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:14","nodeType":"VariableDeclaration","scope":3200,"src":"6071:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"typeName":{"id":3165,"nodeType":"UserDefinedTypeName","pathNode":{"id":3164,"name":"Rounding","nameLocations":["6071:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2949,"src":"6071:8:14"},"referencedDeclaration":2949,"src":"6071:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:14"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3200,"src":"6113:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:14"},"scope":3808,"src":"6012:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3311,"nodeType":"Block","src":"6587:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6601:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"nodeType":"IfStatement","src":"6597:45:14","trueBody":{"id":3213,"nodeType":"Block","src":"6609:33:14","statements":[{"expression":{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3207,"id":3212,"nodeType":"Return","src":"6623:8:14"}]}},{"assignments":[3216],"declarations":[{"constant":false,"id":3216,"mutability":"mutable","name":"result","nameLocation":"7329:6:14","nodeType":"VariableDeclaration","scope":3311,"src":"7321:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7349:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3480,3516],"referencedDeclaration":3480,"src":"7344:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:14"},{"id":3310,"nodeType":"UncheckedBlock","src":"7758:408:14","statements":[{"expression":{"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7782:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7792:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7801:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7805:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3236,"nodeType":"ExpressionStatement","src":"7782:35:14"},{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7831:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7841:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7850:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7854:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ExpressionStatement","src":"7831:35:14"},{"expression":{"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7890:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7899:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7903:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3258,"nodeType":"ExpressionStatement","src":"7880:35:14"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7929:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7939:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7948:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7952:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"7929:35:14"},{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7978:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7988:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7997:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8001:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"7978:35:14"},{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8027:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8037:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"8046:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8050:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"nodeType":"ExpressionStatement","src":"8027:35:14"},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8076:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8086:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"8095:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8099:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"8076:35:14"},{"expression":{"arguments":[{"id":3304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8136:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"8144:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8148:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3303,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8132:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3207,"id":3309,"nodeType":"Return","src":"8125:30:14"}]}]},"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"6317:208:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:14","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"a","nameLocation":"6552:1:14","nodeType":"VariableDeclaration","scope":3312,"src":"6544:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:14"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3312,"src":"6578:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:14"},"scope":3808,"src":"6530:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"8348:161:14","statements":[{"id":3346,"nodeType":"UncheckedBlock","src":"8358:145:14","statements":[{"assignments":[3324],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"result","nameLocation":"8390:6:14","nodeType":"VariableDeclaration","scope":3346,"src":"8382:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3328,"initialValue":{"arguments":[{"id":3326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"8404:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3325,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3312,3348],"referencedDeclaration":3312,"src":"8399:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"8427:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8437:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3331,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"8449:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2949_$","typeString":"type(enum Math.Rounding)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"8449:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"src":"8437:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"8464:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"8473:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"8482:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:14","trueExpression":{"hexValue":"31","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3322,"id":3345,"nodeType":"Return","src":"8420:72:14"}]}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"8178:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:14","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"a","nameLocation":"8294:1:14","nodeType":"VariableDeclaration","scope":3348,"src":"8286:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:14","nodeType":"VariableDeclaration","scope":3348,"src":"8297:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"typeName":{"id":3317,"nodeType":"UserDefinedTypeName","pathNode":{"id":3316,"name":"Rounding","nameLocations":["8297:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2949,"src":"8297:8:14"},"referencedDeclaration":2949,"src":"8297:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:14"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3348,"src":"8339:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:14"},"scope":3808,"src":"8272:237:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3479,"nodeType":"Block","src":"8694:922:14","statements":[{"assignments":[3357],"declarations":[{"constant":false,"id":3357,"mutability":"mutable","name":"result","nameLocation":"8712:6:14","nodeType":"VariableDeclaration","scope":3479,"src":"8704:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3359,"initialValue":{"hexValue":"30","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:14"},{"id":3476,"nodeType":"UncheckedBlock","src":"8732:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8760:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3374,"nodeType":"IfStatement","src":"8756:99:14","trueBody":{"id":3373,"nodeType":"Block","src":"8778:77:14","statements":[{"expression":{"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8796:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3368,"nodeType":"ExpressionStatement","src":"8796:13:14"},{"expression":{"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"8827:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3372,"nodeType":"ExpressionStatement","src":"8827:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8872:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3389,"nodeType":"IfStatement","src":"8868:96:14","trueBody":{"id":3388,"nodeType":"Block","src":"8889:75:14","statements":[{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8907:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"nodeType":"ExpressionStatement","src":"8907:12:14"},{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"8937:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"8937:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8981:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3404,"nodeType":"IfStatement","src":"8977:96:14","trueBody":{"id":3403,"nodeType":"Block","src":"8998:75:14","statements":[{"expression":{"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9016:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3398,"nodeType":"ExpressionStatement","src":"9016:12:14"},{"expression":{"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9046:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3402,"nodeType":"ExpressionStatement","src":"9046:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9090:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3419,"nodeType":"IfStatement","src":"9086:96:14","trueBody":{"id":3418,"nodeType":"Block","src":"9107:75:14","statements":[{"expression":{"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9125:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3413,"nodeType":"ExpressionStatement","src":"9125:12:14"},{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9155:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"9155:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9199:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"IfStatement","src":"9195:93:14","trueBody":{"id":3433,"nodeType":"Block","src":"9215:73:14","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9233:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"9233:11:14"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9262:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ExpressionStatement","src":"9262:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9305:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3449,"nodeType":"IfStatement","src":"9301:93:14","trueBody":{"id":3448,"nodeType":"Block","src":"9321:73:14","statements":[{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9339:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3443,"nodeType":"ExpressionStatement","src":"9339:11:14"},{"expression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9368:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3447,"nodeType":"ExpressionStatement","src":"9368:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9411:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"IfStatement","src":"9407:93:14","trueBody":{"id":3463,"nodeType":"Block","src":"9427:73:14","statements":[{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9445:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ExpressionStatement","src":"9445:11:14"},{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9474:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"9474:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9517:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3475,"nodeType":"IfStatement","src":"9513:64:14","trueBody":{"id":3474,"nodeType":"Block","src":"9533:44:14","statements":[{"expression":{"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9551:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3473,"nodeType":"ExpressionStatement","src":"9551:11:14"}]}}]},{"expression":{"id":3477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9603:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3355,"id":3478,"nodeType":"Return","src":"9596:13:14"}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"8515:113:14","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:14","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"value","nameLocation":"8655:5:14","nodeType":"VariableDeclaration","scope":3480,"src":"8647:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:14"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3480,"src":"8685:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:14"},"scope":3808,"src":"8633:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3515,"nodeType":"Block","src":"9849:165:14","statements":[{"id":3514,"nodeType":"UncheckedBlock","src":"9859:149:14","statements":[{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"result","nameLocation":"9891:6:14","nodeType":"VariableDeclaration","scope":3514,"src":"9883:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3496,"initialValue":{"arguments":[{"id":3494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9905:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3480,3516],"referencedDeclaration":3480,"src":"9900:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9932:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"9942:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3499,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9954:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2949_$","typeString":"type(enum Math.Rounding)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"9954:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"src":"9942:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9974:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:14","trueExpression":{"hexValue":"31","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3490,"id":3513,"nodeType":"Return","src":"9925:72:14"}]}]},"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"9622:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3516,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:14","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"value","nameLocation":"9791:5:14","nodeType":"VariableDeclaration","scope":3516,"src":"9783:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:14","nodeType":"VariableDeclaration","scope":3516,"src":"9798:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"typeName":{"id":3485,"nodeType":"UserDefinedTypeName","pathNode":{"id":3484,"name":"Rounding","nameLocations":["9798:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2949,"src":"9798:8:14"},"referencedDeclaration":2949,"src":"9798:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:14"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3516,"src":"9840:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:14"},"scope":3808,"src":"9769:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3644,"nodeType":"Block","src":"10201:854:14","statements":[{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"result","nameLocation":"10219:6:14","nodeType":"VariableDeclaration","scope":3644,"src":"10211:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3527,"initialValue":{"hexValue":"30","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:14"},{"id":3641,"nodeType":"UncheckedBlock","src":"10239:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10267:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3544,"nodeType":"IfStatement","src":"10263:103:14","trueBody":{"id":3543,"nodeType":"Block","src":"10286:80:14","statements":[{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10304:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3538,"nodeType":"ExpressionStatement","src":"10304:17:14"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"10339:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"10339:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10383:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3561,"nodeType":"IfStatement","src":"10379:103:14","trueBody":{"id":3560,"nodeType":"Block","src":"10402:80:14","statements":[{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10420:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ExpressionStatement","src":"10420:17:14"},{"expression":{"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"10455:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3559,"nodeType":"ExpressionStatement","src":"10455:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10499:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3578,"nodeType":"IfStatement","src":"10495:103:14","trueBody":{"id":3577,"nodeType":"Block","src":"10518:80:14","statements":[{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10536:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"10536:17:14"},{"expression":{"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"10571:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3576,"nodeType":"ExpressionStatement","src":"10571:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10615:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3595,"nodeType":"IfStatement","src":"10611:100:14","trueBody":{"id":3594,"nodeType":"Block","src":"10633:78:14","statements":[{"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10651:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3589,"nodeType":"ExpressionStatement","src":"10651:16:14"},{"expression":{"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"10685:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3593,"nodeType":"ExpressionStatement","src":"10685:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10728:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3612,"nodeType":"IfStatement","src":"10724:100:14","trueBody":{"id":3611,"nodeType":"Block","src":"10746:78:14","statements":[{"expression":{"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10764:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ExpressionStatement","src":"10764:16:14"},{"expression":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"10798:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3610,"nodeType":"ExpressionStatement","src":"10798:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10841:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3629,"nodeType":"IfStatement","src":"10837:100:14","trueBody":{"id":3628,"nodeType":"Block","src":"10859:78:14","statements":[{"expression":{"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10877:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3623,"nodeType":"ExpressionStatement","src":"10877:16:14"},{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"10911:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3627,"nodeType":"ExpressionStatement","src":"10911:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10954:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"10950:66:14","trueBody":{"id":3639,"nodeType":"Block","src":"10972:44:14","statements":[{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"10990:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"10990:11:14"}]}}]},{"expression":{"id":3642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"11042:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3523,"id":3643,"nodeType":"Return","src":"11035:13:14"}]},"documentation":{"id":3517,"nodeType":"StructuredDocumentation","src":"10020:114:14","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3645,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:14","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"value","nameLocation":"10162:5:14","nodeType":"VariableDeclaration","scope":3645,"src":"10154:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:14"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3645,"src":"10192:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:14"},"scope":3808,"src":"10139:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3680,"nodeType":"Block","src":"11290:167:14","statements":[{"id":3679,"nodeType":"UncheckedBlock","src":"11300:151:14","statements":[{"assignments":[3657],"declarations":[{"constant":false,"id":3657,"mutability":"mutable","name":"result","nameLocation":"11332:6:14","nodeType":"VariableDeclaration","scope":3679,"src":"11324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"initialValue":{"arguments":[{"id":3659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"11347:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3658,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3645,3681],"referencedDeclaration":3645,"src":"11341:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"11374:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3663,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"11384:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3664,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"11396:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2949_$","typeString":"type(enum Math.Rounding)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"11396:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"src":"11384:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"11417:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"11426:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:14","trueExpression":{"hexValue":"31","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3655,"id":3678,"nodeType":"Return","src":"11367:73:14"}]}]},"documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"11061:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3681,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:14","nodeType":"FunctionDefinition","parameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"value","nameLocation":"11232:5:14","nodeType":"VariableDeclaration","scope":3681,"src":"11224:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3651,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:14","nodeType":"VariableDeclaration","scope":3681,"src":"11239:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"typeName":{"id":3650,"nodeType":"UserDefinedTypeName","pathNode":{"id":3649,"name":"Rounding","nameLocations":["11239:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2949,"src":"11239:8:14"},"referencedDeclaration":2949,"src":"11239:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:14"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3681,"src":"11281:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:14"},"scope":3808,"src":"11209:248:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3767,"nodeType":"Block","src":"11771:600:14","statements":[{"assignments":[3690],"declarations":[{"constant":false,"id":3690,"mutability":"mutable","name":"result","nameLocation":"11789:6:14","nodeType":"VariableDeclaration","scope":3767,"src":"11781:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3692,"initialValue":{"hexValue":"30","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:14"},{"id":3764,"nodeType":"UncheckedBlock","src":"11809:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"11837:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3707,"nodeType":"IfStatement","src":"11833:98:14","trueBody":{"id":3706,"nodeType":"Block","src":"11855:76:14","statements":[{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"11873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ExpressionStatement","src":"11873:13:14"},{"expression":{"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"11904:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3705,"nodeType":"ExpressionStatement","src":"11904:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"11948:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3722,"nodeType":"IfStatement","src":"11944:95:14","trueBody":{"id":3721,"nodeType":"Block","src":"11965:74:14","statements":[{"expression":{"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"11983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3716,"nodeType":"ExpressionStatement","src":"11983:12:14"},{"expression":{"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"12013:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3720,"nodeType":"ExpressionStatement","src":"12013:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"12056:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3737,"nodeType":"IfStatement","src":"12052:95:14","trueBody":{"id":3736,"nodeType":"Block","src":"12073:74:14","statements":[{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"12091:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ExpressionStatement","src":"12091:12:14"},{"expression":{"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"12121:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3735,"nodeType":"ExpressionStatement","src":"12121:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"12164:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3752,"nodeType":"IfStatement","src":"12160:95:14","trueBody":{"id":3751,"nodeType":"Block","src":"12181:74:14","statements":[{"expression":{"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"12199:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3746,"nodeType":"ExpressionStatement","src":"12199:12:14"},{"expression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"12229:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"nodeType":"ExpressionStatement","src":"12229:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"12272:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3763,"nodeType":"IfStatement","src":"12268:64:14","trueBody":{"id":3762,"nodeType":"Block","src":"12288:44:14","statements":[{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"12306:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"12306:11:14"}]}}]},{"expression":{"id":3765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"12358:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3688,"id":3766,"nodeType":"Return","src":"12351:13:14"}]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"11463:240:14","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3768,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:14","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"value","nameLocation":"11732:5:14","nodeType":"VariableDeclaration","scope":3768,"src":"11724:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:14"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3768,"src":"11762:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:14"},"scope":3808,"src":"11708:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3806,"nodeType":"Block","src":"12608:174:14","statements":[{"id":3805,"nodeType":"UncheckedBlock","src":"12618:158:14","statements":[{"assignments":[3780],"declarations":[{"constant":false,"id":3780,"mutability":"mutable","name":"result","nameLocation":"12650:6:14","nodeType":"VariableDeclaration","scope":3805,"src":"12642:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3784,"initialValue":{"arguments":[{"id":3782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"12666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3781,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3768,3807],"referencedDeclaration":3768,"src":"12659:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"12693:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"12703:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3787,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12715:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2949_$","typeString":"type(enum Math.Rounding)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"12715:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"src":"12703:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"12736:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"12751:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:14","trueExpression":{"hexValue":"31","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3778,"id":3804,"nodeType":"Return","src":"12686:79:14"}]}]},"documentation":{"id":3769,"nodeType":"StructuredDocumentation","src":"12377:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:14","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"value","nameLocation":"12550:5:14","nodeType":"VariableDeclaration","scope":3807,"src":"12542:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:14","nodeType":"VariableDeclaration","scope":3807,"src":"12557:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"},"typeName":{"id":3773,"nodeType":"UserDefinedTypeName","pathNode":{"id":3772,"name":"Rounding","nameLocations":["12557:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2949,"src":"12557:8:14"},"referencedDeclaration":2949,"src":"12557:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2949","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:14"},"returnParameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"12599:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:14"},"scope":3808,"src":"12526:256:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3809,"src":"202:12582:14","usedErrors":[]}],"src":"103:12682:14"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3913]},"id":3914,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3810,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3811,"nodeType":"StructuredDocumentation","src":"134:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3913,"linearizedBaseContracts":[3913],"name":"SignedMath","nameLocation":"223:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3828,"nodeType":"Block","src":"375:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"392:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"396:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"404:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:15","trueExpression":{"id":3824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"400:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3820,"id":3827,"nodeType":"Return","src":"385:20:15"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"240:66:15","text":" @dev Returns the largest of two signed numbers."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:15","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"a","nameLocation":"331:1:15","nodeType":"VariableDeclaration","scope":3829,"src":"324:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3813,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"b","nameLocation":"341:1:15","nodeType":"VariableDeclaration","scope":3829,"src":"334:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3815,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:15"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"367:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3818,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:15"},"scope":3913,"src":"311:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"554:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"571:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"575:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3843,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"583:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:15","trueExpression":{"id":3842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"579:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3838,"id":3845,"nodeType":"Return","src":"564:20:15"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"418:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:15","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"a","nameLocation":"510:1:15","nodeType":"VariableDeclaration","scope":3847,"src":"503:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3831,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"b","nameLocation":"520:1:15","nodeType":"VariableDeclaration","scope":3847,"src":"513:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3833,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:15"},"returnParameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3847,"src":"546:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3836,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:15"},"scope":3913,"src":"490:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3890,"nodeType":"Block","src":"796:162:15","statements":[{"assignments":[3858],"declarations":[{"constant":false,"id":3858,"mutability":"mutable","name":"x","nameLocation":"865:1:15","nodeType":"VariableDeclaration","scope":3890,"src":"858:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3857,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3871,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"870:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"874:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"881:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3864,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"885:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3872,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"910:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"930:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:15","typeDescriptions":{}}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3873,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:15","typeDescriptions":{}}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"944:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3883,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"948:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3856,"id":3889,"nodeType":"Return","src":"903:48:15"}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"597:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3891,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:15","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"a","nameLocation":"752:1:15","nodeType":"VariableDeclaration","scope":3891,"src":"745:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3849,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"b","nameLocation":"762:1:15","nodeType":"VariableDeclaration","scope":3891,"src":"755:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3851,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:15"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3891,"src":"788:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3854,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:15"},"scope":3913,"src":"728:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3911,"nodeType":"Block","src":"1102:158:15","statements":[{"id":3910,"nodeType":"UncheckedBlock","src":"1112:142:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"1227:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:15","subExpression":{"id":3905,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"1241:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:15","trueExpression":{"id":3904,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"1236:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3898,"id":3909,"nodeType":"Return","src":"1212:31:15"}]}]},"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"964:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3912,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:15","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"n","nameLocation":"1067:1:15","nodeType":"VariableDeclaration","scope":3912,"src":"1060:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3893,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:15"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3912,"src":"1093:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:15"},"scope":3913,"src":"1047:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3914,"src":"215:1047:15","usedErrors":[]}],"src":"109:1154:15"}},"contracts/AiYueNFTExchange.sol":{"id":16,"ast":{"absolutePath":"contracts/AiYueNFTExchange.sol","exportedSymbols":{"Address":[2289],"AiYueNFTExchange":[4976],"Context":[2311],"ECDSA":[2906],"ERC1155":[1222],"ERC1155Burnable":[1454],"ERC165":[2930],"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC1155Receiver":[1385],"IERC165":[2942],"IERC20":[1547],"IERC20Permit":[1583],"Math":[3808],"SafeERC20":[1959],"SignedMath":[3913],"Strings":[2540]},"id":4977,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3915,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":3916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4977,"sourceUnit":1223,"src":"61:59:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":3917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4977,"sourceUnit":1455,"src":"122:78:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4977,"sourceUnit":2907,"src":"202:62:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4977,"sourceUnit":1960,"src":"266:65:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3920,"name":"ERC1155","nameLocations":["364:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"364:7:16"},"id":3921,"nodeType":"InheritanceSpecifier","src":"364:7:16"},{"baseName":{"id":3922,"name":"ERC1155Burnable","nameLocations":["373:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":1454,"src":"373:15:16"},"id":3923,"nodeType":"InheritanceSpecifier","src":"373:15:16"}],"canonicalName":"AiYueNFTExchange","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4976,"linearizedBaseContracts":[4976,1454,1222,1469,1344,2930,2942,2311],"name":"AiYueNFTExchange","nameLocation":"344:16:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3927,"libraryName":{"id":3924,"name":"SafeERC20","nameLocations":["402:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1959,"src":"402:9:16"},"nodeType":"UsingForDirective","src":"396:27:16","typeName":{"id":3926,"nodeType":"UserDefinedTypeName","pathNode":{"id":3925,"name":"IERC20","nameLocations":["416:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"416:6:16"},"referencedDeclaration":1547,"src":"416:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}}},{"canonicalName":"AiYueNFTExchange.InitialOwner","id":3932,"members":[{"constant":false,"id":3929,"mutability":"mutable","name":"owner","nameLocation":"468:5:16","nodeType":"VariableDeclaration","scope":3932,"src":"460:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3928,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"amount","nameLocation":"492:6:16","nodeType":"VariableDeclaration","scope":3932,"src":"484:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"InitialOwner","nameLocation":"436:12:16","nodeType":"StructDefinition","scope":4976,"src":"429:77:16","visibility":"public"},{"canonicalName":"AiYueNFTExchange.InitialNumber","id":3937,"members":[{"constant":false,"id":3934,"mutability":"mutable","name":"owner","nameLocation":"554:5:16","nodeType":"VariableDeclaration","scope":3937,"src":"546:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3933,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"number","nameLocation":"578:6:16","nodeType":"VariableDeclaration","scope":3937,"src":"570:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"InitialNumber","nameLocation":"521:13:16","nodeType":"StructDefinition","scope":4976,"src":"514:78:16","visibility":"public"},{"canonicalName":"AiYueNFTExchange.CurrentOwner","id":3942,"members":[{"constant":false,"id":3939,"mutability":"mutable","name":"owner","nameLocation":"639:5:16","nodeType":"VariableDeclaration","scope":3942,"src":"631:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3938,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"amount","nameLocation":"663:6:16","nodeType":"VariableDeclaration","scope":3942,"src":"655:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CurrentOwner","nameLocation":"607:12:16","nodeType":"StructDefinition","scope":4976,"src":"600:77:16","visibility":"public"},{"canonicalName":"AiYueNFTExchange.Vote","id":3947,"members":[{"constant":false,"id":3944,"mutability":"mutable","name":"voter","nameLocation":"716:5:16","nodeType":"VariableDeclaration","scope":3947,"src":"708:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3943,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"number","nameLocation":"740:6:16","nodeType":"VariableDeclaration","scope":3947,"src":"732:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Vote","nameLocation":"692:4:16","nodeType":"StructDefinition","scope":4976,"src":"685:69:16","visibility":"public"},{"constant":false,"functionSelector":"64d19025","id":3952,"mutability":"mutable","name":"initialOwners","nameLocation":"802:13:16","nodeType":"VariableDeclaration","scope":4976,"src":"762:53:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3932_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner)"},"typeName":{"id":3951,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"770:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"762:32:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3932_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3950,"nodeType":"UserDefinedTypeName","pathNode":{"id":3949,"name":"InitialOwner","nameLocations":["781:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"781:12:16"},"referencedDeclaration":3932,"src":"781:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_storage_ptr","typeString":"struct AiYueNFTExchange.InitialOwner"}}},"visibility":"public"},{"constant":false,"functionSelector":"1526a8e4","id":3957,"mutability":"mutable","name":"initialNumbers","nameLocation":"863:14:16","nodeType":"VariableDeclaration","scope":4976,"src":"822:55:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialNumber_$3937_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialNumber)"},"typeName":{"id":3956,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"822:33:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialNumber_$3937_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialNumber)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3955,"nodeType":"UserDefinedTypeName","pathNode":{"id":3954,"name":"InitialNumber","nameLocations":["841:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3937,"src":"841:13:16"},"referencedDeclaration":3937,"src":"841:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_storage_ptr","typeString":"struct AiYueNFTExchange.InitialNumber"}}},"visibility":"public"},{"constant":false,"functionSelector":"88a99f02","id":3963,"mutability":"mutable","name":"tokenIdCurrentOwner","nameLocation":"926:19:16","nodeType":"VariableDeclaration","scope":4976,"src":"884:61:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner[])"},"typeName":{"id":3962,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"884:34:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3960,"nodeType":"UserDefinedTypeName","pathNode":{"id":3959,"name":"CurrentOwner","nameLocations":["903:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"903:12:16"},"referencedDeclaration":3942,"src":"903:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":3961,"nodeType":"ArrayTypeName","src":"903:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"9eb79a75","id":3969,"mutability":"mutable","name":"voteInfo","nameLocation":"986:8:16","nodeType":"VariableDeclaration","scope":4976,"src":"952:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote[])"},"typeName":{"id":3968,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"952:26:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3966,"nodeType":"UserDefinedTypeName","pathNode":{"id":3965,"name":"Vote","nameLocations":["971:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"971:4:16"},"referencedDeclaration":3947,"src":"971:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":3967,"nodeType":"ArrayTypeName","src":"971:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}}},"visibility":"public"},{"constant":false,"id":3973,"mutability":"mutable","name":"_uris","nameLocation":"1036:5:16","nodeType":"VariableDeclaration","scope":4976,"src":"1001:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3972,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1001:26:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3971,"name":"string","nodeType":"ElementaryTypeName","src":"1020:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"constant":false,"functionSelector":"06fdde03","id":3975,"mutability":"mutable","name":"name","nameLocation":"1062:4:16","nodeType":"VariableDeclaration","scope":4976,"src":"1048:18:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3974,"name":"string","nodeType":"ElementaryTypeName","src":"1048:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":3977,"mutability":"mutable","name":"symbol","nameLocation":"1087:6:16","nodeType":"VariableDeclaration","scope":4976,"src":"1073:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3976,"name":"string","nodeType":"ElementaryTypeName","src":"1073:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":3995,"nodeType":"Block","src":"1168:58:16","statements":[{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3987,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"1179:4:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3988,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"1186:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1179:12:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3990,"nodeType":"ExpressionStatement","src":"1179:12:16"},{"expression":{"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"1202:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3992,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"1211:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1202:16:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3994,"nodeType":"ExpressionStatement","src":"1202:16:16"}]},"id":3996,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1164:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":3985,"kind":"baseConstructorSpecifier","modifierName":{"id":3983,"name":"ERC1155","nameLocations":["1156:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1156:7:16"},"nodeType":"ModifierInvocation","src":"1156:11:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"_name","nameLocation":"1126:5:16","nodeType":"VariableDeclaration","scope":3996,"src":"1112:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3978,"name":"string","nodeType":"ElementaryTypeName","src":"1112:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"_symbol","nameLocation":"1147:7:16","nodeType":"VariableDeclaration","scope":3996,"src":"1133:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3980,"name":"string","nodeType":"ElementaryTypeName","src":"1133:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1111:44:16"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[],"src":"1168:0:16"},"scope":4976,"src":"1100:126:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4005,"nodeType":"Block","src":"1277:34:16","statements":[{"expression":{"arguments":[{"id":4002,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"1296:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4001,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1288:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1288:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4004,"nodeType":"ExpressionStatement","src":"1288:15:16"}]},"functionSelector":"02fe5305","id":4006,"implemented":true,"kind":"function","modifiers":[],"name":"setURI","nameLocation":"1241:6:16","nodeType":"FunctionDefinition","parameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"newuri","nameLocation":"1262:6:16","nodeType":"VariableDeclaration","scope":4006,"src":"1248:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3997,"name":"string","nodeType":"ElementaryTypeName","src":"1248:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1247:22:16"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[],"src":"1277:0:16"},"scope":4976,"src":"1232:79:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[87],"body":{"id":4019,"nodeType":"Block","src":"1393:42:16","statements":[{"expression":{"components":[{"baseExpression":{"id":4014,"name":"_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"1412:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":4016,"indexExpression":{"id":4015,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"1418:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1412:14:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":4017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:16:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4013,"id":4018,"nodeType":"Return","src":"1404:23:16"}]},"functionSelector":"0e89341c","id":4020,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1328:3:16","nodeType":"FunctionDefinition","overrides":{"id":4010,"nodeType":"OverrideSpecifier","overrides":[],"src":"1349:8:16"},"parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"tokenId","nameLocation":"1340:7:16","nodeType":"VariableDeclaration","scope":4020,"src":"1332:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1332:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1331:17:16"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4020,"src":"1379:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4011,"name":"string","nodeType":"ElementaryTypeName","src":"1379:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1378:15:16"},"scope":4976,"src":"1319:116:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4033,"nodeType":"Block","src":"1507:39:16","statements":[{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4027,"name":"_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"1518:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":4029,"indexExpression":{"id":4028,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1518:14:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4030,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"1535:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1518:20:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4032,"nodeType":"ExpressionStatement","src":"1518:20:16"}]},"functionSelector":"57f7789e","id":4034,"implemented":true,"kind":"function","modifiers":[],"name":"setTokenUri","nameLocation":"1452:11:16","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"tokenId","nameLocation":"1472:7:16","nodeType":"VariableDeclaration","scope":4034,"src":"1464:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"uri","nameLocation":"1495:3:16","nodeType":"VariableDeclaration","scope":4034,"src":"1481:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4023,"name":"string","nodeType":"ElementaryTypeName","src":"1481:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:36:16"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[],"src":"1507:0:16"},"scope":4976,"src":"1443:103:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4094,"nodeType":"Block","src":"1679:321:16","statements":[{"assignments":[4050],"declarations":[{"constant":false,"id":4050,"mutability":"mutable","name":"result","nameLocation":"1695:6:16","nodeType":"VariableDeclaration","scope":4094,"src":"1690:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4049,"name":"bool","nodeType":"ElementaryTypeName","src":"1690:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4055,"initialValue":{"arguments":[{"id":4052,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1715:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4053,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"1719:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4051,"name":"getNftEXit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"1704:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1704:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1690:37:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"1746:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"74727565","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1756:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1746:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7468697320696420686164206d696e74","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1762:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8b04ae2e46468d9955bd9915215c21fc4640221ef2bbd326ff3373863abf2ed","typeString":"literal_string \"this id had mint\""},"value":"this id had mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8b04ae2e46468d9955bd9915215c21fc4640221ef2bbd326ff3373863abf2ed","typeString":"literal_string \"this id had mint\""}],"id":4056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1738:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1738:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4062,"nodeType":"ExpressionStatement","src":"1738:43:16"},{"expression":{"arguments":[{"id":4064,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"1798:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4065,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1807:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4066,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"1811:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4067,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"1819:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4063,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"1792:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4069,"nodeType":"ExpressionStatement","src":"1792:32:16"},{"expression":{"arguments":[{"id":4071,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"1851:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4072,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1860:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4073,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"1864:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4070,"name":"initOwnerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"1835:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1835:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"ExpressionStatement","src":"1835:36:16"},{"expression":{"arguments":[{"id":4077,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"1898:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4078,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1907:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4079,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"1911:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4076,"name":"initOwnerNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"1882:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1882:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4081,"nodeType":"ExpressionStatement","src":"1882:36:16"},{"expression":{"arguments":[{"id":4083,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"1946:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4084,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1955:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4085,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"1959:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4082,"name":"initCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"1929:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4087,"nodeType":"ExpressionStatement","src":"1929:37:16"},{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4088,"name":"_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"1977:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":4090,"indexExpression":{"id":4089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"1983:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1977:9:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4091,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"1989:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1977:15:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4093,"nodeType":"ExpressionStatement","src":"1977:15:16"}]},"functionSelector":"aac48653","id":4095,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1563:4:16","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"account","nameLocation":"1576:7:16","nodeType":"VariableDeclaration","scope":4095,"src":"1568:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4035,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4038,"mutability":"mutable","name":"id","nameLocation":"1593:2:16","nodeType":"VariableDeclaration","scope":4095,"src":"1585:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4040,"mutability":"mutable","name":"number","nameLocation":"1605:6:16","nodeType":"VariableDeclaration","scope":4095,"src":"1597:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4042,"mutability":"mutable","name":"amount","nameLocation":"1621:6:16","nodeType":"VariableDeclaration","scope":4095,"src":"1613:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1613:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"uri","nameLocation":"1643:3:16","nodeType":"VariableDeclaration","scope":4095,"src":"1629:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4043,"name":"string","nodeType":"ElementaryTypeName","src":"1629:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"data","nameLocation":"1661:4:16","nodeType":"VariableDeclaration","scope":4095,"src":"1648:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4045,"name":"bytes","nodeType":"ElementaryTypeName","src":"1648:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1567:99:16"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[],"src":"1679:0:16"},"scope":4976,"src":"1554:446:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4154,"nodeType":"Block","src":"2112:369:16","statements":[{"assignments":[4109],"declarations":[{"constant":false,"id":4109,"mutability":"mutable","name":"result","nameLocation":"2128:6:16","nodeType":"VariableDeclaration","scope":4154,"src":"2123:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4108,"name":"bool","nodeType":"ElementaryTypeName","src":"2123:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4114,"initialValue":{"arguments":[{"id":4111,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2153:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"2157:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4110,"name":"getVoteInfoExit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"2137:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2137:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2123:39:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"2177:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2187:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2177:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4118,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2195:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2199:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2195:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4120,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"2209:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2195:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2177:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4128,"nodeType":"IfStatement","src":"2173:115:16","trueBody":{"id":4127,"nodeType":"Block","src":"2215:73:16","statements":[{"expression":{"arguments":[{"hexValue":"74686973206164647265737320696e20766f74652063616e6e6f74207472616e73666572","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2237:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6895af7856c8394ca1e8bd447858b22b2150d3eca3f596d4fea76ff85bc1f7e6","typeString":"literal_string \"this address in vote cannot transfer\""},"value":"this address in vote cannot transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6895af7856c8394ca1e8bd447858b22b2150d3eca3f596d4fea76ff85bc1f7e6","typeString":"literal_string \"this address in vote cannot transfer\""}],"id":4123,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2230:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2230:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4126,"nodeType":"ExpressionStatement","src":"2230:46:16"}]}},{"expression":{"arguments":[{"id":4130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"2315:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"2321:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4132,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2325:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"2329:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4134,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2337:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4129,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2298:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4136,"nodeType":"ExpressionStatement","src":"2298:44:16"},{"expression":{"arguments":[{"id":4138,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"2373:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4139,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"2379:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4140,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2383:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4141,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"2387:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4137,"name":"changeTokenIdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2353:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2353:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4143,"nodeType":"ExpressionStatement","src":"2353:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"2409:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2419:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2409:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4153,"nodeType":"IfStatement","src":"2405:69:16","trueBody":{"id":4152,"nodeType":"Block","src":"2424:50:16","statements":[{"expression":{"arguments":[{"id":4148,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2454:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4149,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"2457:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4147,"name":"removeVoteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"2439:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4151,"nodeType":"ExpressionStatement","src":"2439:23:16"}]}}]},"functionSelector":"605105f0","id":4155,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2019:12:16","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"from","nameLocation":"2040:4:16","nodeType":"VariableDeclaration","scope":4155,"src":"2032:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"2032:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4099,"mutability":"mutable","name":"to","nameLocation":"2054:2:16","nodeType":"VariableDeclaration","scope":4155,"src":"2046:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"2046:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4101,"mutability":"mutable","name":"id","nameLocation":"2066:2:16","nodeType":"VariableDeclaration","scope":4155,"src":"2058:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2058:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4103,"mutability":"mutable","name":"amount","nameLocation":"2078:6:16","nodeType":"VariableDeclaration","scope":4155,"src":"2070:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2070:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"data","nameLocation":"2099:4:16","nodeType":"VariableDeclaration","scope":4155,"src":"2086:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4104,"name":"bytes","nodeType":"ElementaryTypeName","src":"2086:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2031:73:16"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[],"src":"2112:0:16"},"scope":4976,"src":"2010:471:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4175,"nodeType":"Block","src":"2599:53:16","statements":[{"expression":{"arguments":[{"id":4169,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"2621:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4170,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"2625:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4171,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"2630:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4172,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"2639:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4168,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2610:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4174,"nodeType":"ExpressionStatement","src":"2610:34:16"}]},"functionSelector":"1f7fdffa","id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"mintBatch","nameLocation":"2498:9:16","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"to","nameLocation":"2516:2:16","nodeType":"VariableDeclaration","scope":4176,"src":"2508:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4156,"name":"address","nodeType":"ElementaryTypeName","src":"2508:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"ids","nameLocation":"2537:3:16","nodeType":"VariableDeclaration","scope":4176,"src":"2520:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4159,"nodeType":"ArrayTypeName","src":"2520:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"amounts","nameLocation":"2559:7:16","nodeType":"VariableDeclaration","scope":4176,"src":"2542:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ArrayTypeName","src":"2542:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"data","nameLocation":"2581:4:16","nodeType":"VariableDeclaration","scope":4176,"src":"2568:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4164,"name":"bytes","nodeType":"ElementaryTypeName","src":"2568:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2507:79:16"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[],"src":"2599:0:16"},"scope":4976,"src":"2489:163:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4199,"nodeType":"Block","src":"2744:191:16","statements":[{"assignments":[4187],"declarations":[{"constant":false,"id":4187,"mutability":"mutable","name":"initialOwner","nameLocation":"2775:12:16","nodeType":"VariableDeclaration","scope":4199,"src":"2755:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_memory_ptr","typeString":"struct AiYueNFTExchange.InitialOwner"},"typeName":{"id":4186,"nodeType":"UserDefinedTypeName","pathNode":{"id":4185,"name":"InitialOwner","nameLocations":["2755:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"2755:12:16"},"referencedDeclaration":3932,"src":"2755:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_storage_ptr","typeString":"struct AiYueNFTExchange.InitialOwner"}},"visibility":"internal"}],"id":4192,"initialValue":{"arguments":[{"id":4189,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"2826:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4190,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"2856:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4188,"name":"InitialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"2790:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_InitialOwner_$3932_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.InitialOwner storage pointer)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2818:5:16","2847:6:16"],"names":["owner","amount"],"nodeType":"FunctionCall","src":"2790:89:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_memory_ptr","typeString":"struct AiYueNFTExchange.InitialOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"2755:124:16"},{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4193,"name":"initialOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"2890:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3932_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner storage ref)"}},"id":4195,"indexExpression":{"id":4194,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"2904:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2890:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4196,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2915:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_memory_ptr","typeString":"struct AiYueNFTExchange.InitialOwner memory"}},"src":"2890:37:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"id":4198,"nodeType":"ExpressionStatement","src":"2890:37:16"}]},"id":4200,"implemented":true,"kind":"function","modifiers":[],"name":"initOwnerAmount","nameLocation":"2669:15:16","nodeType":"FunctionDefinition","parameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"_owner","nameLocation":"2693:6:16","nodeType":"VariableDeclaration","scope":4200,"src":"2685:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4177,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:16","nodeType":"VariableDeclaration","scope":4200,"src":"2701:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"_amount","nameLocation":"2726:7:16","nodeType":"VariableDeclaration","scope":4200,"src":"2718:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2684:50:16"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[],"src":"2744:0:16"},"scope":4976,"src":"2660:275:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"3027:196:16","statements":[{"assignments":[4211],"declarations":[{"constant":false,"id":4211,"mutability":"mutable","name":"initialNumber","nameLocation":"3059:13:16","nodeType":"VariableDeclaration","scope":4223,"src":"3038:34:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_memory_ptr","typeString":"struct AiYueNFTExchange.InitialNumber"},"typeName":{"id":4210,"nodeType":"UserDefinedTypeName","pathNode":{"id":4209,"name":"InitialNumber","nameLocations":["3038:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3937,"src":"3038:13:16"},"referencedDeclaration":3937,"src":"3038:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_storage_ptr","typeString":"struct AiYueNFTExchange.InitialNumber"}},"visibility":"internal"}],"id":4216,"initialValue":{"arguments":[{"id":4213,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"3112:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4214,"name":"_number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"3142:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4212,"name":"InitialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"3075:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_InitialNumber_$3937_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.InitialNumber storage pointer)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3104:5:16","3133:6:16"],"names":["owner","number"],"nodeType":"FunctionCall","src":"3075:90:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_memory_ptr","typeString":"struct AiYueNFTExchange.InitialNumber memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:127:16"},{"expression":{"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4217,"name":"initialNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3176:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialNumber_$3937_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialNumber storage ref)"}},"id":4219,"indexExpression":{"id":4218,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"3191:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3176:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_storage","typeString":"struct AiYueNFTExchange.InitialNumber storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4220,"name":"initialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"3202:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_memory_ptr","typeString":"struct AiYueNFTExchange.InitialNumber memory"}},"src":"3176:39:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_storage","typeString":"struct AiYueNFTExchange.InitialNumber storage ref"}},"id":4222,"nodeType":"ExpressionStatement","src":"3176:39:16"}]},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"initOwnerNumber","nameLocation":"2952:15:16","nodeType":"FunctionDefinition","parameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"_owner","nameLocation":"2976:6:16","nodeType":"VariableDeclaration","scope":4224,"src":"2968:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4201,"name":"address","nodeType":"ElementaryTypeName","src":"2968:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"tokenId","nameLocation":"2992:7:16","nodeType":"VariableDeclaration","scope":4224,"src":"2984:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2984:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4206,"mutability":"mutable","name":"_number","nameLocation":"3009:7:16","nodeType":"VariableDeclaration","scope":4224,"src":"3001:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3001:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2967:50:16"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[],"src":"3027:0:16"},"scope":4976,"src":"2943:280:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4253,"nodeType":"Block","src":"3298:184:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4232,"name":"initialNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3317:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialNumber_$3937_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialNumber storage ref)"}},"id":4234,"indexExpression":{"id":4233,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"3332:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_storage","typeString":"struct AiYueNFTExchange.InitialNumber storage ref"}},"id":4235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3341:6:16","memberName":"number","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"3317:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4236,"name":"decNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"3351:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3317:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c657373206e756d62657220746f206465637265617365","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3362:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b7fd438037b307ac21c88f245c7ae8d74a2bfdf6adc6bafe5a75041867d029f","typeString":"literal_string \"less number to decrease\""},"value":"less number to decrease"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b7fd438037b307ac21c88f245c7ae8d74a2bfdf6adc6bafe5a75041867d029f","typeString":"literal_string \"less number to decrease\""}],"id":4231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3309:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3309:79:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4240,"nodeType":"ExpressionStatement","src":"3309:79:16"},{"expression":{"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4241,"name":"initialNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3399:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialNumber_$3937_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialNumber storage ref)"}},"id":4243,"indexExpression":{"id":4242,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"3414:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3399:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_storage","typeString":"struct AiYueNFTExchange.InitialNumber storage ref"}},"id":4244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3423:6:16","memberName":"number","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"3399:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4245,"name":"initialNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3432:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialNumber_$3937_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialNumber storage ref)"}},"id":4247,"indexExpression":{"id":4246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"3447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3432:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialNumber_$3937_storage","typeString":"struct AiYueNFTExchange.InitialNumber storage ref"}},"id":4248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3456:6:16","memberName":"number","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"3432:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4249,"name":"decNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"3465:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3432:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3399:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4252,"nodeType":"ExpressionStatement","src":"3399:75:16"}]},"functionSelector":"5d6c7220","id":4254,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseNumber","nameLocation":"3240:14:16","nodeType":"FunctionDefinition","parameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"tokenId","nameLocation":"3263:7:16","nodeType":"VariableDeclaration","scope":4254,"src":"3255:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3255:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"decNumber","nameLocation":"3280:9:16","nodeType":"VariableDeclaration","scope":4254,"src":"3272:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3254:36:16"},"returnParameters":{"id":4230,"nodeType":"ParameterList","parameters":[],"src":"3298:0:16"},"scope":4976,"src":"3231:251:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4278,"nodeType":"Block","src":"3575:201:16","statements":[{"assignments":[4265],"declarations":[{"constant":false,"id":4265,"mutability":"mutable","name":"currentOwner","nameLocation":"3606:12:16","nodeType":"VariableDeclaration","scope":4278,"src":"3586:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":4264,"nodeType":"UserDefinedTypeName","pathNode":{"id":4263,"name":"CurrentOwner","nameLocations":["3586:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"3586:12:16"},"referencedDeclaration":3942,"src":"3586:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":4270,"initialValue":{"arguments":[{"id":4267,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"3657:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4268,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"3687:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4266,"name":"CurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"3621:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CurrentOwner_$3942_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.CurrentOwner storage pointer)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3649:5:16","3678:6:16"],"names":["owner","amount"],"nodeType":"FunctionCall","src":"3621:89:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"3586:124:16"},{"expression":{"arguments":[{"id":4275,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"3755:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}],"expression":{"baseExpression":{"id":4271,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"3721:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":4273,"indexExpression":{"id":4272,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"3741:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3721:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:4:16","memberName":"push","nodeType":"MemberAccess","src":"3721:33:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr_$_t_struct$_CurrentOwner_$3942_storage_$returns$__$attached_to$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr_$","typeString":"function (struct AiYueNFTExchange.CurrentOwner storage ref[] storage pointer,struct AiYueNFTExchange.CurrentOwner storage ref)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4277,"nodeType":"ExpressionStatement","src":"3721:47:16"}]},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"initCurrentOwner","nameLocation":"3499:16:16","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"_owner","nameLocation":"3524:6:16","nodeType":"VariableDeclaration","scope":4279,"src":"3516:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4255,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"tokenId","nameLocation":"3540:7:16","nodeType":"VariableDeclaration","scope":4279,"src":"3532:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3532:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"_amount","nameLocation":"3557:7:16","nodeType":"VariableDeclaration","scope":4279,"src":"3549:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3515:50:16"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[],"src":"3575:0:16"},"scope":4976,"src":"3490:286:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4373,"nodeType":"Block","src":"3887:821:16","statements":[{"condition":{"arguments":[{"id":4291,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"3915:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4292,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"3925:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4290,"name":"getShareExit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"3902:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3902:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4339,"nodeType":"Block","src":"4215:223:16","statements":[{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"currentOwner","nameLocation":"4250:12:16","nodeType":"VariableDeclaration","scope":4339,"src":"4230:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":4325,"nodeType":"UserDefinedTypeName","pathNode":{"id":4324,"name":"CurrentOwner","nameLocations":["4230:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"4230:12:16"},"referencedDeclaration":3942,"src":"4230:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":4331,"initialValue":{"arguments":[{"id":4328,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"4305:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4329,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"4336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4327,"name":"CurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"4265:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CurrentOwner_$3942_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.CurrentOwner storage pointer)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4297:5:16","4327:6:16"],"names":["owner","amount"],"nodeType":"FunctionCall","src":"4265:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"4230:133:16"},{"expression":{"arguments":[{"id":4336,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"4413:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}],"expression":{"baseExpression":{"id":4332,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"4378:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":4334,"indexExpression":{"id":4333,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"4398:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4378:29:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4408:4:16","memberName":"push","nodeType":"MemberAccess","src":"4378:34:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr_$_t_struct$_CurrentOwner_$3942_storage_$returns$__$attached_to$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr_$","typeString":"function (struct AiYueNFTExchange.CurrentOwner storage ref[] storage pointer,struct AiYueNFTExchange.CurrentOwner storage ref)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4338,"nodeType":"ExpressionStatement","src":"4378:48:16"}]},"id":4340,"nodeType":"IfStatement","src":"3898:540:16","trueBody":{"id":4323,"nodeType":"Block","src":"3931:278:16","statements":[{"assignments":[4296],"declarations":[{"constant":false,"id":4296,"mutability":"mutable","name":"currentOwner","nameLocation":"3966:12:16","nodeType":"VariableDeclaration","scope":4323,"src":"3946:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":4295,"nodeType":"UserDefinedTypeName","pathNode":{"id":4294,"name":"CurrentOwner","nameLocations":["3946:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"3946:12:16"},"referencedDeclaration":3942,"src":"3946:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":4301,"initialValue":{"arguments":[{"id":4298,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"3996:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4299,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"4006:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4297,"name":"getShareEntity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"3981:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_struct$_CurrentOwner_$3942_memory_ptr_$","typeString":"function (uint256,address) view returns (struct AiYueNFTExchange.CurrentOwner memory)"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3981:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"3946:64:16"},{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4302,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"4025:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":4304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4038:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3941,"src":"4025:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4305,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"4048:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4025:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4307,"nodeType":"ExpressionStatement","src":"4025:30:16"},{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"shareIndex","nameLocation":"4080:10:16","nodeType":"VariableDeclaration","scope":4323,"src":"4072:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4072:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4314,"initialValue":{"arguments":[{"id":4311,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"4112:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4312,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"4122:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4310,"name":"getShareArrayIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"4093:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4072:54:16"},{"expression":{"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4315,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"4141:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":4318,"indexExpression":{"id":4316,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"4161:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4141:29:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":4319,"indexExpression":{"id":4317,"name":"shareIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"4171:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4141:41:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4320,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"4185:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"src":"4141:56:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"id":4322,"nodeType":"ExpressionStatement","src":"4141:56:16"}]}},{"assignments":[4343],"declarations":[{"constant":false,"id":4343,"mutability":"mutable","name":"current","nameLocation":"4470:7:16","nodeType":"VariableDeclaration","scope":4373,"src":"4450:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":4342,"nodeType":"UserDefinedTypeName","pathNode":{"id":4341,"name":"CurrentOwner","nameLocations":["4450:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"4450:12:16"},"referencedDeclaration":3942,"src":"4450:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":4348,"initialValue":{"arguments":[{"id":4345,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"4495:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4346,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4505:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4344,"name":"getShareEntity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"4480:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_struct$_CurrentOwner_$3942_memory_ptr_$","typeString":"function (uint256,address) view returns (struct AiYueNFTExchange.CurrentOwner memory)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4480:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"4450:61:16"},{"expression":{"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4349,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"4522:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":4351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4530:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3941,"src":"4522:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4352,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"4539:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":4353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3941,"src":"4539:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4354,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"4556:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4539:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4522:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4357,"nodeType":"ExpressionStatement","src":"4522:41:16"},{"assignments":[4359],"declarations":[{"constant":false,"id":4359,"mutability":"mutable","name":"shareOneIndex","nameLocation":"4584:13:16","nodeType":"VariableDeclaration","scope":4373,"src":"4576:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"4576:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4364,"initialValue":{"arguments":[{"id":4361,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"4619:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4362,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4629:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4360,"name":"getShareArrayIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"4600:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4600:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4576:59:16"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4365,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"4646:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":4368,"indexExpression":{"id":4366,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"4666:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4646:29:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":4369,"indexExpression":{"id":4367,"name":"shareOneIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"4676:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4646:44:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4370,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"4693:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"src":"4646:54:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"id":4372,"nodeType":"ExpressionStatement","src":"4646:54:16"}]},"id":4374,"implemented":true,"kind":"function","modifiers":[],"name":"changeTokenIdAmount","nameLocation":"3795:19:16","nodeType":"FunctionDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"_from","nameLocation":"3823:5:16","nodeType":"VariableDeclaration","scope":4374,"src":"3815:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4280,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"_to","nameLocation":"3838:3:16","nodeType":"VariableDeclaration","scope":4374,"src":"3830:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"3830:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"_tokenId","nameLocation":"3851:8:16","nodeType":"VariableDeclaration","scope":4374,"src":"3843:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3843:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"_amount","nameLocation":"3869:7:16","nodeType":"VariableDeclaration","scope":4374,"src":"3861:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3861:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3814:63:16"},"returnParameters":{"id":4289,"nodeType":"ParameterList","parameters":[],"src":"3887:0:16"},"scope":4976,"src":"3786:922:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4417,"nodeType":"Block","src":"4799:255:16","statements":[{"assignments":[4387],"declarations":[{"constant":false,"id":4387,"mutability":"mutable","name":"shares","nameLocation":"4832:6:16","nodeType":"VariableDeclaration","scope":4417,"src":"4810:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"},"typeName":{"baseType":{"id":4385,"nodeType":"UserDefinedTypeName","pathNode":{"id":4384,"name":"CurrentOwner","nameLocations":["4810:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"4810:12:16"},"referencedDeclaration":3942,"src":"4810:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":4386,"nodeType":"ArrayTypeName","src":"4810:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}},"visibility":"internal"}],"id":4391,"initialValue":{"baseExpression":{"id":4388,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"4841:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":4390,"indexExpression":{"id":4389,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"4861:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4841:29:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4810:60:16"},{"body":{"id":4413,"nodeType":"Block","src":"4922:102:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4403,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"4941:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":4405,"indexExpression":{"id":4404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"4948:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4941:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":4406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4951:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3939,"src":"4941:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4407,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"4960:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4941:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4412,"nodeType":"IfStatement","src":"4937:76:16","trueBody":{"id":4411,"nodeType":"Block","src":"4967:46:16","statements":[{"expression":{"hexValue":"74727565","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4993:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4382,"id":4410,"nodeType":"Return","src":"4986:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"4898:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4397,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"4902:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4909:6:16","memberName":"length","nodeType":"MemberAccess","src":"4902:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4898:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4414,"initializationExpression":{"assignments":[4393],"declarations":[{"constant":false,"id":4393,"mutability":"mutable","name":"i","nameLocation":"4891:1:16","nodeType":"VariableDeclaration","scope":4414,"src":"4886:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint","nodeType":"ElementaryTypeName","src":"4886:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4395,"initialValue":{"hexValue":"30","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4895:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4886:10:16"},"loopExpression":{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4917:3:16","subExpression":{"id":4400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"4917:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"4917:3:16"},"nodeType":"ForStatement","src":"4881:143:16"},{"expression":{"hexValue":"66616c7365","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5041:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4382,"id":4416,"nodeType":"Return","src":"5034:12:16"}]},"id":4418,"implemented":true,"kind":"function","modifiers":[],"name":"getShareExit","nameLocation":"4725:12:16","nodeType":"FunctionDefinition","parameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"_tokenId","nameLocation":"4746:8:16","nodeType":"VariableDeclaration","scope":4418,"src":"4738:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4378,"mutability":"mutable","name":"owner","nameLocation":"4764:5:16","nodeType":"VariableDeclaration","scope":4418,"src":"4756:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4377,"name":"address","nodeType":"ElementaryTypeName","src":"4756:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4737:33:16"},"returnParameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4418,"src":"4794:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4380,"name":"bool","nodeType":"ElementaryTypeName","src":"4794:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4793:6:16"},"scope":4976,"src":"4716:338:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"5162:341:16","statements":[{"assignments":[4430],"declarations":[{"constant":false,"id":4430,"mutability":"mutable","name":"share","nameLocation":"5194:5:16","nodeType":"VariableDeclaration","scope":4472,"src":"5173:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":4429,"nodeType":"UserDefinedTypeName","pathNode":{"id":4428,"name":"CurrentOwner","nameLocations":["5173:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"5173:12:16"},"referencedDeclaration":3942,"src":"5173:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":4431,"nodeType":"VariableDeclarationStatement","src":"5173:26:16"},{"assignments":[4436],"declarations":[{"constant":false,"id":4436,"mutability":"mutable","name":"shareList","nameLocation":"5232:9:16","nodeType":"VariableDeclaration","scope":4472,"src":"5210:31:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"},"typeName":{"baseType":{"id":4434,"nodeType":"UserDefinedTypeName","pathNode":{"id":4433,"name":"CurrentOwner","nameLocations":["5210:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"5210:12:16"},"referencedDeclaration":3942,"src":"5210:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":4435,"nodeType":"ArrayTypeName","src":"5210:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}},"visibility":"internal"}],"id":4440,"initialValue":{"baseExpression":{"id":4437,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"5244:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":4439,"indexExpression":{"id":4438,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"5264:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5244:29:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5210:63:16"},{"body":{"id":4468,"nodeType":"Block","src":"5328:145:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4452,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"5347:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":4454,"indexExpression":{"id":4453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"5357:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5347:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":4455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5360:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3939,"src":"5347:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4456,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5369:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5347:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"5343:119:16","trueBody":{"id":4466,"nodeType":"Block","src":"5376:86:16","statements":[{"expression":{"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4458,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"5395:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4459,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"5403:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":4461,"indexExpression":{"id":4460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"5413:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5403:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"src":"5395:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":4463,"nodeType":"ExpressionStatement","src":"5395:20:16"},{"expression":{"id":4464,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"5441:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"functionReturnParameters":4427,"id":4465,"nodeType":"Return","src":"5434:12:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"5301:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4446,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"5305:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5315:6:16","memberName":"length","nodeType":"MemberAccess","src":"5305:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5301:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4469,"initializationExpression":{"assignments":[4442],"declarations":[{"constant":false,"id":4442,"mutability":"mutable","name":"i","nameLocation":"5294:1:16","nodeType":"VariableDeclaration","scope":4469,"src":"5289:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint","nodeType":"ElementaryTypeName","src":"5289:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4444,"initialValue":{"hexValue":"30","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5298:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5289:10:16"},"loopExpression":{"expression":{"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5323:3:16","subExpression":{"id":4449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"5323:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4451,"nodeType":"ExpressionStatement","src":"5323:3:16"},"nodeType":"ForStatement","src":"5284:189:16"},{"expression":{"id":4470,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"5490:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"functionReturnParameters":4427,"id":4471,"nodeType":"Return","src":"5483:12:16"}]},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"getShareEntity","nameLocation":"5071:14:16","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"_tokenId","nameLocation":"5094:8:16","nodeType":"VariableDeclaration","scope":4473,"src":"5086:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"owner","nameLocation":"5112:5:16","nodeType":"VariableDeclaration","scope":4473,"src":"5104:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4421,"name":"address","nodeType":"ElementaryTypeName","src":"5104:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5085:33:16"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4473,"src":"5142:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":4425,"nodeType":"UserDefinedTypeName","pathNode":{"id":4424,"name":"CurrentOwner","nameLocations":["5142:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"5142:12:16"},"referencedDeclaration":3942,"src":"5142:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"src":"5141:21:16"},"scope":4976,"src":"5062:441:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4523,"nodeType":"Block","src":"5603:317:16","statements":[{"assignments":[4483],"declarations":[{"constant":false,"id":4483,"mutability":"mutable","name":"index","nameLocation":"5622:5:16","nodeType":"VariableDeclaration","scope":4523,"src":"5614:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4484,"nodeType":"VariableDeclarationStatement","src":"5614:13:16"},{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"shareList","nameLocation":"5660:9:16","nodeType":"VariableDeclaration","scope":4523,"src":"5638:31:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"},"typeName":{"baseType":{"id":4487,"nodeType":"UserDefinedTypeName","pathNode":{"id":4486,"name":"CurrentOwner","nameLocations":["5638:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3942,"src":"5638:12:16"},"referencedDeclaration":3942,"src":"5638:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":4488,"nodeType":"ArrayTypeName","src":"5638:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}},"visibility":"internal"}],"id":4493,"initialValue":{"baseExpression":{"id":4490,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"5672:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":4492,"indexExpression":{"id":4491,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"5692:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5672:29:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5638:63:16"},{"body":{"id":4519,"nodeType":"Block","src":"5756:134:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4505,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5775:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":4507,"indexExpression":{"id":4506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"5785:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5775:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3942_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":4508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5788:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3939,"src":"5775:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4509,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"5797:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5775:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4518,"nodeType":"IfStatement","src":"5771:108:16","trueBody":{"id":4517,"nodeType":"Block","src":"5804:75:16","statements":[{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"5823:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"5831:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"5823:9:16"},{"expression":{"id":4515,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"5858:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4481,"id":4516,"nodeType":"Return","src":"5851:12:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"5729:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4499,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5733:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3942_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5743:6:16","memberName":"length","nodeType":"MemberAccess","src":"5733:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5729:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4520,"initializationExpression":{"assignments":[4495],"declarations":[{"constant":false,"id":4495,"mutability":"mutable","name":"i","nameLocation":"5722:1:16","nodeType":"VariableDeclaration","scope":4520,"src":"5717:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint","nodeType":"ElementaryTypeName","src":"5717:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4497,"initialValue":{"hexValue":"30","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5726:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5717:10:16"},"loopExpression":{"expression":{"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5751:3:16","subExpression":{"id":4502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"5751:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4504,"nodeType":"ExpressionStatement","src":"5751:3:16"},"nodeType":"ForStatement","src":"5712:178:16"},{"expression":{"id":4521,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"5907:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4481,"id":4522,"nodeType":"Return","src":"5900:12:16"}]},"id":4524,"implemented":true,"kind":"function","modifiers":[],"name":"getShareArrayIndex","nameLocation":"5520:18:16","nodeType":"FunctionDefinition","parameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"_tokenId","nameLocation":"5547:8:16","nodeType":"VariableDeclaration","scope":4524,"src":"5539:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"owner","nameLocation":"5565:5:16","nodeType":"VariableDeclaration","scope":4524,"src":"5557:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4476,"name":"address","nodeType":"ElementaryTypeName","src":"5557:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5538:33:16"},"returnParameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4524,"src":"5595:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"5595:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5594:9:16"},"scope":4976,"src":"5511:409:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4539,"nodeType":"Block","src":"6001:51:16","statements":[{"expression":{"arguments":[{"id":4534,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"6024:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4535,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"6031:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4536,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"6041:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4533,"name":"addVoteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"6012:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4538,"nodeType":"ExpressionStatement","src":"6012:32:16"}]},"functionSelector":"d4d421ae","id":4540,"implemented":true,"kind":"function","modifiers":[],"name":"acquisition","nameLocation":"5937:11:16","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"owner","nameLocation":"5957:5:16","nodeType":"VariableDeclaration","scope":4540,"src":"5949:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4525,"name":"address","nodeType":"ElementaryTypeName","src":"5949:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4528,"mutability":"mutable","name":"operator","nameLocation":"5972:8:16","nodeType":"VariableDeclaration","scope":4540,"src":"5964:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4527,"name":"address","nodeType":"ElementaryTypeName","src":"5964:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4530,"mutability":"mutable","name":"id","nameLocation":"5990:2:16","nodeType":"VariableDeclaration","scope":4540,"src":"5982:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5948:45:16"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[],"src":"6001:0:16"},"scope":4976,"src":"5928:124:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4577,"nodeType":"Block","src":"6133:259:16","statements":[{"assignments":[4550],"declarations":[{"constant":false,"id":4550,"mutability":"mutable","name":"_number","nameLocation":"6152:7:16","nodeType":"VariableDeclaration","scope":4577,"src":"6144:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"6144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4555,"initialValue":{"arguments":[{"id":4552,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6172:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4553,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"6179:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4551,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"6162:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6144:38:16"},{"assignments":[4558],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"newVote","nameLocation":"6205:7:16","nodeType":"VariableDeclaration","scope":4577,"src":"6193:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote"},"typeName":{"id":4557,"nodeType":"UserDefinedTypeName","pathNode":{"id":4556,"name":"Vote","nameLocations":["6193:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"6193:4:16"},"referencedDeclaration":3947,"src":"6193:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"visibility":"internal"}],"id":4563,"initialValue":{"arguments":[{"id":4560,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6243:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4561,"name":"_number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"6272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4559,"name":"Vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"6215:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Vote_$3947_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.Vote storage pointer)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6235:5:16","6263:6:16"],"names":["voter","number"],"nodeType":"FunctionCall","src":"6215:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"nodeType":"VariableDeclarationStatement","src":"6193:102:16"},{"expression":{"arguments":[{"id":4568,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"6324:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}],"expression":{"baseExpression":{"id":4564,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"6306:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":4566,"indexExpression":{"id":4565,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"6315:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6306:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6319:4:16","memberName":"push","nodeType":"MemberAccess","src":"6306:17:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_ptr_$_t_struct$_Vote_$3947_storage_$returns$__$attached_to$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_ptr_$","typeString":"function (struct AiYueNFTExchange.Vote storage ref[] storage pointer,struct AiYueNFTExchange.Vote storage ref)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4570,"nodeType":"ExpressionStatement","src":"6306:26:16"},{"expression":{"arguments":[{"id":4572,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6362:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4573,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6369:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6379:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4571,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"6343:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6343:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4576,"nodeType":"ExpressionStatement","src":"6343:41:16"}]},"functionSelector":"c2f1eafd","id":4578,"implemented":true,"kind":"function","modifiers":[],"name":"addVoteInfo","nameLocation":"6069:11:16","nodeType":"FunctionDefinition","parameters":{"id":4547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"voter","nameLocation":"6089:5:16","nodeType":"VariableDeclaration","scope":4578,"src":"6081:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4541,"name":"address","nodeType":"ElementaryTypeName","src":"6081:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"operator","nameLocation":"6104:8:16","nodeType":"VariableDeclaration","scope":4578,"src":"6096:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4543,"name":"address","nodeType":"ElementaryTypeName","src":"6096:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4546,"mutability":"mutable","name":"id","nameLocation":"6122:2:16","nodeType":"VariableDeclaration","scope":4578,"src":"6114:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"6114:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6080:45:16"},"returnParameters":{"id":4548,"nodeType":"ParameterList","parameters":[],"src":"6133:0:16"},"scope":4976,"src":"6060:332:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4591,"nodeType":"Block","src":"6472:60:16","statements":[{"expression":{"arguments":[{"id":4586,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"6502:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4587,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"6509:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6519:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4585,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"6483:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6483:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4590,"nodeType":"ExpressionStatement","src":"6483:41:16"}]},"functionSelector":"c18dfec3","id":4592,"implemented":true,"kind":"function","modifiers":[],"name":"approvalForAll","nameLocation":"6409:14:16","nodeType":"FunctionDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"owner","nameLocation":"6432:5:16","nodeType":"VariableDeclaration","scope":4592,"src":"6424:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4579,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4582,"mutability":"mutable","name":"operator","nameLocation":"6447:8:16","nodeType":"VariableDeclaration","scope":4592,"src":"6439:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6423:33:16"},"returnParameters":{"id":4584,"nodeType":"ParameterList","parameters":[],"src":"6472:0:16"},"scope":4976,"src":"6400:132:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4606,"nodeType":"Block","src":"6634:61:16","statements":[{"expression":{"arguments":[{"id":4602,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6669:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4603,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"6678:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4601,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6652:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4600,"id":4605,"nodeType":"Return","src":"6645:42:16"}]},"functionSelector":"0b1714fd","id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"approvedForAll","nameLocation":"6549:14:16","nodeType":"FunctionDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4594,"mutability":"mutable","name":"account","nameLocation":"6572:7:16","nodeType":"VariableDeclaration","scope":4607,"src":"6564:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4593,"name":"address","nodeType":"ElementaryTypeName","src":"6564:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"operator","nameLocation":"6589:8:16","nodeType":"VariableDeclaration","scope":4607,"src":"6581:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4595,"name":"address","nodeType":"ElementaryTypeName","src":"6581:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6563:35:16"},"returnParameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4607,"src":"6628:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4598,"name":"bool","nodeType":"ElementaryTypeName","src":"6628:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6627:6:16"},"scope":4976,"src":"6540:155:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4660,"nodeType":"Block","src":"6774:297:16","statements":[{"assignments":[4617],"declarations":[{"constant":false,"id":4617,"mutability":"mutable","name":"all","nameLocation":"6793:3:16","nodeType":"VariableDeclaration","scope":4660,"src":"6785:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"6785:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4622,"initialValue":{"expression":{"baseExpression":{"id":4618,"name":"initialOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"6799:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3932_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner storage ref)"}},"id":4620,"indexExpression":{"id":4619,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"6813:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6799:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"id":4621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6817:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"6799:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6785:38:16"},{"assignments":[4624],"declarations":[{"constant":false,"id":4624,"mutability":"mutable","name":"realVoteNumber","nameLocation":"6842:14:16","nodeType":"VariableDeclaration","scope":4660,"src":"6834:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"6834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4626,"initialValue":{"hexValue":"30","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6859:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6834:26:16"},{"assignments":[4631],"declarations":[{"constant":false,"id":4631,"mutability":"mutable","name":"voteList","nameLocation":"6885:8:16","nodeType":"VariableDeclaration","scope":4660,"src":"6871:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote[]"},"typeName":{"baseType":{"id":4629,"nodeType":"UserDefinedTypeName","pathNode":{"id":4628,"name":"Vote","nameLocations":["6871:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"6871:4:16"},"referencedDeclaration":3947,"src":"6871:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":4630,"nodeType":"ArrayTypeName","src":"6871:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}},"visibility":"internal"}],"id":4635,"initialValue":{"baseExpression":{"id":4632,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"6896:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":4634,"indexExpression":{"id":4633,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"6905:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6896:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6871:37:16"},{"body":{"id":4654,"nodeType":"Block","src":"6962:63:16","statements":[{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4647,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"6977:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":4648,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"6995:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4650,"indexExpression":{"id":4649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"7004:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6995:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"id":4651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7007:6:16","memberName":"number","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"6995:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6977:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"6977:36:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"6936:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4641,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"6940:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6949:6:16","memberName":"length","nodeType":"MemberAccess","src":"6940:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6936:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"initializationExpression":{"assignments":[4637],"declarations":[{"constant":false,"id":4637,"mutability":"mutable","name":"i","nameLocation":"6929:1:16","nodeType":"VariableDeclaration","scope":4655,"src":"6924:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint","nodeType":"ElementaryTypeName","src":"6924:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4639,"initialValue":{"hexValue":"30","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6933:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6924:10:16"},"loopExpression":{"expression":{"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6957:3:16","subExpression":{"id":4644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"6957:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4646,"nodeType":"ExpressionStatement","src":"6957:3:16"},"nodeType":"ForStatement","src":"6919:106:16"},{"expression":{"components":[{"id":4656,"name":"all","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"7043:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4657,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"7048:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7042:21:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4615,"id":4659,"nodeType":"Return","src":"7035:28:16"}]},"functionSelector":"8d824273","id":4661,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteInfo","nameLocation":"6712:11:16","nodeType":"FunctionDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"id","nameLocation":"6732:2:16","nodeType":"VariableDeclaration","scope":4661,"src":"6724:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6723:12:16"},"returnParameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4661,"src":"6757:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"6757:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4661,"src":"6766:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"6766:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6756:18:16"},"scope":4976,"src":"6703:368:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4703,"nodeType":"Block","src":"7139:222:16","statements":[{"assignments":[4672],"declarations":[{"constant":false,"id":4672,"mutability":"mutable","name":"voteList","nameLocation":"7164:8:16","nodeType":"VariableDeclaration","scope":4703,"src":"7150:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote[]"},"typeName":{"baseType":{"id":4670,"nodeType":"UserDefinedTypeName","pathNode":{"id":4669,"name":"Vote","nameLocations":["7150:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"7150:4:16"},"referencedDeclaration":3947,"src":"7150:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":4671,"nodeType":"ArrayTypeName","src":"7150:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}},"visibility":"internal"}],"id":4676,"initialValue":{"baseExpression":{"id":4673,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"7175:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":4675,"indexExpression":{"id":4674,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"7184:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7175:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7150:37:16"},{"body":{"id":4701,"nodeType":"Block","src":"7241:111:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4688,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"7260:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4690,"indexExpression":{"id":4689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"7269:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7260:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"id":4691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7272:5:16","memberName":"voter","nodeType":"MemberAccess","referencedDeclaration":3944,"src":"7260:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4692,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"7281:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7260:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4700,"nodeType":"IfStatement","src":"7256:85:16","trueBody":{"id":4699,"nodeType":"Block","src":"7288:53:16","statements":[{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7307:18:16","subExpression":{"baseExpression":{"id":4694,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"7314:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4696,"indexExpression":{"id":4695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"7323:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7314:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4698,"nodeType":"ExpressionStatement","src":"7307:18:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"7215:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4682,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"7219:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7228:6:16","memberName":"length","nodeType":"MemberAccess","src":"7219:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7215:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4702,"initializationExpression":{"assignments":[4678],"declarations":[{"constant":false,"id":4678,"mutability":"mutable","name":"i","nameLocation":"7208:1:16","nodeType":"VariableDeclaration","scope":4702,"src":"7203:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint","nodeType":"ElementaryTypeName","src":"7203:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4680,"initialValue":{"hexValue":"30","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7212:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7203:10:16"},"loopExpression":{"expression":{"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7236:3:16","subExpression":{"id":4685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"7236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4687,"nodeType":"ExpressionStatement","src":"7236:3:16"},"nodeType":"ForStatement","src":"7198:154:16"}]},"id":4704,"implemented":true,"kind":"function","modifiers":[],"name":"removeVoteInfo","nameLocation":"7088:14:16","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"id","nameLocation":"7111:2:16","nodeType":"VariableDeclaration","scope":4704,"src":"7103:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"7103:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"voter","nameLocation":"7123:5:16","nodeType":"VariableDeclaration","scope":4704,"src":"7115:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4664,"name":"address","nodeType":"ElementaryTypeName","src":"7115:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7102:27:16"},"returnParameters":{"id":4667,"nodeType":"ParameterList","parameters":[],"src":"7139:0:16"},"scope":4976,"src":"7079:282:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4747,"nodeType":"Block","src":"7447:236:16","statements":[{"assignments":[4717],"declarations":[{"constant":false,"id":4717,"mutability":"mutable","name":"voteList","nameLocation":"7472:8:16","nodeType":"VariableDeclaration","scope":4747,"src":"7458:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote[]"},"typeName":{"baseType":{"id":4715,"nodeType":"UserDefinedTypeName","pathNode":{"id":4714,"name":"Vote","nameLocations":["7458:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"7458:4:16"},"referencedDeclaration":3947,"src":"7458:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":4716,"nodeType":"ArrayTypeName","src":"7458:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}},"visibility":"internal"}],"id":4721,"initialValue":{"baseExpression":{"id":4718,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"7483:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":4720,"indexExpression":{"id":4719,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"7492:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7483:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7458:37:16"},{"body":{"id":4743,"nodeType":"Block","src":"7549:104:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4733,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"7568:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4735,"indexExpression":{"id":4734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"7577:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7568:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"id":4736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7580:5:16","memberName":"voter","nodeType":"MemberAccess","referencedDeclaration":3944,"src":"7568:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4737,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"7589:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7568:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4742,"nodeType":"IfStatement","src":"7564:78:16","trueBody":{"id":4741,"nodeType":"Block","src":"7596:46:16","statements":[{"expression":{"hexValue":"74727565","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7622:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4712,"id":4740,"nodeType":"Return","src":"7615:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"7523:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4727,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"7527:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:6:16","memberName":"length","nodeType":"MemberAccess","src":"7527:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7523:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4744,"initializationExpression":{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"i","nameLocation":"7516:1:16","nodeType":"VariableDeclaration","scope":4744,"src":"7511:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint","nodeType":"ElementaryTypeName","src":"7511:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4725,"initialValue":{"hexValue":"30","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7520:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7511:10:16"},"loopExpression":{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7544:3:16","subExpression":{"id":4730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"7544:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"7544:3:16"},"nodeType":"ForStatement","src":"7506:147:16"},{"expression":{"hexValue":"66616c7365","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7670:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4712,"id":4746,"nodeType":"Return","src":"7663:12:16"}]},"functionSelector":"563d7fc6","id":4748,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteInfoExit","nameLocation":"7378:15:16","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"id","nameLocation":"7402:2:16","nodeType":"VariableDeclaration","scope":4748,"src":"7394:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4705,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4708,"mutability":"mutable","name":"voter","nameLocation":"7414:5:16","nodeType":"VariableDeclaration","scope":4748,"src":"7406:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4707,"name":"address","nodeType":"ElementaryTypeName","src":"7406:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7393:27:16"},"returnParameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4748,"src":"7442:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4710,"name":"bool","nodeType":"ElementaryTypeName","src":"7442:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7441:6:16"},"scope":4976,"src":"7369:314:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4769,"nodeType":"Block","src":"7764:117:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4757,"name":"initialOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"7779:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3932_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner storage ref)"}},"id":4759,"indexExpression":{"id":4758,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"7793:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7779:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"id":4760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7797:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"7779:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4761,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"7806:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7779:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4766,"nodeType":"IfStatement","src":"7775:76:16","trueBody":{"id":4765,"nodeType":"Block","src":"7813:38:16","statements":[{"expression":{"hexValue":"74727565","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7835:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4756,"id":4764,"nodeType":"Return","src":"7828:11:16"}]}},{"expression":{"hexValue":"66616c7365","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7868:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4756,"id":4768,"nodeType":"Return","src":"7861:12:16"}]},"functionSelector":"f23c361b","id":4770,"implemented":true,"kind":"function","modifiers":[],"name":"getNftEXit","nameLocation":"7700:10:16","nodeType":"FunctionDefinition","parameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"id","nameLocation":"7719:2:16","nodeType":"VariableDeclaration","scope":4770,"src":"7711:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"7711:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4752,"mutability":"mutable","name":"owner","nameLocation":"7731:5:16","nodeType":"VariableDeclaration","scope":4770,"src":"7723:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"7723:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7710:27:16"},"returnParameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4770,"src":"7759:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4754,"name":"bool","nodeType":"ElementaryTypeName","src":"7759:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7758:6:16"},"scope":4976,"src":"7691:190:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4855,"nodeType":"Block","src":"7954:574:16","statements":[{"assignments":[4778],"declarations":[{"constant":false,"id":4778,"mutability":"mutable","name":"all","nameLocation":"7973:3:16","nodeType":"VariableDeclaration","scope":4855,"src":"7965:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"7965:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4783,"initialValue":{"expression":{"baseExpression":{"id":4779,"name":"initialOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"7979:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3932_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner storage ref)"}},"id":4781,"indexExpression":{"id":4780,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"7993:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7979:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3932_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"id":4782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7997:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"7979:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7965:38:16"},{"assignments":[4785],"declarations":[{"constant":false,"id":4785,"mutability":"mutable","name":"realVoteNumber","nameLocation":"8022:14:16","nodeType":"VariableDeclaration","scope":4855,"src":"8014:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"8014:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4787,"initialValue":{"hexValue":"30","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8039:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8014:26:16"},{"assignments":[4789],"declarations":[{"constant":false,"id":4789,"mutability":"mutable","name":"result","nameLocation":"8056:6:16","nodeType":"VariableDeclaration","scope":4855,"src":"8051:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4788,"name":"bool","nodeType":"ElementaryTypeName","src":"8051:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4791,"initialValue":{"hexValue":"66616c7365","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8065:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"8051:19:16"},{"assignments":[4796],"declarations":[{"constant":false,"id":4796,"mutability":"mutable","name":"voteList","nameLocation":"8095:8:16","nodeType":"VariableDeclaration","scope":4855,"src":"8081:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote[]"},"typeName":{"baseType":{"id":4794,"nodeType":"UserDefinedTypeName","pathNode":{"id":4793,"name":"Vote","nameLocations":["8081:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"8081:4:16"},"referencedDeclaration":3947,"src":"8081:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":4795,"nodeType":"ArrayTypeName","src":"8081:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}},"visibility":"internal"}],"id":4800,"initialValue":{"baseExpression":{"id":4797,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"8106:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3947_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":4799,"indexExpression":{"id":4798,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"8115:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8106:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8081:37:16"},{"body":{"id":4819,"nodeType":"Block","src":"8172:63:16","statements":[{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4812,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"8187:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":4813,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"8205:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4815,"indexExpression":{"id":4814,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"8214:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8205:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3947_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"id":4816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8217:6:16","memberName":"number","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"8205:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8187:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"8187:36:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"8146:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4806,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"8150:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3947_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:16","memberName":"length","nodeType":"MemberAccess","src":"8150:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8146:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4820,"initializationExpression":{"assignments":[4802],"declarations":[{"constant":false,"id":4802,"mutability":"mutable","name":"i","nameLocation":"8139:1:16","nodeType":"VariableDeclaration","scope":4820,"src":"8134:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint","nodeType":"ElementaryTypeName","src":"8134:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4804,"initialValue":{"hexValue":"30","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8143:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8134:10:16"},"loopExpression":{"expression":{"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8167:3:16","subExpression":{"id":4809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"8167:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4811,"nodeType":"ExpressionStatement","src":"8167:3:16"},"nodeType":"ForStatement","src":"8129:106:16"},{"assignments":[4822],"declarations":[{"constant":false,"id":4822,"mutability":"mutable","name":"per","nameLocation":"8253:3:16","nodeType":"VariableDeclaration","scope":4855,"src":"8245:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"8245:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4827,"initialValue":{"arguments":[{"id":4824,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"8279:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4825,"name":"all","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"8295:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4823,"name":"calculatePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"8259:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8259:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8245:54:16"},{"assignments":[4829],"declarations":[{"constant":false,"id":4829,"mutability":"mutable","name":"standard","nameLocation":"8318:8:16","nodeType":"VariableDeclaration","scope":4855,"src":"8310:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"8310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4834,"initialValue":{"arguments":[{"hexValue":"32","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8349:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"33","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8352:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":4830,"name":"calculatePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"8329:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8310:44:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"per","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"8369:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4836,"name":"standard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"8375:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8369:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4843,"nodeType":"IfStatement","src":"8365:60:16","trueBody":{"id":4842,"nodeType":"Block","src":"8385:40:16","statements":[{"expression":{"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8400:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8409:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8400:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"ExpressionStatement","src":"8400:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"per","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"8439:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4845,"name":"standard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"8446:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8439:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4852,"nodeType":"IfStatement","src":"8435:62:16","trueBody":{"id":4851,"nodeType":"Block","src":"8456:41:16","statements":[{"expression":{"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8471:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8480:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8471:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4850,"nodeType":"ExpressionStatement","src":"8471:14:16"}]}},{"expression":{"id":4853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8514:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4776,"id":4854,"nodeType":"Return","src":"8507:13:16"}]},"functionSelector":"daddb9c8","id":4856,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteInfoResult","nameLocation":"7898:17:16","nodeType":"FunctionDefinition","parameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"id","nameLocation":"7924:2:16","nodeType":"VariableDeclaration","scope":4856,"src":"7916:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4771,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7915:12:16"},"returnParameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4856,"src":"7949:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4774,"name":"bool","nodeType":"ElementaryTypeName","src":"7949:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7948:6:16"},"scope":4976,"src":"7889:639:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4883,"nodeType":"Block","src":"8635:175:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"8654:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8654:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656e6f6d696e61746f72206d7573742062652061206e6f6e2d7a65726f2076616c7565","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8672:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_38a60e5000aba6e2a4ece2bcc86838d1bc291fdffd503ef9e0838f7a0bec4b48","typeString":"literal_string \"Denominator must be a non-zero value\""},"value":"Denominator must be a non-zero value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38a60e5000aba6e2a4ece2bcc86838d1bc291fdffd503ef9e0838f7a0bec4b48","typeString":"literal_string \"Denominator must be a non-zero value\""}],"id":4865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8646:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8646:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4871,"nodeType":"ExpressionStatement","src":"8646:65:16"},{"assignments":[4873],"declarations":[{"constant":false,"id":4873,"mutability":"mutable","name":"percentage","nameLocation":"8730:10:16","nodeType":"VariableDeclaration","scope":4883,"src":"8722:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"8722:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4880,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"8744:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8756:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8744:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8743:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4878,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"8763:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8743:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8722:52:16"},{"expression":{"id":4881,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"8792:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4864,"id":4882,"nodeType":"Return","src":"8785:17:16"}]},"functionSelector":"2133e3b9","id":4884,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePercentage","nameLocation":"8545:19:16","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"numerator","nameLocation":"8573:9:16","nodeType":"VariableDeclaration","scope":4884,"src":"8565:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"8565:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"denominator","nameLocation":"8592:11:16","nodeType":"VariableDeclaration","scope":4884,"src":"8584:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"8584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8564:40:16"},"returnParameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4884,"src":"8626:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"8626:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8625:9:16"},"scope":4976,"src":"8536:274:16","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4887,"nodeType":"Block","src":"8854:8:16","statements":[]},"functionSelector":"d0e30db0","id":4888,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"8829:7:16","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[],"src":"8836:2:16"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[],"src":"8854:0:16"},"scope":4976,"src":"8820:42:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4916,"nodeType":"Block","src":"8932:168:16","statements":[{"assignments":[4896],"declarations":[{"constant":false,"id":4896,"mutability":"mutable","name":"contractAddress","nameLocation":"8951:15:16","nodeType":"VariableDeclaration","scope":4916,"src":"8943:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4895,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4901,"initialValue":{"arguments":[{"id":4899,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8977:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4976","typeString":"contract AiYueNFTExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4976","typeString":"contract AiYueNFTExchange"}],"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8969:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4897,"name":"address","nodeType":"ElementaryTypeName","src":"8969:7:16","typeDescriptions":{}}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8969:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:39:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4903,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"9001:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9017:7:16","memberName":"balance","nodeType":"MemberAccess","src":"9001:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"9027:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9001:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c65737320616d6f756e7420746f207769746864726177","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9035:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f75de9036d0596be9b861bb12895cf0da60c9c3c7cb43108721d2b264039ce2","typeString":"literal_string \"less amount to withdraw\""},"value":"less amount to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f75de9036d0596be9b861bb12895cf0da60c9c3c7cb43108721d2b264039ce2","typeString":"literal_string \"less amount to withdraw\""}],"id":4902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8993:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4909,"nodeType":"ExpressionStatement","src":"8993:68:16"},{"expression":{"arguments":[{"id":4913,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"9085:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4910,"name":"rec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"9072:3:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9076:8:16","memberName":"transfer","nodeType":"MemberAccess","src":"9072:12:16","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9072:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4915,"nodeType":"ExpressionStatement","src":"9072:20:16"}]},"functionSelector":"f3fef3a3","id":4917,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"8879:8:16","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"rec","nameLocation":"8904:3:16","nodeType":"VariableDeclaration","scope":4917,"src":"8888:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4889,"name":"address","nodeType":"ElementaryTypeName","src":"8888:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4892,"mutability":"mutable","name":"amount","nameLocation":"8917:6:16","nodeType":"VariableDeclaration","scope":4917,"src":"8909:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4891,"name":"uint256","nodeType":"ElementaryTypeName","src":"8909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8887:37:16"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[],"src":"8932:0:16"},"scope":4976,"src":"8870:230:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4928,"nodeType":"Block","src":"9160:47:16","statements":[{"expression":{"expression":{"arguments":[{"id":4924,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9186:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4976","typeString":"contract AiYueNFTExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4976","typeString":"contract AiYueNFTExchange"}],"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9178:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"9178:7:16","typeDescriptions":{}}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9178:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9192:7:16","memberName":"balance","nodeType":"MemberAccess","src":"9178:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4921,"id":4927,"nodeType":"Return","src":"9171:28:16"}]},"functionSelector":"12065fe0","id":4929,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"9117:10:16","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[],"src":"9127:2:16"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4929,"src":"9151:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"9151:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9150:9:16"},"scope":4976,"src":"9108:99:16","stateMutability":"view","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"1554e1ce","id":4931,"mutability":"mutable","name":"usdtAddr","nameLocation":"9230:8:16","nodeType":"VariableDeclaration","scope":4976,"src":"9215:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4930,"name":"address","nodeType":"ElementaryTypeName","src":"9215:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":4940,"nodeType":"Block","src":"9294:39:16","statements":[{"expression":{"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"usdtAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"9305:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4937,"name":"_usdtAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"9316:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9305:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4939,"nodeType":"ExpressionStatement","src":"9305:20:16"}]},"functionSelector":"de7d69a8","id":4941,"implemented":true,"kind":"function","modifiers":[],"name":"setUsdtAddr","nameLocation":"9256:11:16","nodeType":"FunctionDefinition","parameters":{"id":4934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"_usdtAddr","nameLocation":"9276:9:16","nodeType":"VariableDeclaration","scope":4941,"src":"9268:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4932,"name":"address","nodeType":"ElementaryTypeName","src":"9268:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9267:19:16"},"returnParameters":{"id":4935,"nodeType":"ParameterList","parameters":[],"src":"9294:0:16"},"scope":4976,"src":"9247:86:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4974,"nodeType":"Block","src":"9435:156:16","statements":[{"expression":{"arguments":[{"id":4953,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"9458:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4954,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"9465:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4955,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"9475:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4952,"name":"addVoteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"9446:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9446:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4957,"nodeType":"ExpressionStatement","src":"9446:32:16"},{"assignments":[4960],"declarations":[{"constant":false,"id":4960,"mutability":"mutable","name":"token","nameLocation":"9496:5:16","nodeType":"VariableDeclaration","scope":4974,"src":"9489:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"},"typeName":{"id":4959,"nodeType":"UserDefinedTypeName","pathNode":{"id":4958,"name":"IERC20","nameLocations":["9489:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1547,"src":"9489:6:16"},"referencedDeclaration":1547,"src":"9489:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"visibility":"internal"}],"id":4964,"initialValue":{"arguments":[{"id":4962,"name":"usdtAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"9511:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4961,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"9504:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1547_$","typeString":"type(contract IERC20)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9504:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"9489:31:16"},{"expression":{"arguments":[{"expression":{"id":4968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9554:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9558:6:16","memberName":"sender","nodeType":"MemberAccess","src":"9554:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4970,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"9566:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4971,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"9576:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"9531:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1547","typeString":"contract IERC20"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9537:16:16","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1643,"src":"9531:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1547_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1547_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9531:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4973,"nodeType":"ExpressionStatement","src":"9531:52:16"}]},"functionSelector":"0e5882b3","id":4975,"implemented":true,"kind":"function","modifiers":[],"name":"acquisitionWithUsdt","nameLocation":"9350:19:16","nodeType":"FunctionDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"owner","nameLocation":"9378:5:16","nodeType":"VariableDeclaration","scope":4975,"src":"9370:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4942,"name":"address","nodeType":"ElementaryTypeName","src":"9370:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4945,"mutability":"mutable","name":"operator","nameLocation":"9393:8:16","nodeType":"VariableDeclaration","scope":4975,"src":"9385:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"9385:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"id","nameLocation":"9411:2:16","nodeType":"VariableDeclaration","scope":4975,"src":"9403:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"9403:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"amount","nameLocation":"9420:6:16","nodeType":"VariableDeclaration","scope":4975,"src":"9415:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint","nodeType":"ElementaryTypeName","src":"9415:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9369:58:16"},"returnParameters":{"id":4951,"nodeType":"ParameterList","parameters":[],"src":"9435:0:16"},"scope":4976,"src":"9341:250:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4977,"src":"335:9261:16","usedErrors":[]}],"src":"33:9567:16"}}},"contracts":{"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC1155.sol:ERC1155\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tnear_call\tr0, @__runtime, @DEFAULT_UNWIND\n.BB0_1:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t31, r1, r2\n\tsub.s\t32, r0, r9\n\tand\tr2, r9, r4\n\tld.1\t64, r2\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB0_41\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_41:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t32, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r1, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr2, r4\n\tsub.s!\t@CPI0_1[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r1, r3\n\tadd\tr4, r2, r1\n\tadd\t31, r1, r2\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r2, r2\n\tand\t@CPI0_2[0], r3, r6\n\tsub!\tr2, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr2, r6, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tadd\tr5, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_1[0], r2, r4\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tadd\t63, r2, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1.inc\tr7, r2, r6\n\tadd\tr1, r2, r4\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.le\t@.BB0_17\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r3\n.BB0_19:\n\tadd\tr3, r6, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r1, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr6, r2, r1\n\tst.1\tr1, r0\n\tld.1\tr7, r5\n\tsub.s!\t@CPI0_1[0], r5, r1\n\tjump.gt\t@.BB0_5\n\tadd\t2, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_23\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_27\n\tadd\tr3, r0, stack-[1]\n\tadd\tr5, r0, stack-[3]\n\tadd\tr4, r0, stack-[4]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr9, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr6, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[6], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[4], r0, r4\n\tjump.ge\t@.BB0_27\n.BB0_28:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_28\n.BB0_27:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_37\n\tadd\tr5, r0, stack-[3]\n\tadd\tr4, r0, stack-[4]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr9, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r7\n\tand!\tr7, r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_34\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_33:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_33\n.BB0_34:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_36\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_36:\n\tadd\t1, r0, r1\n\tshl.s\t1, r7, r2\n\tadd\tstack-[4], r0, r4\n\tjump\t@.BB0_29\n.BB0_37:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_39\n\tld.1\tr6, r1\n.BB0_39:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r5, r1\n.BB0_29:\n\tor\tr2, r1, r1\n\tsstore\tr4, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__runtime:\n.func_begin2:\n\tnop\tstack+=[17]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.gt\t@.BB2_7\n\tsub.s!\t@CPI2_6[0], r1, r2\n\tjump.gt\t@.BB2_5\n\tsub.s!\t@CPI2_9[0], r1, r2\n\tjump.eq\t@.BB2_13\n\tsub.s!\t@CPI2_10[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI2_22[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_12\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI2_49[0], r1, r3\n\tjump.eq\t@.BB2_23\n\tsub.s!\t@CPI2_50[0], r1, r3\n\tjump.eq\t@.BB2_23\n\tsub.s!\t@CPI2_51[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB2_23:\n\tand\t1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_7:\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_10\n\tsub.s!\t@CPI2_4[0], r1, r2\n\tjump.eq\t@.BB2_139\n\tsub.s!\t@CPI2_5[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r2, r2\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub.s!\t0, r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[12]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.caller\tr2\n\tadd\tstack-[13], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB2_186\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_5:\n\tsub.s!\t@CPI2_7[0], r1, r2\n\tjump.eq\t@.BB2_24\n\tsub.s!\t@CPI2_8[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI2_11[0], r0, r3\n\tsub.s!\t160, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_12[0], r1, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r4, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r3, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_13[0], r3, r5\n\tjump.gt\t@.BB2_12\n\tadd\t35, r3, r5\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r2, r8\n\tand\t@CPI2_11[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI2_11[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_12\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_34[0], r4, r5\n\tjump.ge\t@.BB2_41\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI2_13[0], r6, r8\n\tjump.gt\t@.BB2_41\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB2_41\n\tadd\tr9, r0, stack-[3]\n\tst.1\t64, r6\n\tadd\tr10, r0, stack-[6]\n\tst.1\tr10, r4\n\tadd\t36, r3, r3\n\tadd\tr5, r3, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB2_48\n\tadd\tstack-[6], r0, r2\n.BB2_47:\n\tptr.add\tstack[@ptr_calldata], r3, r4\n\tld\tr4, r4\n\tadd\t32, r2, r2\n\tst.1\tr2, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB2_47\n.BB2_48:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t100, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r5, r5\n\tand\t@CPI2_11[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI2_11[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_12\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_13[0], r4, r5\n\tadd\tstack-[3], r0, r7\n\tjump.gt\t@.BB2_41\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\tr6, r7, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[5]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI2_13[0], r6, r8\n\tjump.gt\t@.BB2_41\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r6\n\tadd\tstack-[5], r0, r6\n\tst.1\tr6, r4\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB2_57\n\tadd\tstack-[5], r0, r3\n.BB2_56:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB2_56\n.BB2_57:\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI2_13[0], r4, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r4, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr3, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r3, r3\n\tand\t@CPI2_11[0], r5, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI2_11[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr6, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_12\n\tadd\t4, r4, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tadd\tstack-[3], r0, r6\n\tjump.gt\t@.BB2_41\n\tadd\t63, r2, r3\n\tand\tr3, r6, r3\n\tld.1\t64, r6\n\tadd\tr6, r3, r3\n\tadd\tr6, r0, stack-[2]\n\tsub!\tr3, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI2_13[0], r3, r7\n\tjump.gt\t@.BB2_41\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r3\n\tadd\tstack-[2], r0, r3\n\tst.1.inc\tr3, r2, r3\n\tadd\t36, r4, r6\n\tadd\tr2, r6, r4\n\tsub!\tr4, r5, r4\n\tjump.gt\t@.BB2_12\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r6, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB2_268\n\tadd\tr0, r0, r7\n.BB2_65:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_65\n.BB2_268:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB2_67\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB2_67:\n\tadd\tr3, r2, r2\n\tst.1\tr2, r0\n\tand\t@CPI2_12[0], r1, r2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[10]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB2_68\n.BB2_72:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_73\n\tadd\tstack-[13], r0, r2\n\tand!\t@CPI2_12[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tjump.eq\t@.BB2_77\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[5], r0, r4\n\tjump.ne\t@.BB2_76\n.BB2_78:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB2_81\n\tadd\tr0, r0, r5\n\tadd\tstack-[6], r0, r6\n.BB2_80:\n\tadd\t32, r6, r6\n\tld.1\tr6, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r7\n\tjump.lt\t@.BB2_80\n.BB2_81:\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB2_84\n\tadd\tr0, r0, r3\n\tadd\tstack-[5], r0, r5\n.BB2_83:\n\tadd\t32, r5, r5\n\tld.1\tr5, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB2_83\n.BB2_84:\n\tsub\tr2, r1, r2\n\tadd\t@CPI2_14[0], r0, r3\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI2_14[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI2_43[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI2_44[0], r0, r4\n\tadd\tr3, r0, stack-[12]\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_12\n\tadd\t@CPI2_18[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_19[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_110\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_45[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[6], r0, r5\n\tld.1\tr5, r2\n\tadd\t164, r3, r1\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[13]\n\tadd\t196, r3, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB2_103\n\tadd\tr0, r0, r3\n.BB2_102:\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB2_102\n.BB2_103:\n\tsub.s\t4, r0, r2\n\tadd\tstack-[13], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t100, r3, r3\n\tadd\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[5], r0, r6\n\tld.1\tr6, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB2_106\n\tadd\tr0, r0, r4\n.BB2_105:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_105\n.BB2_106:\n\tadd\tr2, r1, r2\n\tadd\tstack-[13], r0, r3\n\tadd\t132, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r6\n\tld.1\tr6, r2\n\tst.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB2_109\n\tadd\tr0, r0, r3\n.BB2_108:\n\tadd\tr3, r1, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB2_108\n.BB2_109:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.ne\t@.BB2_112\n\tcontext.sp\tr4\n\tsub.s\t17, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\t0, r0, stack-[17]\n\tjump\t@.BB2_117\n.BB2_10:\n\tsub.s!\t@CPI2_2[0], r1, r2\n\tjump.eq\t@.BB2_189\n\tsub.s!\t@CPI2_3[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tsub.s!\t160, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_11[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_11[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r3, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI2_12[0], r3, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t100, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[10]\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[11]\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI2_13[0], r4, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r4, r3\n\tadd\t@CPI2_11[0], r0, r5\n\tsub!\tr3, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_11[0], r1, r7\n\tand\t@CPI2_11[0], r3, r3\n\tsub!\tr3, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI2_11[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_12\n\tadd\t4, r4, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_41\n\tadd\t63, r2, r3\n\tsub.s\t32, r0, r7\n\tand\tr3, r7, r3\n\tld.1\t64, r8\n\tadd\tr8, r3, r3\n\tsub!\tr3, r8, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI2_13[0], r3, r6\n\tjump.gt\t@.BB2_41\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB2_41\n\tadd\tr7, r0, stack-[8]\n\tst.1\t64, r3\n\tadd\tr8, r0, stack-[9]\n\tst.1.inc\tr8, r2, r3\n\tadd\t36, r4, r4\n\tadd\tr2, r4, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB2_12\n\tand\t31, r2, r1\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB2_265\n\tadd\tr0, r0, r6\n.BB2_206:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_206\n.BB2_265:\n\tsub.s!\t0, r1, r6\n\tjump.eq\t@.BB2_208\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r5\n\tshl.s\t3, r1, r1\n\tld.1\tr5, r6\n\tshl\tr6, r1, r6\n\tshr\tr6, r1, r6\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB2_208:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tcontext.caller\tr2\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB2_209\n.BB2_212:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_213\n.BB2_77:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_13:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_12[0], r1, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_139:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_11[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_11[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r4\n\tjump.gt\t@.BB2_12\n\tadd\t35, r2, r4\n\tadd\t@CPI2_11[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_11[0], r1, r1\n\tand\t@CPI2_11[0], r4, r4\n\tsub!\tr4, r1, r7\n\tadd.ge\t0, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\t4, r2, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI2_13[0], r3, r1\n\tjump.le\t@.BB2_144\n.BB2_41:\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_24:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\t2, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r7\n\tadd.eq\tr2, r0, r7\n\tsub.s!\t31, r7, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tand\t1, r2, r2\n\tsub!\tr5, r2, r2\n\tjump.eq\t@.BB2_28\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_189:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_12[0], r1, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r2, r2\n\tjump.le\t@.BB2_193\n.BB2_12:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_28:\n\tld.1\t64, r1\n\tst.1.inc\tr1, r7, r2\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_31\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub.s!\t0, r7, r2\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n\tjump\t@.BB2_29\n.BB2_193:\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_31:\n\tst.1\t0, r4\n\tsub.s!\t0, r7, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB2_29\n\tadd\t@CPI2_48[0], r0, r4\n\tadd\tr0, r0, r3\n.BB2_33:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r7, r5\n\tjump.lt\t@.BB2_33\n.BB2_29:\n\tadd\t32, r3, r2\n\tadd\tr1, r0, stack-[13]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_144:\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tsub.s\t32, r0, r1\n\tand\tr5, r1, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[9]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI2_13[0], r5, r7\n\tjump.gt\t@.BB2_41\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r5\n\tst.1.inc\tr5, r3, r5\n\tadd\tr5, r0, stack-[8]\n\tadd\t36, r2, r2\n\tadd\tr2, r4, r4\n\tadd\tstack[@calldatasize], r0, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB2_150\n\tadd\tstack-[8], r0, r3\n.BB2_149:\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI2_12[0], r5, r6\n\tjump.gt\t@.BB2_12\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB2_149\n.BB2_150:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r5, r5\n\tand\t@CPI2_11[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI2_11[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_12\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_13[0], r4, r5\n\tjump.gt\t@.BB2_41\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\tr6, r1, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[7]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI2_13[0], r6, r8\n\tjump.gt\t@.BB2_41\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r6\n\tadd\tstack-[7], r0, r6\n\tst.1.inc\tr6, r4, r6\n\tadd\tr6, r0, stack-[6]\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r4, r3\n\tjump.ne\t@.BB2_158\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB2_164\n\tjump\t@.BB2_162\n.BB2_186:\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[12], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_14[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_25[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_26[0], r0, r4\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[13], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_12\n.BB2_110:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_209:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB2_212\n.BB2_71:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_36[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_213:\n\tld.1\t64, r2\n\tsub.s!\t@CPI2_16[0], r2, r1\n\tjump.gt\t@.BB2_41\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1.inc\tr2, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB2_215:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB2_215\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB2_86\n\tadd\tstack-[11], r0, r2\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI2_16[0], r2, r3\n\tjump.gt\t@.BB2_41\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB2_219:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r4, r4\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB2_219\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_221\n.BB2_86:\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_158:\n\tadd\tstack-[7], r0, r3\n.BB2_159:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB2_159\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[9], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB2_162\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_41\n.BB2_164:\n\tshl.s\t5, r2, r3\n\tadd\t63, r3, r4\n\tand\tr4, r1, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r1\n\tadd\tr4, r0, stack-[5]\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI2_13[0], r1, r5\n\tjump.gt\t@.BB2_41\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r1\n\tadd\tstack-[5], r0, r1\n\tst.1.inc\tr1, r2, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB2_269\n\tadd\tr0, r0, r4\n.BB2_168:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_168\n.BB2_269:\n\tadd\tr7, r0, stack-[4]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB2_170\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[4], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB2_170:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_171\n.BB2_172:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t32, r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[5], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_162:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_31[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_221:\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB2_224\n.BB2_90:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_42[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_171:\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tr0, r0, r3\n.BB2_173:\n\tshl.s\t5, r3, r4\n\tadd\tstack-[8], r0, r1\n\tadd\tr4, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_12[0], r1, r2\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB2_86\n\tadd\tr3, r0, stack-[11]\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t0, r2, r1\n\tadd\tstack-[13], r0, r2\n\tjump.eq\t@.BB2_175\n\tadd\tstack-[6], r0, r1\n\tadd\tr4, r0, stack-[10]\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[11], r0, r3\n\tsub!\tr2, r3, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[10], r0, r4\n\tjump.le\t@.BB2_86\n\tadd\tr4, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB2_173\n\tjump\t@.BB2_172\n.BB2_224:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[6], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[10], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB2_229\n.BB2_96:\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_175:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_32[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_68:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB2_72\n\tjump\t@.BB2_71\n.BB2_73:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_37[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_38[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_229:\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_14[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_14[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI2_17[0], r0, r4\n\tadd\tr3, r0, stack-[6]\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[12], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_12\n\tadd\t@CPI2_18[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_19[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_110\n\tld.1\t64, r3\n\tadd\t132, r3, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_20[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[9], r0, r6\n\tld.1\tr6, r1\n\tadd\t164, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[5]\n\tadd\t196, r3, r2\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB2_235\n\tadd\tr0, r0, r3\n.BB2_234:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB2_234\n.BB2_235:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB2_237\n\tcontext.sp\tr5\n\tsub.s\t15, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[15]\n\tjump\t@.BB2_242\n.BB2_76:\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, r2\n.BB2_85:\n\tld.1\tr4, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB2_86\n\tadd\tr2, r0, stack-[7]\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r2\n\tld.1\tr2, r2\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB2_90\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[8], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB2_96\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r1\n\tsub!\tr2, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump.lt\t@.BB2_85\n\tjump\t@.BB2_78\n.BB2_112:\n\tadd\t31, r2, r2\n\tadd\tstack-[3], r0, r4\n\tand\tr2, r4, r2\n\tadd\tstack-[13], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_14[0], r5, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_14[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_14[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB2_267\n\tadd\tr0, r0, r6\n.BB2_114:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_114\n.BB2_267:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB2_116\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB2_116:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr4\n\tsub.s\t16, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\t0, r0, stack-[16]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_123\n.BB2_117:\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r1\n\tadd.lt\tr3, r0, r1\n\tadd\t31, r1, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r5\n\tsub.s!\t@CPI2_13[0], r2, r2\n\tjump.gt\t@.BB2_41\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB2_12\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_22[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_12\n\tdiv.s\t32, r4, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI2_45[0], r1, r1\n\tjump.eq\t@.BB2_110\n\tadd\t@CPI2_23[0], r0, r1\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_237:\n\tadd\t31, r1, r1\n\tadd\tstack-[8], r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI2_14[0], r0, r3\n\tadd\tstack-[5], r0, r5\n\tsub.s!\t@CPI2_14[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI2_14[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_14[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_14[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB2_264\n\tadd\tr0, r0, r7\n.BB2_239:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_239\n.BB2_264:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB2_241\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r0, r8\n\tadd\tr8, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB2_241:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t14, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[14]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_248\n.BB2_242:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r4\n\tsub.s!\t@CPI2_13[0], r2, r2\n\tjump.gt\t@.BB2_41\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB2_12\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_22[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_12\n\tdiv.s\t32, r5, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI2_20[0], r1, r1\n\tjump.eq\t@.BB2_110\n\tadd\t@CPI2_23[0], r0, r1\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_123:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB2_138\n\tld.1\t0, r2\n\tand\t@CPI2_21[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI2_22[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI2_22[0], r1, r1\n\tsub.s!\t@CPI2_23[0], r1, r1\n\tjump.ne\t@.BB2_138\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB2_138\n\tld.1\t64, r2\n\tadd\tstack-[12], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_266\n\tadd\tr0, r0, r5\n.BB2_128:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_128\n.BB2_266:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_130\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB2_130:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI2_13[0], r3, r1\n\tjump.gt\t@.BB2_138\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI2_13[0], r5, r6\n\tjump.gt\t@.BB2_138\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[3], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI2_13[0], r5, r3\n\tjump.gt\t@.BB2_41\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB2_138\n\tadd\t@CPI2_23[0], r0, r2\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_248:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB2_138\n\tld.1\t0, r2\n\tand\t@CPI2_21[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI2_22[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI2_22[0], r1, r1\n\tsub.s!\t@CPI2_23[0], r1, r1\n\tjump.ne\t@.BB2_138\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB2_138\n\tld.1\t64, r2\n\tadd\tstack-[6], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_263\n\tadd\tr0, r0, r5\n.BB2_253:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_253\n.BB2_263:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_255\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB2_255:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI2_13[0], r3, r1\n\tjump.gt\t@.BB2_138\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI2_13[0], r5, r6\n\tjump.gt\t@.BB2_138\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[8], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI2_13[0], r5, r3\n\tjump.gt\t@.BB2_41\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB2_262\n.BB2_138:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI2_23[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_f591, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_262:\n\tadd\t@CPI2_23[0], r0, r2\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_array_uint256_dyn:\n.func_begin5:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB5_3\n\tadd\tr0, r0, r2\n.BB5_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB5_2\n.BB5_3:\n\tret\n.func_end5:\n\nfun_balanceOf:\n.func_begin6:\n\tnop\tstack+=[1]\n\tand!\t@CPI6_0[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tjump.eq\t@.BB6_1\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB6_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI6_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_encode_stringliteral:\n.func_begin7:\n\tadd\t96, r1, r2\n\tadd\t@CPI7_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI7_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end7:\n\nabi_encode_stringliteral_f591:\n.func_begin8:\n\tadd\t96, r1, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI8_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t52, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_14:\nCPI6_1:\n\t.cell 4294967295\nCPI0_1:\nCPI2_13:\nCPI4_0:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI2_11:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI2_25:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI2_39:\nCPI4_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI2_40:\nCPI4_2:\n\t.cell 2852213850513516153367582212096\nCPI1_1:\nCPI2_43:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_0:\n\t.cell 1309832179\nCPI2_1:\n\t.cell 3917867460\nCPI2_2:\n\t.cell 3917867461\nCPI2_3:\n\t.cell 4064428842\nCPI2_4:\n\t.cell 1309832180\nCPI2_5:\n\t.cell 2720838757\nCPI2_6:\n\t.cell 243872795\nCPI2_7:\n\t.cell 243872796\nCPI2_8:\n\t.cell 783467222\nCPI2_9:\n\t.cell 16635278\nCPI2_10:\n\t.cell 33540519\nCPI2_12:\nCPI6_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI2_15:\nCPI6_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_16:\n\t.cell 18446744073709551551\nCPI2_17:\n\t.cell -27213852188849977806687151827570343143753748252864080105821182213072209768606\nCPI2_18:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI2_19:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI2_20:\n\t.cell -6229140943195609470482029081774216773103763255593484717380184921042965233664\nCPI2_21:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI2_22:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI2_23:\nCPI6_5:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI2_24:\n\t.cell 2535301200456458802993406410752\nCPI2_26:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI2_27:\n\t.cell 14654998725967798007904516271620013939489654481799787699370567012326353928192\nCPI2_28:\n\t.cell 31354931754782020730668050510087396086141667671140429186647036696488985261427\nCPI2_29:\nCPI6_6:\n\t.cell 10458117451882892562347801444352\nCPI2_30:\n\t.cell 14667325280004778357576260612488761262665225460782578448745097612516640423936\nCPI2_31:\n\t.cell 31354931754782020730666325679441278472750292860769655833395308424203898156136\nCPI2_32:\nCPI6_3:\n\t.cell 44065893178349832907524482763744232223715160598588722440363827218073792806912\nCPI2_33:\nCPI6_4:\n\t.cell 31354931754782020730666326055063969862292926624116462988355266888658445213814\nCPI2_34:\n\t.cell 18446744073709551616\nCPI2_35:\n\t.cell 45885242132750740256497420374811629444014390564921468556415905440447347032064\nCPI2_36:\n\t.cell 31354931754782020730666516506231079667030334057162060953243838907012487280494\nCPI2_37:\n\t.cell 49488416087105005985251196519109831937658208659842033616102300551039800049664\nCPI2_38:\n\t.cell 31354931754782020730667092324288700479831505799192396736967425796212700506144\nCPI2_41:\n\t.cell 51621007530836153441481177699373232841556542147537778994550402007698799329280\nCPI2_42:\n\t.cell 31354931754782020730667096066218267071081219445577361327006864227958802900591\nCPI2_44:\n\t.cell 33573379646215597789982475826324625834727175556203253221976374124330619566075\nCPI2_45:\n\t.cell -30712243232662532708804285033642283983940691742684704713361190381700136304640\nCPI2_46:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_47:\n\t.cell 31354931754782020730668151127133586497509920762368500730803146263088741769572\nCPI2_48:\n\t.cell 29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI2_49:\n\t.cell -17317791891425441398069102864720316188289832523668724183806499875177766060032\nCPI2_50:\n\t.cell 6574797573728907879914310858245660639267253899780774834407394597170562727936\nCPI2_51:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI7_0:\n\t.cell 45288627570839996578658988666401425582779806902220172383983149423179807588352\nCPI7_1:\n\t.cell 31354931754782020730663637404666106243223600773764328557126259806947099505765\nCPI8_0:\n\t.cell 37268791144319902338696353323952642643930904521079424936828708519168845021184\nCPI8_1:\n\t.cell 31354931754782020730668151127133586497509920762368493510471736461519699916085\n","bytecode":{"object":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 1:\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\", 4:\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 13:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\"\nobject \"ERC1155_1222\" {\n    code {\n        {\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC1155_1222\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            let _2 := 32\n            if slt(sub(_1, memoryDataOffset), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let offset := mload(memoryDataOffset)\n            let _3 := sub(shl(64, 1), 1)\n            if gt(offset, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let _4 := add(memoryDataOffset, offset)\n            let _5 := 0x1f\n            if iszero(slt(add(_4, _5), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let _6 := mload(_4)\n            if gt(_6, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n            }\n            let _7 := not(31)\n            let array := allocate_memory(add(and(add(_6, _5), _7), _2))\n            mstore(array, _6)\n            if gt(add(add(_4, _6), _2), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            for { } lt(i, _6) { i := add(i, _2) }\n            {\n                mstore(add(add(array, i), _2), mload(add(add(_4, i), _2)))\n            }\n            mstore(add(add(array, _6), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let newLen := mload(array)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n            }\n            let _8 := sload(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let _9 := 1\n            length := shr(_9, _8)\n            let outOfPlaceEncoding := and(_8, _9)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _2))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n            }\n            if gt(length, _5)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)\n                let deleteStart := add(data, shr(5, add(newLen, _5)))\n                if lt(newLen, _2) { deleteStart := data }\n                let _10 := add(data, shr(5, add(length, _5)))\n                let start := deleteStart\n                for { } lt(start, _10) { start := add(start, _9) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            srcOffset := _2\n            switch gt(newLen, _5)\n            case 1 {\n                let loopEnd := and(newLen, _7)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                for { } lt(i_1, loopEnd) { i_1 := add(i_1, _2) }\n                {\n                    sstore(dstPtr, mload(add(array, srcOffset)))\n                    dstPtr := add(dstPtr, _9)\n                    srcOffset := add(srcOffset, _2)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(array, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ add(shl(_9, newLen), _9))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                if newLen\n                {\n                    value := mload(add(array, srcOffset))\n                }\n                sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_9, newLen)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"ERC1155_1222_deployed\")\n            codecopy(_11, dataoffset(\"ERC1155_1222_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\"\n    object \"ERC1155_1222_deployed\" {\n        code {\n            {\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x00fdd58e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0 := abi_decode_address_9318()\n                        let ret := fun_balanceOf(value0, calldataload(36))\n                        let memPos := mload(_1)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _4 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _4)) { revert(_3, _3) }\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr := /** @src 0:1373:1414  \"interfaceId == type(IERC1155).interfaceId\" */ eq(_4, /** @src 0:1388:1414  \"type(IERC1155).interfaceId\" */ shl(225, 0x6cdb3d13))\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 0:1430:1482  \"interfaceId == type(IERC1155MetadataURI).interfaceId\" */ eq(_4, /** @src 0:1445:1482  \"type(IERC1155MetadataURI).interfaceId\" */ shl(226, 0x03a24d07))\n                        }\n                        /// @src 0:1373:1534  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 12:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_4, /** @src 12:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, iszero(iszero(expr_1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x0e89341c {\n                        if callvalue() { revert(_3, _3) }\n                        let _5 := 32\n                        if slt(add(calldatasize(), not(3)), _5) { revert(_3, _3) }\n                        let memPtr := mload(_1)\n                        let ret_1 := _3\n                        let slotValue := sload(/** @src 0:2032:2036  \"_uri\" */ 0x02)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let length := _3\n                        let _6 := 1\n                        length := shr(_6, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _6)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, _5))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x22)\n                            revert(_3, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _5), and(slotValue, not(255)))\n                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length)))), _5)\n                        }\n                        case 1 {\n                            mstore(_3, /** @src 0:2032:2036  \"_uri\" */ 0x02)\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let dataPos := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                            let i := _3\n                            for { } lt(i, length) { i := add(i, _5) }\n                            {\n                                mstore(add(add(memPtr, i), _5), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret_1 := add(add(memPtr, i), _5)\n                        }\n                        finalize_allocation(memPtr, sub(ret_1, memPtr))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _5)\n                        return(memPos_2, sub(abi_encode_string(memPtr, add(memPos_2, _5)), memPos_2))\n                    }\n                    case 0x2eb2c2d6 {\n                        if callvalue() { revert(_3, _3) }\n                        let _7 := not(3)\n                        if slt(add(calldatasize(), _7), 160) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address_9318()\n                        let value1 := abi_decode_address()\n                        let offset := calldataload(68)\n                        let _8 := 0xffffffffffffffff\n                        if gt(offset, _8) { revert(_3, _3) }\n                        let value2 := abi_decode_array_uint256_dyn(add(_2, offset), calldatasize())\n                        let offset_1 := calldataload(100)\n                        if gt(offset_1, _8) { revert(_3, _3) }\n                        let value3 := abi_decode_array_uint256_dyn(add(_2, offset_1), calldatasize())\n                        let offset_2 := calldataload(132)\n                        if gt(offset_2, _8) { revert(_3, _3) }\n                        let value4 := abi_decode_bytes(add(_2, offset_2), calldatasize())\n                        let _9 := sub(shl(160, 1), 1)\n                        let _10 := and(/** @src 0:4267:4287  \"from == _msgSender()\" */ value0_1, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _9)\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        let expr_2 := /** @src 0:4267:4287  \"from == _msgSender()\" */ eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _10, /** @src 9:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _10)\n                            mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let _11 := keccak256(_3, _1)\n                            mstore(_3, /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(32, _11)\n                            /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                            expr_2 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 0:4246:4399  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_2)\n                        /// @src 0:6417:6427  \"ids.length\"\n                        let expr_3 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:6417:6427  \"ids.length\" */ value2)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        if iszero(/** @src 0:6417:6445  \"ids.length == amounts.length\" */ eq(expr_3, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:6431:6445  \"amounts.length\" */ value3)))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        {\n                            let memPtr_1 := mload(_1)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _2), 32)\n                            mstore(add(memPtr_1, 36), 40)\n                            mstore(add(memPtr_1, 68), \"ERC1155: ids and amounts length \")\n                            mstore(add(memPtr_1, 100), \"mismatch\")\n                            revert(memPtr_1, 132)\n                        }\n                        let _12 := and(/** @src 0:6508:6524  \"to != address(0)\" */ value1, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _9)\n                        /// @src 0:6500:6566  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                        require_helper_stringliteral_6faf(/** @src 0:6508:6524  \"to != address(0)\" */ iszero(iszero(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _12)))\n                        /// @src 0:6695:6708  \"uint256 i = 0\"\n                        let var_i := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                        /// @src 0:6690:7101  \"for (uint256 i = 0; i < ids.length; ++i) {...\"\n                        for { }\n                        /** @src 0:6695:6708  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:6726:6729  \"++i\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            if iszero(lt(var_i, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:6714:6724  \"ids.length\" */ value2)))\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            { break }\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let _13 := mload(/** @src 0:6758:6764  \"ids[i]\" */ memory_array_index_access_address_dyn(value2, var_i))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let _14 := mload(/** @src 0:6795:6805  \"amounts[i]\" */ memory_array_index_access_address_dyn(value3, var_i))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _13)\n                            let _15 := 32\n                            mstore(_15, _3)\n                            let _16 := keccak256(_3, _1)\n                            mstore(_3, _10)\n                            mstore(_15, _16)\n                            let _17 := sload(keccak256(_3, _1))\n                            /// @src 0:6875:6951  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                            require_helper_stringliteral_8ac7(/** @src 0:6883:6904  \"fromBalance >= amount\" */ iszero(lt(_17, _14)))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _13)\n                            mstore(_15, _3)\n                            let _18 := keccak256(_3, _1)\n                            mstore(_3, _10)\n                            mstore(_15, _18)\n                            sstore(keccak256(_3, _1), sub(/** @src 0:7015:7035  \"fromBalance - amount\" */ _17, _14))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _13)\n                            mstore(_15, _3)\n                            let _19 := keccak256(_3, _1)\n                            mstore(_3, _12)\n                            mstore(_15, _19)\n                            let dataSlot := keccak256(_3, _1)\n                            sstore(dataSlot, /** @src 0:7063:7090  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sload(/** @src 0:7063:7090  \"_balances[id][to] += amount\" */ dataSlot), _14))\n                        }\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        let _20 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                        mstore(_20, _1)\n                        let tail := abi_encode_array_uint256_dyn(value2, add(_20, _1))\n                        mstore(add(_20, 32), sub(tail, _20))\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        log4(_20, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_array_uint256_dyn(value3, tail), /** @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\" */ _20), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\" */ _10, _12)\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        if /** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(value1)))\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let _21 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                            let _22 := shl(224, 0xbc197c81)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            mstore(_21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _22)\n                            mstore(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ add(_21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36), _10)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 68), 160)\n                            let tail_1 := abi_encode_array_uint256_dyn(value2, add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 164))\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 100), add(sub(tail_1, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _7))\n                            let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 132), add(sub(tail_2, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _7))\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let trySuccessCondition := call(gas(), _12, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(value4, tail_2), /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21), _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 32)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let expr_4 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            if trySuccessCondition\n                            {\n                                let _23 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 32\n                                /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                                if gt(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _23, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ returndatasize()) { _23 := returndatasize() }\n                                finalize_allocation(_21, _23)\n                                expr_4 := abi_decode_bytes4_fromMemory(_21, add(_21, _23))\n                            }\n                            /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                if /** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ iszero(eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(/** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ expr_4, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0xffffffff)), _22))\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                {\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _24 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_24, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_24, sub(abi_encode_stringliteral(add(_24, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _24))\n                                }\n                            }\n                            default /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            {\n                                let _25 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:16709:16790  \"catch Error(string memory reason) {...\"\n                                    let _26 := try_decode_error_message()\n                                    if _26\n                                    {\n                                        _25 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        let _27 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        mstore(_27, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                        mstore(/** @src 0:16761:16775  \"revert(reason)\" */ add(_27, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), 32)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        revert(_27, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(_26, add(/** @src 0:16761:16775  \"revert(reason)\" */ _27, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36)), /** @src 0:16761:16775  \"revert(reason)\" */ _27))\n                                    }\n                                }\n                                /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                                if _25\n                                {\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _28 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_28, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_28, sub(abi_encode_stringliteral_f591(add(_28, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _28))\n                                }\n                            }\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4e1273f4 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset_3 := calldataload(_2)\n                        let _29 := 0xffffffffffffffff\n                        if gt(offset_3, _29) { revert(_3, _3) }\n                        if iszero(slt(add(offset_3, 35), calldatasize())) { revert(_3, _3) }\n                        let _30 := calldataload(add(_2, offset_3))\n                        let _31 := array_allocation_size_array_uint256_dyn(_30)\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation(memPtr_2, _31)\n                        let dst := memPtr_2\n                        mstore(memPtr_2, _30)\n                        let _32 := 0x20\n                        dst := add(memPtr_2, _32)\n                        let srcEnd := add(add(offset_3, shl(5, _30)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset_3, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _32) }\n                        {\n                            let value_1 := calldataload(src)\n                            if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                            mstore(dst, value_1)\n                            dst := add(dst, _32)\n                        }\n                        let offset_4 := calldataload(36)\n                        if gt(offset_4, _29) { revert(_3, _3) }\n                        let value1_1 := abi_decode_array_uint256_dyn(add(_2, offset_4), calldatasize())\n                        /// @src 0:2738:2753  \"accounts.length\"\n                        let expr_5 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:2738:2753  \"accounts.length\" */ memPtr_2)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        if iszero(/** @src 0:2738:2767  \"accounts.length == ids.length\" */ eq(expr_5, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:2757:2767  \"ids.length\" */ value1_1)))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        {\n                            let memPtr_3 := mload(_1)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _2), _32)\n                            mstore(add(memPtr_3, 36), 41)\n                            mstore(add(memPtr_3, 68), \"ERC1155: accounts and ids length\")\n                            mstore(add(memPtr_3, 100), \" mismatch\")\n                            revert(memPtr_3, 132)\n                        }\n                        let _33 := mload(/** @src 0:2871:2886  \"accounts.length\" */ memPtr_2)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _34 := array_allocation_size_array_uint256_dyn(_33)\n                        let memPtr_4 := mload(_1)\n                        finalize_allocation(memPtr_4, _34)\n                        mstore(memPtr_4, _33)\n                        calldatacopy(add(memPtr_4, _32), calldatasize(), add(array_allocation_size_array_uint256_dyn(_33), not(31)))\n                        /// @src 0:2903:2916  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                        /// @src 0:2898:3018  \"for (uint256 i = 0; i < accounts.length; ++i) {...\"\n                        for { }\n                        /** @src 0:2903:2916  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:2939:2942  \"++i\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            if iszero(lt(var_i_1, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:2922:2937  \"accounts.length\" */ memPtr_2)))\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            { break }\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let cleaned := and(mload(/** @src 0:2987:2998  \"accounts[i]\" */ memory_array_index_access_address_dyn(memPtr_2, var_i_1)), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sub(shl(160, 1), 1))\n                            mstore(/** @src 0:2958:3007  \"batchBalances[i] = balanceOf(accounts[i], ids[i])\" */ memory_array_index_access_address_dyn(memPtr_4, var_i_1), /** @src 0:2977:3007  \"balanceOf(accounts[i], ids[i])\" */ fun_balanceOf(cleaned, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:3000:3006  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_1, var_i_1))))\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, _32)\n                        return(memPos_3, sub(abi_encode_array_uint256_dyn(memPtr_4, add(memPos_3, _32)), memPos_3))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address_9318()\n                        let value_2 := calldataload(36)\n                        let _35 := iszero(iszero(value_2))\n                        if iszero(eq(value_2, _35)) { revert(_3, _3) }\n                        let _36 := and(/** @src 0:12901:12918  \"owner != operator\" */ value0_2, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 0:12901:12918  \"owner != operator\" */ eq(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _36)\n                        {\n                            let memPtr_5 := mload(_1)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _2), 32)\n                            mstore(add(memPtr_5, 36), 41)\n                            mstore(add(memPtr_5, 68), \"ERC1155: setting approval status\")\n                            mstore(add(memPtr_5, 100), \" for self\")\n                            revert(memPtr_5, 132)\n                        }\n                        mstore(_3, /** @src 9:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(32, /** @src 0:12974:12992  \"_operatorApprovals\" */ 0x01)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _37 := keccak256(_3, _1)\n                        mstore(_3, _36)\n                        mstore(32, _37)\n                        let dataSlot_1 := keccak256(_3, _1)\n                        let value_3 := and(sload(dataSlot_1), not(255))\n                        sstore(dataSlot_1, or(value_3, and(_35, 255)))\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        let _38 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                        mstore(_38, _35)\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_38, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 32, /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ _36)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        return(_3, _3)\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_3 := abi_decode_address_9318()\n                        let value1_2 := abi_decode_address()\n                        let _39 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_3, _39))\n                        mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _40 := keccak256(_3, _1)\n                        mstore(_3, and(value1_2, _39))\n                        mstore(32, _40)\n                        let value_4 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, iszero(iszero(value_4)))\n                        return(memPos_4, 32)\n                    }\n                    case 0xf242432a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_3, _3) }\n                        let value0_4 := abi_decode_address_9318()\n                        let value1_3 := abi_decode_address()\n                        let value_5 := calldataload(68)\n                        let value_6 := calldataload(100)\n                        let offset_5 := calldataload(132)\n                        if gt(offset_5, 0xffffffffffffffff) { revert(_3, _3) }\n                        let value4_1 := abi_decode_bytes(add(_2, offset_5), calldatasize())\n                        let _41 := sub(shl(160, 1), 1)\n                        let _42 := and(/** @src 0:3776:3796  \"from == _msgSender()\" */ value0_4, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _41)\n                        /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        let expr_6 := /** @src 0:3776:3796  \"from == _msgSender()\" */ eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _42, /** @src 9:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        if iszero(expr_6)\n                        {\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _42)\n                            mstore(32, 1)\n                            let _43 := keccak256(_3, _1)\n                            mstore(_3, /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(32, _43)\n                            /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                            expr_6 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 0:3755:3908  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_6)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _44 := and(/** @src 0:5099:5115  \"to != address(0)\" */ value1_3, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _41)\n                        /// @src 0:5091:5157  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                        require_helper_stringliteral_6faf(/** @src 0:5099:5115  \"to != address(0)\" */ iszero(iszero(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _44)))\n                        /// @src 0:5232:5253  \"_asSingletonArray(id)\"\n                        pop(fun_asSingletonArray(value_5))\n                        /// @src 0:5290:5315  \"_asSingletonArray(amount)\"\n                        pop(fun_asSingletonArray(value_6))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(_3, value_5)\n                        let _45 := 32\n                        mstore(_45, _3)\n                        let _46 := keccak256(_3, _1)\n                        mstore(_3, _42)\n                        mstore(_45, _46)\n                        let _47 := sload(keccak256(_3, _1))\n                        /// @src 0:5448:5524  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                        require_helper_stringliteral_8ac7(/** @src 0:5456:5477  \"fromBalance >= amount\" */ iszero(lt(_47, value_6)))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(_3, value_5)\n                        mstore(_45, _3)\n                        let _48 := keccak256(_3, _1)\n                        mstore(_3, _42)\n                        mstore(_45, _48)\n                        sstore(keccak256(_3, _1), sub(/** @src 0:5580:5600  \"fromBalance - amount\" */ _47, value_6))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(_3, value_5)\n                        mstore(_45, _3)\n                        let _49 := keccak256(_3, _1)\n                        mstore(_3, _44)\n                        mstore(_45, _49)\n                        let dataSlot_2 := keccak256(_3, _1)\n                        sstore(dataSlot_2, /** @src 0:5620:5647  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sload(/** @src 0:5620:5647  \"_balances[id][to] += amount\" */ dataSlot_2), value_6))\n                        /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                        let _50 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                        mstore(_50, value_5)\n                        mstore(add(_50, _45), value_6)\n                        /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                        log4(_50, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _1, /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ _42, _44)\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        if /** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(value1_3)))\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let _51 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                            let _52 := shl(224, 0xf23a6e61)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            mstore(_51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _52)\n                            mstore(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ add(_51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36), _42)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 68), value_5)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 100), value_6)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 132), 160)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let trySuccessCondition_1 := call(gas(), _44, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(value4_1, add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 164)), /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51), _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _45)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let expr_7 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            if trySuccessCondition_1\n                            {\n                                let _53 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _45\n                                /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                                if gt(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _45, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ returndatasize()) { _53 := returndatasize() }\n                                finalize_allocation(_51, _53)\n                                expr_7 := abi_decode_bytes4_fromMemory(_51, add(_51, _53))\n                            }\n                            /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                if /** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ iszero(eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(/** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ expr_7, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0xffffffff)), _52))\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                {\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _54 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_54, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_54, sub(abi_encode_stringliteral(add(_54, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _54))\n                                }\n                            }\n                            default /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            {\n                                let _55 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 1\n                                /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:15911:15992  \"catch Error(string memory reason) {...\"\n                                    let _56 := try_decode_error_message()\n                                    if _56\n                                    {\n                                        _55 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        let _57 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        mstore(_57, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                        mstore(/** @src 0:15963:15977  \"revert(reason)\" */ add(_57, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), _45)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        revert(_57, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(_56, add(/** @src 0:15963:15977  \"revert(reason)\" */ _57, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36)), /** @src 0:15963:15977  \"revert(reason)\" */ _57))\n                                    }\n                                }\n                                /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                                if _55\n                                {\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _58 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_58, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_58, sub(abi_encode_stringliteral_f591(add(_58, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _58))\n                                }\n                            }\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_9318() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_uint256_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_uint256_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function abi_decode_bytes(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                array := memPtr\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            /// @ast-id 115 @src 0:2185:2412  \"function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account, var_id) -> var\n            {\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let _1 := and(/** @src 0:2298:2319  \"account != address(0)\" */ var_account, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sub(shl(160, 1), 1))\n                if /** @src 0:2298:2319  \"account != address(0)\" */ iszero(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: address zero is not a v\")\n                    mstore(add(memPtr, 100), \"alid owner\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ var_id)\n                mstore(0x20, /** @src 0:2317:2318  \"0\" */ 0x00)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let _2 := keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x40)\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _1)\n                mstore(0x20, _2)\n                /// @src 0:2376:2405  \"return _balances[id][account]\"\n                var := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sload(keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x40))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function require_helper_stringliteral_47c7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC1155: caller is not token own\")\n                    mstore(add(memPtr, 100), \"er or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_6faf(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC1155: transfer to the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_8ac7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: insufficient balance fo\")\n                    mstore(add(memPtr, 100), \"r transfer\")\n                    revert(memPtr, 132)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                value0 := value\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 40)\n                mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n                mstore(add(headStart, 96), \"d tokens\")\n                tail := add(headStart, 128)\n            }\n            function return_data_selector() -> sig\n            {\n                if gt(returndatasize(), 3)\n                {\n                    returndatacopy(0, 0, 4)\n                    sig := shr(224, mload(0))\n                }\n            }\n            function try_decode_error_message() -> ret\n            {\n                if lt(returndatasize(), 0x44) { leave }\n                let data := mload(64)\n                let _1 := not(3)\n                returndatacopy(data, 4, add(returndatasize(), _1))\n                let offset := mload(data)\n                let _2 := returndatasize()\n                let _3 := 0xffffffffffffffff\n                if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n                let msg := add(data, offset)\n                let length := mload(msg)\n                if gt(length, _3) { leave }\n                if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n                finalize_allocation(data, add(add(offset, length), 0x20))\n                ret := msg\n            }\n            function abi_encode_stringliteral_f591(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 52)\n                mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n                mstore(add(headStart, 96), \"Receiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1221 @src 0:16914:17107  \"function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {...\"\n            function fun_asSingletonArray(var_element) -> var_mpos\n            {\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                mstore(memPtr, /** @src 0:17047:17048  \"1\" */ 0x01)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let dataStart := add(memPtr, 32)\n                calldatacopy(dataStart, calldatasize(), 32)\n                if iszero(mload(memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n                }\n                mstore(/** @src 0:17059:17077  \"array[0] = element\" */ dataStart, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ var_element)\n                /// @src 0:17088:17100  \"return array\"\n                var_mpos := memPtr\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f1341ed5e11063dbfc373343fef5102d541da65a55d6b0fe4db3bfc9ced303a264736f6c63430008120033\"\n    }\n}\n","hash":"010002b93237b8ec7298d26720b9bda548c1d89f053e177027011681a9c064ec","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f07344858992165efa674db005a804953f74882b4bb3f9089813f8a0c6586734\",\"dweb:/ipfs/QmZaAEqBENBkDQa4nuPeNiBWt4Yc1VpTynEadb3o6i8Mek\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeERC20.sol:SafeERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004f17c008b60726f83f7741f2af0961067ad018b887002dda1256a1a7a33824f0"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 7:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_1959\" {\n    code {\n        {\n            /// @src 7:701:6912  \"library SafeERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeERC20_1959_deployed\")\n            codecopy(_1, dataoffset(\"SafeERC20_1959_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_1959_deployed\" {\n        code {\n            {\n                /// @src 7:701:6912  \"library SafeERC20 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122056b55db75d27c81768e236a60248147262485e28242b3597edd79c5bc8c2130a64736f6c63430008120033\"\n    }\n}\n","hash":"01000007b1ac2e8c809283e3e8250c9f10859c40fec918115b115fc12e131b80","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000008857d7db8f0113a6febcbfcb947d69d14386b32c61ad471dddba9cfe1309c90c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 8:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_2289\" {\n    code {\n        {\n            /// @src 8:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_2289_deployed\")\n            codecopy(_1, dataoffset(\"Address_2289_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_2289_deployed\" {\n        code {\n            {\n                /// @src 8:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205a43d92843c97b37a50338dd3478b0cac8fd774aabdf0647f037877016590d8164736f6c63430008120033\"\n    }\n}\n","hash":"01000007f488efd756c90f3ad68d4d2d4f670acaa9287c7747aea2aa0a805e82","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000001aca1ca7a7a6b84548a62656a8ec61f28c43b53b1ffdd55848c615448f84fcaa"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 10:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2540\" {\n    code {\n        {\n            /// @src 10:220:2779  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_2540_deployed\")\n            codecopy(_1, dataoffset(\"Strings_2540_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 10:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2540_deployed\" {\n        code {\n            {\n                /// @src 10:220:2779  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e5622d6027cf0f1273bbfe504a1890a9116ccbfc2e71312f1ba921e425e0788564736f6c63430008120033\"\n    }\n}\n","hash":"010000070cbc0404c2b124dc1e476dc20f0a6e988f6d736d9f59de441cea18ef","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000002f5f6d36a1a908580106b1a7f805f0f134a82f8216a1c3f4a986157095237ca1"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_2906\" {\n    code {\n        {\n            /// @src 11:369:9130  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_2906_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_2906_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_2906_deployed\" {\n        code {\n            {\n                /// @src 11:369:9130  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122058c3caf29de2cead89f559f501fa4f84f162f43627feb0e8efb7daeb1830c3b864736f6c63430008120033\"\n    }\n}\n","hash":"01000007cc74828b718a7b247b5698e1a6b03b9026706f40a6aad9ba2a38769d","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e7a797eb8bd25aac03d1f92de412455f376feb5e88da2123b170b2fc85a510e3"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 14:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_3808\" {\n    code {\n        {\n            /// @src 14:202:12784  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_3808_deployed\")\n            codecopy(_1, dataoffset(\"Math_3808_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_3808_deployed\" {\n        code {\n            {\n                /// @src 14:202:12784  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209638d3cfa2e77349effe581dbfb73b43688cfd40394770445077709cfaa88eef64736f6c63430008120033\"\n    }\n}\n","hash":"010000071396839c6f0de2055e9793f86e586fd44021863e8b8333327da2baec","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000006078adbd026d3fce113e607b8d82f97b369a80995791c7eb959579af6e00e259"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_3913\" {\n    code {\n        {\n            /// @src 15:215:1262  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_3913_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_3913_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_3913_deployed\" {\n        code {\n            {\n                /// @src 15:215:1262  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220dbe5d785a375d7df71b26e0d40ca27941b49ab97e5f852d342e1c3d6730adee664736f6c63430008120033\"\n    }\n}\n","hash":"010000078884e13e70178c4bde7a8b88ba2e309eee8037f6f2fb33b02340591f","factoryDependencies":{}}},"contracts/AiYueNFTExchange.sol":{"AiYueNFTExchange":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"acquisition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"acquisitionWithUsdt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"addVoteInfo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"approvalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"approvedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"calculatePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"decNumber","type":"uint256"}],"name":"decreaseNumber","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"getNftEXit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getVoteInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"voter","type":"address"}],"name":"getVoteInfoExit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getVoteInfoResult","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"initialNumbers","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"number","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"initialOwners","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"number","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"setTokenUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_usdtAddr","type":"address"}],"name":"setUsdtAddr","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenIdCurrentOwner","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdtAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voteInfo","outputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"number","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"rec","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"acquisition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"acquisitionWithUsdt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"addVoteInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"approvalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"approvedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decNumber\",\"type\":\"uint256\"}],\"name\":\"decreaseNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getNftEXit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getVoteInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoteInfoExit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getVoteInfoResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initialNumbers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initialOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setTokenUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtAddr\",\"type\":\"address\"}],\"name\":\"setUsdtAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdCurrentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"rec\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AiYueNFTExchange.sol\":\"AiYueNFTExchange\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f07344858992165efa674db005a804953f74882b4bb3f9089813f8a0c6586734\",\"dweb:/ipfs/QmZaAEqBENBkDQa4nuPeNiBWt4Yc1VpTynEadb3o6i8Mek\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/AiYueNFTExchange.sol\":{\"keccak256\":\"0x78cebac33819d0e9e28a8685ecb315b5c63f3e0b430f431cb80968472222f9b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd21ea219f931d039ec10da3b262cafb0d8d0f9f45847c20b44e7c77111addf\",\"dweb:/ipfs/QmWBedaXvuuUorqrH4kWiAU2xqDCD9E3qfiNZ7hVzw4imT\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"AiYueNFTExchange.sol:AiYueNFTExchange\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tnear_call\tr0, @__runtime, @DEFAULT_UNWIND\n.BB0_1:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_75\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_75:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.gt\t@.BB0_5\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.le\t@.BB0_23\n.BB0_5:\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1.inc\tr7, r3, r4\n\tadd\tr4, r0, stack-[8]\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_26\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_26:\n\tadd\tr12, r0, stack-[5]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[6]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r2\n.BB0_28:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[2]\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_32\n.BB0_31:\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_32:\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[4], r0, r1\n\tsstore\tr1, r0\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\t8, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[1], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_43\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_43\n.BB0_44:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_44\n.BB0_43:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_53\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_50\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_49:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_49\n.BB0_50:\n\tadd\tstack-[4], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_52\n\tadd\tstack-[4], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_52:\n\tadd\tstack-[4], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_45\n.BB0_53:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_55\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n.BB0_55:\n\tadd\tstack-[4], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_45:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_61\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_61\n.BB0_62:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_62\n.BB0_61:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_71\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[2], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_68\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_67:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_67\n.BB0_68:\n\tadd\tstack-[7], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_70\n\tadd\tstack-[7], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[2], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_70:\n\tadd\t1, r0, r1\n\tadd\tstack-[7], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_63\n.BB0_71:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_73\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_73:\n\tadd\tstack-[7], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_63:\n\tor\tr2, r1, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r2\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__runtime:\n.func_begin3:\n\tnop\tstack+=[21]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB3_53\n\tadd\t0, r0, stack-[21]\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tjump.le\t@.BB3_2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.le\t@.BB3_28\n\tsub.s!\t@CPI3_2[0], r1, r3\n\tjump.gt\t@.BB3_47\n\tsub.s!\t@CPI3_9[0], r1, r3\n\tjump.le\t@.BB3_42\n\tsub.s!\t@CPI3_10[0], r1, r2\n\tjump.eq\t@.BB3_725\n\tsub.s!\t@CPI3_11[0], r1, r2\n\tjump.eq\t@.BB3_726\n\tsub.s!\t@CPI3_12[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r2\n\tjump.gt\t@.BB3_53\n\tadd\t10, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI3_68[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_2:\n\tsub.s!\t@CPI3_27[0], r1, r2\n\tjump.gt\t@.BB3_15\n\tsub.s!\t@CPI3_40[0], r1, r2\n\tjump.le\t@.BB3_4\n\tsub.s!\t@CPI3_41[0], r1, r2\n\tjump.le\t@.BB3_10\n\tsub.s!\t@CPI3_42[0], r1, r2\n\tjump.eq\t@.BB3_154\n\tsub.s!\t@CPI3_43[0], r1, r2\n\tjump.eq\t@.BB3_165\n\tsub.s!\t@CPI3_44[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tand\t@CPI3_53[0], r2, r1\n\tst.1\tr3, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_84[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_28:\n\tsub.s!\t@CPI3_15[0], r1, r2\n\tjump.le\t@.BB3_29\n\tsub.s!\t@CPI3_16[0], r1, r2\n\tjump.le\t@.BB3_35\n\tsub.s!\t@CPI3_17[0], r1, r2\n\tjump.eq\t@.BB3_601\n\tsub.s!\t@CPI3_18[0], r1, r2\n\tjump.eq\t@.BB3_611\n\tsub.s!\t@CPI3_19[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_53[0], r2, r3\n\tjump.gt\t@.BB3_53\n\tnear_call\tr0, @fun_setApprovalForAll, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_15:\n\tsub.s!\t@CPI3_28[0], r1, r2\n\tjump.le\t@.BB3_16\n\tsub.s!\t@CPI3_29[0], r1, r2\n\tjump.le\t@.BB3_22\n\tsub.s!\t@CPI3_30[0], r1, r2\n\tjump.eq\t@.BB3_422\n\tsub.s!\t@CPI3_31[0], r1, r2\n\tjump.eq\t@.BB3_455\n\tsub.s!\t@CPI3_32[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_52[0], r0, r3\n\tsub.s!\t160, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_52[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_52[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI3_53[0], r3, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI3_53[0], r3, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_69[0], r3, r4\n\tjump.gt\t@.BB3_53\n\tadd\t35, r3, r4\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r1, r7\n\tand\t@CPI3_52[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_52[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tptr.add.s\t68, r2, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[12]\n\tptr.add.s\t100, r2, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[11]\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_53\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_69[0], r2, r4\n\tjump.gt\t@.BB3_70\n\tadd\t63, r2, r4\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[9]\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[10]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_69[0], r4, r6\n\tjump.gt\t@.BB3_70\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r4\n\tadd\tstack-[10], r0, r4\n\tst.1.inc\tr4, r2, r4\n\tadd\t36, r3, r3\n\tadd\tr2, r3, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB3_53\n\tand\t31, r2, r1\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB3_810\n\tadd\tr0, r0, r6\n.BB3_474:\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_474\n.BB3_810:\n\tsub.s!\t0, r1, r6\n\tjump.eq\t@.BB3_476\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr4, r5, r5\n\tshl.s\t3, r1, r1\n\tld.1\tr5, r6\n\tshl\tr6, r1, r6\n\tshr\tr6, r1, r6\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB3_476:\n\tadd\tr4, r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @fun_getVoteInfoExit, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_479\n\tcontext.caller\tr1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB3_479\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_91[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_92[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_47:\n\tsub.s!\t@CPI3_3[0], r1, r2\n\tjump.le\t@.BB3_48\n\tsub.s!\t@CPI3_4[0], r1, r2\n\tjump.eq\t@.BB3_761\n\tsub.s!\t@CPI3_5[0], r1, r2\n\tjump.eq\t@.BB3_763\n\tsub.s!\t@CPI3_6[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_53[0], r2, r2\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tcontext.caller\tr1\n\tadd\tstack-[14], r0, r2\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_783\n.BB3_786:\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB3_787\n.BB3_543:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_89[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_90[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_29:\n\tsub.s!\t@CPI3_22[0], r1, r2\n\tjump.gt\t@.BB3_32\n\tsub.s!\t@CPI3_25[0], r1, r2\n\tjump.eq\t@.BB3_514\n\tsub.s!\t@CPI3_26[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t96, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r4\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r2, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_69[0], r4, r5\n\tjump.gt\t@.BB3_53\n\tadd\t35, r4, r5\n\tadd\t@CPI3_52[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_52[0], r3, r8\n\tand\t@CPI3_52[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_52[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_53\n\tadd\t4, r4, r5\n\tptr.add\tr2, r5, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI3_69[0], r5, r2\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r5, r6\n\tadd\t63, r6, r7\n\tsub.s\t32, r0, r2\n\tand\tr7, r2, r7\n\tld.1\t64, r8\n\tadd\tr8, r7, r7\n\tadd\tr8, r0, stack-[7]\n\tsub!\tr7, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI3_69[0], r7, r9\n\tjump.gt\t@.BB3_70\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r7\n\tadd\tstack-[7], r0, r7\n\tst.1\tr7, r5\n\tadd\t36, r4, r4\n\tadd\tr6, r4, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB3_53\n\tsub.s!\t0, r5, r3\n\tjump.eq\t@.BB3_529\n\tadd\tstack-[7], r0, r3\n.BB3_528:\n\tptr.add\tstack[@ptr_calldata], r4, r5\n\tld\tr5, r5\n\tadd\t32, r3, r3\n\tst.1\tr3, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB3_528\n.BB3_529:\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add.s\t68, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_69[0], r3, r4\n\tjump.gt\t@.BB3_187\n\tadd\t35, r3, r6\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\t@CPI3_52[0], r0, r7\n\tsub!\tr6, r4, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI3_52[0], r6, r6\n\tand\t@CPI3_52[0], r4, r9\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI3_52[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB3_53\n\tadd\t4, r3, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI3_69[0], r5, r6\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r5, r6\n\tadd\t63, r6, r7\n\tand\tr7, r2, r2\n\tld.1\t64, r7\n\tadd\tr7, r2, r2\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr2, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_69[0], r2, r8\n\tjump.gt\t@.BB3_70\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r2\n\tadd\tstack-[6], r0, r2\n\tst.1.inc\tr2, r5, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\t36, r3, r2\n\tadd\tr6, r2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB3_53\n\tsub.s!\t0, r5, r4\n\tjump.eq\t@.BB3_538\n\tadd\tstack-[6], r0, r4\n.BB3_537:\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tadd\t32, r4, r4\n\tst.1\tr4, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB3_537\n.BB3_538:\n\tand\t@CPI3_53[0], r1, r1\n\tcontext.caller\tr2\n\tadd\tr1, r0, stack-[11]\n\tadd\tr2, r0, stack-[4]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB3_539\n.BB3_542:\n\tadd\tstack-[11], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_543\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_209\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_57[0], r2, r1\n\tjump.gt\t@.BB3_70\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[21], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[7], r0, r8\n\tld.1\tr8, r2\n\tsub!\tr1, r2, r2\n\tadd\tr1, r0, r7\n\tjump.ge\t@.BB3_549\n\tadd\t@CPI3_54[0], r0, r2\n\tadd\tstack-[21], r0, r7\n\tsub.s!\t@CPI3_54[0], r7, r3\n\tadd.lt\tr7, r0, r2\n\tshl.s\t64, r2, r2\n\tor\t@CPI3_84[0], r2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr1, r0, r3\n\tadd\tr7, r0, stack-[13]\n.BB3_556:\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_220\n\tadd\tr3, r0, stack-[9]\n\tshl.s\t5, r3, r2\n\tadd\tr2, r8, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r4\n\tadd\tstack-[5], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr1, r4\n\tst.1\t32, r7\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[14], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[14], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[13], r0, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r0, r1\n\tadd\tr3, r0, stack-[8]\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB3_560\n\tadd\tstack-[10], r0, r1\n\tst.1\tr2, r1\n\tst.1\t32, r2\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[14], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[14], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[8], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[7], r0, r8\n\tld.1\tr8, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[13], r0, r7\n\tadd\tr7, r0, r1\n\tjump.lt\t@.BB3_556\n.BB3_549:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr8, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB3_552\n\tadd\tr0, r0, r5\n.BB3_551:\n\tadd\t32, r8, r8\n\tld.1\tr8, r6\n\tst.1.inc\tr3, r6, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_551\n.BB3_552:\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[6], r0, r6\n\tld.1\tr6, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_555\n\tadd\tr0, r0, r3\n.BB3_554:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r5\n\tjump.lt\t@.BB3_554\n.BB3_555:\n\tsub\tr2, r1, r2\n\tadd\t@CPI3_54[0], r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_86[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[11], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_53\n\tld.1\t64, r1\n\tnear_call\tr0, @finalize_allocation_36910, @DEFAULT_UNWIND\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_4:\n\tsub.s!\t@CPI3_47[0], r1, r2\n\tjump.gt\t@.BB3_7\n\tsub.s!\t@CPI3_50[0], r1, r2\n\tjump.eq\t@.BB3_54\n\tsub.s!\t@CPI3_51[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI3_77[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_53\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI3_118[0], r1, r3\n\tjump.eq\t@.BB3_64\n\tsub.s!\t@CPI3_119[0], r1, r3\n\tjump.eq\t@.BB3_64\n\tsub.s!\t@CPI3_120[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB3_64:\n\tand\t1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_16:\n\tsub.s!\t@CPI3_35[0], r1, r2\n\tjump.gt\t@.BB3_19\n\tsub.s!\t@CPI3_38[0], r1, r2\n\tjump.eq\t@.BB3_171\n\tsub.s!\t@CPI3_39[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_52[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_52[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_52[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI3_53[0], r2, r2\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_69[0], r2, r4\n\tjump.gt\t@.BB3_53\n\tadd\t35, r2, r4\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r1, r7\n\tand\t@CPI3_52[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_52[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_53\n\tadd\t4, r2, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_69[0], r3, r4\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tsub.s\t32, r0, r6\n\tadd\tr6, r0, stack-[5]\n\tand\tr5, r6, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[9]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_69[0], r5, r7\n\tjump.gt\t@.BB3_70\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r5\n\tst.1\tr5, r3\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB3_53\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB3_186\n\tadd\tstack-[9], r0, r1\n.BB3_185:\n\tptr.add\tstack[@ptr_calldata], r2, r3\n\tld\tr3, r3\n\tadd\t32, r1, r1\n\tst.1\tr1, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB3_185\n.BB3_186:\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t68, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_94[0], r1, r2\n\tjump.ge\t@.BB3_187\n\tadd\t35, r1, r4\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r4, r4\n\tand\t@CPI3_52[0], r2, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_52[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_53\n\tadd\t4, r1, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_69[0], r3, r4\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tadd\tstack-[5], r0, r6\n\tand\tr5, r6, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[7]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_69[0], r5, r7\n\tjump.gt\t@.BB3_70\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r5\n\tadd\tstack-[7], r0, r5\n\tst.1\tr5, r3\n\tadd\t36, r1, r1\n\tadd\tr4, r1, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB3_53\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB3_196\n\tadd\tstack-[7], r0, r2\n.BB3_195:\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tadd\t32, r2, r2\n\tst.1\tr2, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r4, r3\n\tjump.lt\t@.BB3_195\n.BB3_196:\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI3_69[0], r3, r2\n\tjump.gt\t@.BB3_187\n\tadd\t35, r3, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr2, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r2, r2\n\tand\t@CPI3_52[0], r4, r7\n\tsub!\tr2, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI3_52[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_53\n\tadd\t4, r3, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_69[0], r1, r2\n\tjump.gt\t@.BB3_70\n\tadd\t63, r1, r2\n\tadd\tstack-[5], r0, r5\n\tand\tr2, r5, r2\n\tld.1\t64, r5\n\tadd\tr5, r2, r2\n\tadd\tr5, r0, stack-[4]\n\tsub!\tr2, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_69[0], r2, r6\n\tjump.gt\t@.BB3_70\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r2\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\t36, r3, r5\n\tadd\tr1, r5, r3\n\tsub!\tr3, r4, r3\n\tjump.gt\t@.BB3_53\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r5, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB3_815\n\tadd\tr0, r0, r6\n.BB3_204:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_204\n.BB3_815:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB3_206\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB3_206:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[8], r0, r1\n\tand!\t@CPI3_53[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tjump.eq\t@.BB3_207\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_209\n\tadd\tstack-[21], r0, r1\n\tsub!\tr1, r2, r2\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[9], r0, r4\n\tadd\tstack-[7], r0, r5\n\tjump.ge\t@.BB3_212\n\tadd\t@CPI3_54[0], r0, r2\n\tadd\tstack-[21], r0, r6\n\tsub.s!\t@CPI3_54[0], r6, r3\n\tadd\tr6, r0, stack-[14]\n\tadd.lt\tr6, r0, r2\n\tshl.s\t64, r2, r2\n\tor\t@CPI3_84[0], r2, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t32784, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr1, r0, r3\n.BB3_219:\n\tld.1\tr5, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_220\n\tadd\tr3, r0, stack-[10]\n\tshl.s\t5, r3, r2\n\tadd\t32, r2, r2\n\tadd\tr2, r4, r3\n\tadd\tr2, r5, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tld.1\tr3, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[11], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_224\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[9], r0, r4\n\tld.1\tr4, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[7], r0, r5\n\tjump.lt\t@.BB3_219\n.BB3_212:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr4, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB3_215\n\tadd\tr0, r0, r5\n\tadd\tstack-[9], r0, r6\n.BB3_214:\n\tadd\t32, r6, r6\n\tld.1\tr6, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r7\n\tjump.lt\t@.BB3_214\n.BB3_215:\n\tcontext.caller\tr4\n\tadd\tr4, r0, stack-[13]\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_218\n\tadd\tr0, r0, r3\n\tadd\tstack-[7], r0, r5\n.BB3_217:\n\tadd\t32, r5, r5\n\tld.1\tr5, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB3_217\n.BB3_218:\n\tsub\tr2, r1, r2\n\tadd\t@CPI3_54[0], r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_86[0], r0, r4\n\tadd\tr3, r0, stack-[12]\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_53\n\tadd\t@CPI3_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_61[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_229\n\tadd\tstack-[21], r0, r1\n\tadd\tr1, r0, stack-[13]\n.BB3_239:\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[13], r0, r3\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_32:\n\tsub.s!\t@CPI3_23[0], r1, r2\n\tjump.eq\t@.BB3_564\n\tsub.s!\t@CPI3_24[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI3_69[0], r5, r2\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[13]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_69[0], r2, r4\n\tjump.gt\t@.BB3_70\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r2\n\tadd\tstack-[13], r0, r2\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr2, r5\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[12], r0, r6\n\tadd\tstack-[11], r0, r7\n\tsub!\tr7, r6, r2\n\tjump.ge\t@.BB3_581\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n.BB3_579:\n\tld.1\t64, r3\n\tsub.s!\t@CPI3_56[0], r3, r4\n\tjump.gt\t@.BB3_70\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tsload\tr1, r4\n\tand\t@CPI3_53[0], r4, r4\n\tst.1.inc\tr3, r4, r4\n\tadd\t1, r1, r5\n\tsload\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r2, r2\n\tst.1\tr2, r3\n\tadd\t2, r1, r1\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r3\n\tjump.lt\t@.BB3_579\n.BB3_581:\n\tadd\tstack-[13], r0, r5\n\tld.1\tr5, r1\n\tadd\tstack-[21], r0, r2\n\tsub!\tr2, r1, r3\n\tadd\tr0, r0, r3\n\tjump.ge\t@.BB3_583\n\tadd\tr0, r0, r4\n.BB3_584:\n\tshl.s\t5, r2, r3\n\tadd\tr3, r5, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_224\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\tr3, r0, r4\n\tjump.lt\t@.BB3_584\n.BB3_583:\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_84[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_7:\n\tsub.s!\t@CPI3_48[0], r1, r2\n\tjump.eq\t@.BB3_65\n\tsub.s!\t@CPI3_49[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t8, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r7\n\tadd.eq\tr2, r0, r7\n\tsub.s!\t31, r7, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_81\n\tld.1\t64, r1\n\tst.1.inc\tr1, r7, r2\n\tsub.s!\t0, r5, r5\n\tjump.eq\t@.BB3_102\n\tadd\tstack-[21], r0, r3\n\tst.1\tr3, r4\n\tsub!\tr3, r7, r4\n\tjump.ge\t@.BB3_101\n\tadd\t@CPI3_116[0], r0, r4\n.BB3_105:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r7, r5\n\tjump.lt\t@.BB3_105\n\tjump\t@.BB3_101\n.BB3_19:\n\tsub.s!\t@CPI3_36[0], r1, r2\n\tjump.eq\t@.BB3_271\n\tsub.s!\t@CPI3_37[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_52[0], r0, r3\n\tsub.s!\t160, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r4, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI3_53[0], r3, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_69[0], r3, r5\n\tjump.gt\t@.BB3_53\n\tadd\t35, r3, r5\n\tadd\t@CPI3_52[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_52[0], r2, r8\n\tand\t@CPI3_52[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_52[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_53\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_69[0], r4, r5\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tsub.s\t32, r0, r7\n\tadd\tr7, r0, stack-[3]\n\tand\tr6, r7, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_69[0], r6, r8\n\tjump.gt\t@.BB3_70\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r6\n\tadd\tstack-[6], r0, r6\n\tst.1\tr6, r4\n\tadd\t36, r3, r3\n\tadd\tr5, r3, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB3_53\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB3_286\n\tadd\tstack-[6], r0, r2\n.BB3_285:\n\tptr.add\tstack[@ptr_calldata], r3, r4\n\tld\tr4, r4\n\tadd\t32, r2, r2\n\tst.1\tr2, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB3_285\n.BB3_286:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t100, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_69[0], r2, r3\n\tjump.gt\t@.BB3_187\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_52[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_52[0], r5, r5\n\tand\t@CPI3_52[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_52[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_53\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_69[0], r4, r5\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tadd\tstack-[3], r0, r7\n\tand\tr6, r7, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[5]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_69[0], r6, r8\n\tjump.gt\t@.BB3_70\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r6\n\tadd\tstack-[5], r0, r6\n\tst.1\tr6, r4\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB3_53\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_295\n\tadd\tstack-[5], r0, r3\n.BB3_294:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB3_294\n.BB3_295:\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI3_69[0], r4, r3\n\tjump.gt\t@.BB3_187\n\tadd\t35, r4, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tadd\t@CPI3_52[0], r0, r6\n\tsub!\tr3, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_52[0], r3, r3\n\tand\t@CPI3_52[0], r5, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI3_52[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr6, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB3_53\n\tadd\t4, r4, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_69[0], r2, r3\n\tjump.gt\t@.BB3_70\n\tadd\t63, r2, r3\n\tadd\tstack-[3], r0, r6\n\tand\tr3, r6, r3\n\tld.1\t64, r6\n\tadd\tr6, r3, r3\n\tadd\tr6, r0, stack-[2]\n\tsub!\tr3, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_69[0], r3, r7\n\tjump.gt\t@.BB3_70\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r3\n\tadd\tstack-[2], r0, r3\n\tst.1.inc\tr3, r2, r3\n\tadd\t36, r4, r6\n\tadd\tr2, r6, r4\n\tsub!\tr4, r5, r4\n\tjump.gt\t@.BB3_53\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r6, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB3_813\n\tadd\tr0, r0, r7\n.BB3_303:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB3_303\n.BB3_813:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB3_305\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB3_305:\n\tadd\tr3, r2, r2\n\tst.1\tr2, r0\n\tand\t@CPI3_53[0], r1, r2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_306\n.BB3_310:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_209\n\tadd\tstack-[12], r0, r1\n\tand!\t@CPI3_53[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.ne\t@.BB3_313\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_104[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_105[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_35:\n\tsub.s!\t@CPI3_20[0], r1, r2\n\tjump.eq\t@.BB3_586\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB3_53\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_CurrentOwner__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI3_53[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_84[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_42:\n\tsub.s!\t@CPI3_13[0], r1, r3\n\tjump.eq\t@.BB3_721\n\tsub.s!\t@CPI3_14[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n.BB3_724:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_48:\n\tsub.s!\t@CPI3_7[0], r1, r2\n\tjump.eq\t@.BB3_752\n\tsub.s!\t@CPI3_8[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_53[0], r2, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getNftEXit, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_10:\n\tsub.s!\t@CPI3_45[0], r1, r2\n\tjump.eq\t@.BB3_106\n\tsub.s!\t@CPI3_46[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t128, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, r4\n\tsub.s!\t@CPI3_53[0], r3, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t68, r2, r2\n\tld\tr2, r3\n\tadd\tr4, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tnear_call\tr0, @fun_addVoteInfo, @DEFAULT_UNWIND\n\tadd\t10, r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\t68, r2, r1\n\tadd\tstack-[14], r0, r4\n\tst.1\tr1, r4\n\tadd\t32, r2, r1\n\tadd\t@CPI3_110[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r4\n\tcontext.caller\tr5\n\tst.1\tr4, r5\n\tadd\t100, r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r5\n\tld\tr5, r5\n\tadd\t100, r2, r6\n\tst.1\tr6, r5\n\tst.1\tr2, r4\n\tand\t@CPI3_53[0], r3, r4\n\tsub.s!\t@CPI3_111[0], r2, r3\n\tjump.le\t@.BB3_116\n.BB3_79:\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_78[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t65, r0, r2\n\tst.1\t4, r2\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_79[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_22:\n\tsub.s!\t@CPI3_33[0], r1, r2\n\tjump.eq\t@.BB3_377\n\tsub.s!\t@CPI3_34[0], r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_53[0], r2, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getVoteInfoExit, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_514:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tand\t@CPI3_53[0], r2, r1\n\tst.1\tr3, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_84[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_564:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB3_53\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_CurrentOwner__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI3_53[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_84[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_611:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_52[0], r0, r3\n\tsub.s!\t192, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_52[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_52[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI3_53[0], r3, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t100, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_69[0], r3, r4\n\tjump.gt\t@.BB3_53\n\tadd\t35, r3, r4\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r1, r7\n\tand\t@CPI3_52[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_52[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_53\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_69[0], r2, r4\n\tjump.gt\t@.BB3_70\n\tadd\t63, r2, r4\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[10]\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[11]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_69[0], r4, r6\n\tjump.gt\t@.BB3_70\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r4\n\tadd\tstack-[11], r0, r4\n\tst.1.inc\tr4, r2, r4\n\tadd\tr4, r0, stack-[9]\n\tadd\t36, r3, r3\n\tadd\tr2, r3, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB3_53\n\tand\t31, r2, r1\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r2, r4\n\tadd\tstack-[9], r0, r8\n\tjump.eq\t@.BB3_809\n\tadd\tr0, r0, r5\n.BB3_622:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_622\n.BB3_809:\n\tsub.s!\t0, r1, r5\n\tjump.eq\t@.BB3_624\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr8, r4, r4\n\tshl.s\t3, r1, r1\n\tld.1\tr4, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_624:\n\tadd\tr8, r2, r1\n\tst.1\tr1, r0\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t164, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI3_69[0], r3, r2\n\tjump.gt\t@.BB3_187\n\tadd\t35, r3, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr2, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r2, r2\n\tand\t@CPI3_52[0], r4, r7\n\tsub!\tr2, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI3_52[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_53\n\tadd\t4, r3, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_69[0], r1, r2\n\tjump.gt\t@.BB3_70\n\tadd\t63, r1, r2\n\tadd\tstack-[10], r0, r5\n\tand\tr2, r5, r2\n\tld.1\t64, r5\n\tadd\tr5, r2, r2\n\tadd\tr5, r0, stack-[8]\n\tsub!\tr2, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_69[0], r2, r6\n\tjump.gt\t@.BB3_70\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r2\n\tadd\tstack-[8], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\t36, r3, r5\n\tadd\tr1, r5, r3\n\tsub!\tr3, r4, r3\n\tjump.gt\t@.BB3_53\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r5, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB3_808\n\tadd\tr0, r0, r6\n.BB3_632:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_632\n.BB3_808:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB3_634\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB3_634:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r0, r2\n\txor\tr1, r2, r1\n\tand!\t@CPI3_53[0], r1, r1\n\tjump.ne\t@.BB3_637\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_80[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_64[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_54:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_171:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI3_53[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_65:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r6\n\tsub.s!\t@CPI3_69[0], r6, r2\n\tjump.gt\t@.BB3_53\n\tadd\t35, r6, r2\n\tadd\t@CPI3_52[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI3_52[0], r3, r7\n\tand\t@CPI3_52[0], r2, r2\n\tsub!\tr2, r7, r8\n\tadd.ge\t0, r0, r4\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI3_52[0], r2, r2\n\tadd\tr5, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_53\n\tadd\t4, r6, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI3_94[0], r2, r1\n\tjump.ge\t@.BB3_70\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_69[0], r5, r8\n\tjump.gt\t@.BB3_70\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\t36, r6, r6\n\tadd\tr2, r6, r7\n\tsub!\tr7, r3, r3\n\tjump.gt\t@.BB3_53\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tshr.s!\t5, r2, r7\n\tjump.eq\t@.BB3_816\n\tadd\tr0, r0, r8\n.BB3_76:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB3_76\n.BB3_816:\n\tsub.s!\t0, r3, r8\n\tjump.eq\t@.BB3_78\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r3, r3\n\tld.1\tr7, r8\n\tshl\tr8, r3, r8\n\tshr\tr8, r3, r8\n\tld\tr6, r6\n\tsub\t256, r3, r3\n\tshr\tr6, r3, r6\n\tshl\tr6, r3, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB3_78:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tld.1\tr1, r3\n\tsub.s!\t@CPI3_94[0], r3, r2\n\tjump.ge\t@.BB3_79\n\tadd\t2, r0, r2\n\tsload\tr2, r6\n\tand!\t1, r6, r7\n\tshr.s\t1, r6, r6\n\tand\t127, r6, r8\n\tadd.eq\tr8, r0, r6\n\tsub.s!\t31, r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t1, r0, r8\n\tand\t1, r8, r8\n\tsub!\tr7, r8, r7\n\tjump.ne\t@.BB3_81\n\tsub.s!\t32, r6, r7\n\tjump.lt\t@.BB3_85\n\tadd\tstack-[21], r0, r7\n\tst.1\tr7, r2\n\tadd\t31, r3, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI3_117[0], r7, r7\n\tadd\t@CPI3_117[0], r0, r8\n\tsub.s!\t32, r3, r9\n\tadd.lt\tr8, r0, r7\n\tadd\t31, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\t@CPI3_117[0], r6, r6\n\tsub!\tr7, r6, r8\n\tjump.ge\t@.BB3_85\n\tadd\tstack-[21], r0, r8\n.BB3_86:\n\tsstore\tr7, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r9\n\tjump.lt\t@.BB3_86\n.BB3_85:\n\tadd\tstack-[21], r0, r6\n\tsub.s!\t31, r3, r7\n\tjump.le\t@.BB3_94\n\tst.1\tr6, r2\n\tand\tr3, r4, r7\n\tadd\t32, r0, r5\n\tadd\t@CPI3_117[0], r0, r4\n\tadd\tstack-[21], r0, r6\n\tsub!\tr6, r7, r8\n\tjump.ge\t@.BB3_91\n\tadd\t@CPI3_117[0], r0, r4\n\tadd\t32, r0, r5\n\tadd\tr6, r0, r8\n.BB3_90:\n\tadd\tr5, r1, r9\n\tld.1\tr9, r9\n\tsstore\tr4, r9\n\tadd\t32, r5, r5\n\tadd\t1, r4, r4\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB3_90\n.BB3_91:\n\tsub!\tr7, r3, r7\n\tjump.ge\t@.BB3_93\n\tshl.s\t3, r3, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tadd\tr5, r1, r1\n\tld.1\tr1, r1\n\tand\tr1, r7, r1\n\tsstore\tr4, r1\n.BB3_93:\n\tadd\t1, r0, r1\n\tshl.s\t1, r3, r4\n\tjump\t@.BB3_87\n.BB3_271:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_calculatePercentage, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_726:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI3_69[0], r5, r2\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[13]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_69[0], r2, r4\n\tjump.gt\t@.BB3_70\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r2\n\tadd\tstack-[13], r0, r2\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr2, r5\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[12], r0, r6\n\tadd\tstack-[11], r0, r7\n\tsub!\tr7, r6, r2\n\tjump.ge\t@.BB3_738\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n.BB3_736:\n\tld.1\t64, r3\n\tsub.s!\t@CPI3_56[0], r3, r4\n\tjump.gt\t@.BB3_70\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tsload\tr1, r4\n\tand\t@CPI3_53[0], r4, r4\n\tst.1.inc\tr3, r4, r4\n\tadd\t1, r1, r5\n\tsload\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r2, r2\n\tst.1\tr2, r3\n\tadd\t2, r1, r1\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r3\n\tjump.lt\t@.BB3_736\n.BB3_738:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[21], r0, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB3_741\n\tadd\tr0, r0, r4\n\tadd\tstack-[13], r0, r5\n.BB3_746:\n\tshl.s\t5, r2, r3\n\tadd\tr3, r5, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_224\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\tr3, r0, r4\n\tjump.lt\t@.BB3_746\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_742\n\tsub.s!\t0, r3, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB3_745\n\tmul\t100, r3, r1, r2\n\tdiv\tr1, r3, r2, r3\n\tsub.s!\t100, r2, r2\n\tjump.ne\t@.BB3_224\n\tjump\t@.BB3_745\n.BB3_763:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tand\t@CPI3_53[0], r2, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI3_53[0], r2, r2\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI3_60[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_61[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_768\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.eq\t@.BB3_724\n\tadd\t@CPI3_65[0], r0, r1\n\tadd\tstack-[13], r0, r3\n\tsub.s!\t0, r3, r2\n\tadd.ne\t0, r0, r1\n\tjump.ne\t@.BB3_773\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_771\n.BB3_601:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_53[0], r2, r2\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub.s!\t0, r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[13]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_53\n\tcontext.caller\tr2\n\tadd\tstack-[14], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_607\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_82[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_83[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_165:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t@CPI3_60[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t32778, r0, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_455:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB3_460\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_93[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_64[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_725:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_722\n\tjump\t@.BB3_53\n.BB3_761:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256t_uint256t_bytes, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_154:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_81\n\tld.1\t64, r4\n\tst.1.inc\tr4, r5, r6\n\tsub.s!\t0, r3, r3\n\tadd\tr4, r0, stack-[14]\n\tjump.eq\t@.BB3_160\n\tadd\tr6, r0, stack-[12]\n\tadd\tr5, r0, stack-[13]\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[11], r0, r7\n\tsub!\tr7, r5, r2\n\tadd\tstack-[14], r0, r4\n\tadd\tstack-[12], r0, r6\n\tjump.ge\t@.BB3_159\n\tld\tr1, r1\n.BB3_164:\n\tadd\tr6, r7, r2\n\tsload\tr1, r3\n\tst.1\tr2, r3\n\tadd\t1, r1, r1\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r2\n\tjump.lt\t@.BB3_164\n\tjump\t@.BB3_159\n.BB3_422:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_52[0], r0, r3\n\tsub.s!\t64, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_69[0], r3, r4\n\tjump.gt\t@.BB3_53\n\tadd\t35, r3, r4\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r2, r7\n\tand\t@CPI3_52[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_52[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_53\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_69[0], r1, r4\n\tjump.gt\t@.BB3_70\n\tadd\t63, r1, r4\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[13]\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[14]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_69[0], r4, r6\n\tjump.gt\t@.BB3_70\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r4\n\tst.1.inc\tr4, r1, r4\n\tadd\tr4, r0, stack-[12]\n\tadd\t36, r3, r3\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB3_53\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r1, r4\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB3_811\n\tadd\tr0, r0, r5\n.BB3_432:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_432\n.BB3_811:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB3_434\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr8, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB3_434:\n\tadd\tr8, r1, r1\n\tst.1\tr1, r0\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI3_94[0], r1, r1\n\tjump.lt\t@.BB3_437\n\tadd\t@CPI3_78[0], r0, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr2, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_79[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_586:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t9, r0, r3\n\tsload\tr3, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r6\n\tadd.eq\tr2, r0, r6\n\tsub.s!\t31, r6, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_589\n.BB3_81:\n\tadd\t@CPI3_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_721:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n.BB3_722:\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_addVoteInfo, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_752:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_53[0], r2, r2\n\tjump.gt\t@.BB3_53\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_106:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_53[0], r1, r3\n\tjump.gt\t@.BB3_53\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_53[0], r2, r2\n\tjump.gt\t@.BB3_53\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_377:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_52[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_52[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_52[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB3_379\n.BB3_53:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_379:\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_69[0], r2, r4\n\tjump.gt\t@.BB3_53\n\tadd\t35, r2, r4\n\tadd\t@CPI3_52[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_52[0], r1, r1\n\tand\t@CPI3_52[0], r4, r4\n\tsub!\tr4, r1, r7\n\tadd.ge\t0, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_53\n\tadd\t4, r2, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI3_69[0], r3, r1\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tsub.s\t32, r0, r1\n\tand\tr5, r1, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[10]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_69[0], r5, r7\n\tjump.gt\t@.BB3_70\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r5\n\tadd\tstack-[10], r0, r5\n\tst.1.inc\tr5, r3, r5\n\tadd\tr5, r0, stack-[9]\n\tadd\t36, r2, r2\n\tadd\tr2, r4, r4\n\tadd\tstack[@calldatasize], r0, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB3_187\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB3_388\n\tadd\tstack-[9], r0, r3\n.BB3_387:\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI3_53[0], r5, r6\n\tjump.gt\t@.BB3_187\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB3_387\n.BB3_388:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_69[0], r2, r3\n\tjump.le\t@.BB3_390\n.BB3_187:\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_589:\n\tld.1\t64, r1\n\tst.1.inc\tr1, r6, r2\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_592\n\tsub.s\t256, r0, r3\n\tand\tr4, r3, r3\n\tst.1\tr2, r3\n\tsub.s!\t0, r6, r3\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n\tjump\t@.BB3_590\n.BB3_102:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub.s!\t0, r7, r2\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n.BB3_101:\n\tadd\t32, r3, r2\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_783:\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[11], r0, r3\n\tadd\tstack-[12], r0, r4\n\tjump.ne\t@.BB3_786\n.BB3_309:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_99[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_100[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_460:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB3_461\n.BB3_224:\n\tadd\t@CPI3_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_592:\n\tadd\tstack-[21], r0, r2\n\tst.1\tr2, r3\n\tsub!\tr2, r6, r3\n\tjump.ge\t@.BB3_595\n\tadd\t@CPI3_85[0], r0, r3\n.BB3_594:\n\tadd\t32, r2, r2\n\tadd\tr2, r1, r4\n\tsload\tr3, r5\n\tst.1\tr4, r5\n\tadd\t1, r3, r3\n\tsub!\tr2, r6, r4\n\tjump.lt\t@.BB3_594\n.BB3_595:\n\tadd\t32, r2, r2\n\tadd\tr1, r0, r3\n.BB3_590:\n\tadd\tr2, r3, r2\n\tsub\tr2, r1, r2\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_787:\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_56[0], r2, r1\n\tjump.gt\t@.BB3_70\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1.inc\tr2, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB3_789:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_789\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_791\n.BB3_220:\n\tadd\t@CPI3_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_768:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_62[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_64[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_607:\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[13], r0, r4\n\tand\t255, r4, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_81[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[14], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_53\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_461:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[13], r0, r3\n\tsub\tr3, r2, r2\n\tadd\t1, r1, r1\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_160:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr6, r1\n\tsub.s!\t0, r5, r1\n\tadd\t32, r0, r7\n\tadd.eq\t0, r0, r7\n.BB3_159:\n\tadd\t32, r7, r2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_116:\n\tadd\tr4, r0, stack-[14]\n\tadd\t160, r2, r3\n\tst.1\t64, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI3_56[0], r3, r3\n\tjump.gt\t@.BB3_70\n\tadd\t224, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r0, r5\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r5\n\tadd\t192, r2, r3\n\tadd\t@CPI3_112[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr2, r3\n\tadd\tstack-[21], r0, r7\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r6\n\tsub.s!\t4, r6, r4\n\tadd\tr5, r0, stack-[11]\n\tadd\tr7, r0, stack-[12]\n\tjump.ne\t@.BB3_123\n\tand\t31, r7, r2\n\tshr.s!\t5, r7, r3\n\tjump.eq\t@.BB3_803\n\tadd\tr0, r0, r4\n.BB3_120:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tadd\tr1, r5, r5\n\tld.1\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_120\n.BB3_803:\n\tsub.s!\t0, r2, r4\n\tjump.eq\t@.BB3_122\n\tshl.s\t5, r3, r3\n\tadd\tr1, r3, r1\n\tadd\tr7, r3, r3\n\tshl.s\t3, r2, r2\n\tld.1\tr3, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld.1\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB3_122:\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB3_124\n.BB3_791:\n\tadd\tstack-[12], r0, r2\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_56[0], r2, r3\n\tjump.gt\t@.BB3_70\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB3_793:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r4, r4\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_793\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB3_220\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI3_57[0], r1, r2\n\tjump.gt\t@.BB3_70\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[21], r0, r4\n\tst.1\tr1, r4\n\tadd\tstack-[12], r0, r1\n\tst.1\tr4, r1\n\tst.1\t32, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[10]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[10]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB3_799\n.BB3_560:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_87[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_88[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_773:\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_771:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_54[0], r3, stack[@returndatasize]\n\tand\t@CPI3_54[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_724\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_817\n\tadd\tr0, r0, r5\n.BB3_776:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_776\n.BB3_817:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_778\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_778:\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_123:\n\tadd\t@CPI3_54[0], r0, r4\n\tsub.s!\t@CPI3_54[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_54[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tsub.s!\t0, r7, r2\n\tjump.ne\t@.BB3_126\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI3_54[0], r1, stack[@returndatasize]\n\tand\t@CPI3_54[0], r1, r3\n\tjump\t@.BB3_124\n.BB3_390:\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_52[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_52[0], r5, r5\n\tand\t@CPI3_52[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_52[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_53\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_69[0], r4, r5\n\tjump.gt\t@.BB3_70\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\tr6, r1, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[8]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_69[0], r6, r8\n\tjump.gt\t@.BB3_70\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r6\n\tadd\tstack-[8], r0, r6\n\tst.1.inc\tr6, r4, r6\n\tadd\tr6, r0, stack-[7]\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB3_53\n\tsub.s!\t0, r4, r3\n\tjump.ne\t@.BB3_396\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB3_402\n\tjump\t@.BB3_400\n.BB3_126:\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[12], r0, r3\n\tadd\tr6, r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_54[0], r3, r3\n\tsub!\tr3, r9, r4\n\tadd\tr9, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB3_820\n\tadd\tr0, r0, r6\n.BB3_128:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_128\n.BB3_820:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB3_130\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[12], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB3_130:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB3_124:\n\tadd\t96, r0, r9\n\tsub.s!\t0, r3, r1\n\tjump.ne\t@.BB3_140\n.BB3_131:\n\tadd\tr9, r0, stack-[9]\n\tld.1.inc\tr9, r1, r3\n\tadd\tr3, r0, stack-[10]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_132\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB3_148\n\tadd\t@CPI3_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_61[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_139\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_115[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_64[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_140:\n\tsub.s!\t@CPI3_69[0], r3, r1\n\tjump.le\t@.BB3_141\n.BB3_70:\n\tadd\t@CPI3_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_132:\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB3_134\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[14]\n\tadd\t@CPI3_63[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r2\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_141:\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r1\n\tadd\tr4, r0, r9\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI3_69[0], r1, r5\n\tjump.gt\t@.BB3_70\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r1\n\tst.1.inc\tr9, r3, r1\n\tadd\tstack-[21], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tadd\tr3, r0, stack-[12]\n\tadd\tr3, r5, r3\n\tsub!\tr3, r5, r3\n\tjump.gt\t@.BB3_53\n\tand\t31, r5, r3\n\tadd\tstack-[12], r0, r4\n\tptr.add\tstack[@ptr_return_data], r4, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB3_819\n\tadd\tr0, r0, r6\n.BB3_146:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_146\n.BB3_819:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB3_131\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n\tjump\t@.BB3_131\n.BB3_437:\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_81\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t32, r1, r1\n\tadd\tstack-[11], r0, r5\n\tjump.lt\t@.BB3_442\n\tadd\tstack-[9], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[10], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr1, r3, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[11], r0, r5\n\tjump.ge\t@.BB3_442\n.BB3_443:\n\tsstore\tr2, r5\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB3_443\n.BB3_442:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB3_452\n\tadd\tstack-[9], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[10], r0, r3\n\tand\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r6\n\tsub!\tr6, r3, r4\n\tadd\tstack-[14], r0, r5\n\tjump.ge\t@.BB3_449\n\tadd\t32, r0, r2\n.BB3_448:\n\tadd\tr5, r2, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r4\n\tjump.lt\t@.BB3_448\n.BB3_449:\n\tadd\tstack-[10], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB3_451\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr4, r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB3_451:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tjump\t@.BB3_444\n.BB3_741:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB3_745\n.BB3_742:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_71[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_72[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_134:\n\tadd\t@CPI3_54[0], r0, r2\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_745:\n\tadd\tstack-[14], r0, r2\n\tdiv\tr1, r2, r1, r2\n\tsub.s!\t66, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tadd!\tstack-[21], r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tor\tr1, r2, r1\n\tand\t1, r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_67[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_94:\n\tsub.s!\t0, r3, r1\n\tadd\tr6, r0, r1\n\tjump.eq\t@.BB3_96\n\tld.1\tr5, r1\n.BB3_96:\n\tshl.s\t3, r3, r4\n\tsub.s\t1, r0, r5\n\tshr\tr5, r4, r4\n\txor\tr4, r5, r4\n\tand\tr1, r4, r4\n\tshl.s\t1, r3, r1\n.BB3_87:\n\tor\tr4, r1, r1\n\tsstore\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r6, r2\n\tadd.lt\tr6, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_479:\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[12], r0, r3\n\tadd\tstack-[11], r0, r4\n\tadd\tstack-[10], r0, r5\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @fun_getShareExit, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_491\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI3_56[0], r1, r1\n\tjump.gt\t@.BB3_70\n\tadd\tstack-[10], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t5, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI3_69[0], r2, r2\n\tjump.gt\t@.BB3_70\n\tadd\tstack-[13], r0, r3\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_220\n\tst.1\t0, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[13], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tjump\t@.BB3_480\n.BB3_491:\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @fun_getShareEntity, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_224\n\tadd\tstack-[7], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @fun_getShareArrayIndex, @DEFAULT_UNWIND\n\tadd\tstack-[21], r0, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t5, r0, r3\n\tst.1\t32, r3\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[13], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_220\n\tst.1\t0, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[13], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n.BB3_480:\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_53[0], r2, r2\n\tsload\tr1, r3\n\tand\t@CPI3_68[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @fun_getShareEntity, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[13]\n\tld.1\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB3_224\n\tadd\tstack-[11], r0, r2\n\tsub\tr1, r2, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @fun_getShareArrayIndex, @DEFAULT_UNWIND\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[12], r0, r2\n\tst.1\tr4, r2\n\tadd\t5, r0, r2\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[6]\n\tadd.lt\tr4, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_220\n\tst.1\t0, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[11], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI3_68[0], r2, r2\n\tadd\tstack-[10], r0, r3\n\tld.1\tr3, r3\n\tand\t@CPI3_53[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_496\n.BB3_504:\n\tadd\tstack-[7], r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_452:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr5, r0, r1\n\tjump.eq\t@.BB3_454\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n.BB3_454:\n\tadd\tstack-[10], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tsub.s!\t@CPI3_54[0], r5, r2\n\tadd.lt\tr5, r0, r1\n\tadd\tr1, r0, stack-[12]\n.BB3_444:\n\tadd\tstack-[12], r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_139:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB3_153\n.BB3_148:\n\tadd\t@CPI3_52[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_52[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_52[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_150\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_150\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_153\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_113[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_114[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_150:\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_153:\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_396:\n\tadd\tstack-[8], r0, r3\n.BB3_397:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB3_397\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[10], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB3_400\n\tsub.s!\t@CPI3_69[0], r2, r3\n\tjump.gt\t@.BB3_70\n.BB3_402:\n\tshl.s\t5, r2, r3\n\tadd\t63, r3, r4\n\tand\tr4, r1, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r1\n\tadd\tr4, r0, stack-[6]\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI3_69[0], r1, r5\n\tjump.gt\t@.BB3_70\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r1\n\tst.1.inc\tr1, r2, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB3_818\n\tadd\tr0, r0, r4\n.BB3_406:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_406\n.BB3_818:\n\tadd\tr7, r0, stack-[5]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB3_408\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[5], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB3_408:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[21], r0, r3\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB3_410\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[14]\n.BB3_411:\n\tshl.s\t5, r3, r4\n\tadd\tstack-[9], r0, r1\n\tadd\tr4, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI3_53[0], r1, r2\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB3_220\n\tadd\tr3, r0, stack-[12]\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t0, r2, r1\n\tadd\tstack-[14], r0, r2\n\tjump.eq\t@.BB3_413\n\tadd\tstack-[7], r0, r1\n\tadd\tr4, r0, stack-[11]\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[12], r0, r3\n\tsub!\tr2, r3, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[11], r0, r4\n\tjump.le\t@.BB3_220\n\tadd\tr4, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB3_411\n.BB3_410:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t32, r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[6], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_400:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_95[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_96[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_799:\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tst.1\t32, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[10]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[11], r0, r3\n\tadd\tstack-[9], r0, r2\n\tsub\tr2, r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[21], r0, r7\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_58[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tr7, r0, stack-[14]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_53\n\tld.1\t64, r1\n\tnear_call\tr0, @finalize_allocation_36910, @DEFAULT_UNWIND\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_539:\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[11], r0, r1\n\tst.1\tr4, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB3_309\n\tjump\t@.BB3_542\n.BB3_637:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_638\n.BB3_207:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_108[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_109[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_209:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_106[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_107[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_638:\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_56[0], r2, r1\n\tjump.gt\t@.BB3_70\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1.inc\tr2, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB3_640:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_640\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB3_220\n\tadd\tstack-[13], r0, r2\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_56[0], r2, r3\n\tjump.gt\t@.BB3_70\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB3_644:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r4, r4\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_644\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB3_220\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[13], r0, r1\n\tst.1\tr4, r1\n\tst.1\t32, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[6]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_224\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[21], r0, r6\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_58[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tr3, r0, stack-[5]\n\tadd\tr5, r0, stack-[6]\n\tadd\tstack-[14], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_53\n\tadd\t@CPI3_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_61[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_652\n.BB3_656:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI3_56[0], r1, r1\n\tjump.gt\t@.BB3_70\n\tadd\tstack-[8], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[7], r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_53[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI3_68[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI3_56[0], r1, r1\n\tjump.gt\t@.BB3_70\n\tadd\tstack-[8], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[5], r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_53[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI3_68[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI3_56[0], r1, r1\n\tjump.gt\t@.BB3_70\n\tadd\tstack-[8], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[13], r0, r1\n\tst.1\tr4, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI3_69[0], r2, r2\n\tjump.gt\t@.BB3_70\n\tadd\tstack-[12], r0, r3\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_220\n\tst.1\t0, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[12], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI3_68[0], r2, r2\n\tadd\tstack-[8], r0, r3\n\tld.1\tr3, r3\n\tand\t@CPI3_53[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[21], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI3_69[0], r1, r1\n\tjump.le\t@.BB3_698\n\tadd\t@CPI3_78[0], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_79[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_413:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_97[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_98[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_496:\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr2, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI3_69[0], r2, r2\n\tjump.gt\t@.BB3_70\n\tadd\tstack-[12], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tadd\tstack-[9], r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[11]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_69[0], r2, r4\n\tjump.gt\t@.BB3_70\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r2\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[12], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[13], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB3_507\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n.BB3_505:\n\tld.1\t64, r3\n\tsub.s!\t@CPI3_56[0], r3, r4\n\tjump.gt\t@.BB3_70\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tsload\tr1, r4\n\tand\t@CPI3_53[0], r4, r4\n\tst.1.inc\tr3, r4, r4\n\tadd\t1, r1, r5\n\tsload\tr5, r5\n\tst.1\tr4, r5\n\tst.1.inc\tr2, r3, r2\n\tadd\t2, r1, r1\n\tadd\tstack-[13], r0, r4\n\tadd\t1, r4, r4\n\tadd\tstack-[12], r0, r3\n\tadd\tr4, r0, stack-[13]\n\tsub!\tr4, r3, r3\n\tjump.lt\t@.BB3_505\n.BB3_507:\n\tadd\tstack-[11], r0, r6\n\tld.1\tr6, r2\n\tadd\tstack-[21], r0, r1\n\tsub!\tr1, r2, r2\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[10], r0, r7\n\tjump.ge\t@.BB3_503\n\tadd\tstack-[21], r0, r2\n\tjump\t@.BB3_509\n.BB3_512:\n\tst.1\tr3, r4\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[10], r0, r7\n.BB3_513:\n\tadd\t1, r1, r1\n\tld.1\tr6, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB3_503\n.BB3_509:\n\tshl.s\t5, r1, r3\n\tadd\tr7, r3, r3\n\tld.1\tr3, r4\n\tld.1\tr4, r4\n\txor\tr5, r4, r4\n\tand!\t@CPI3_53[0], r4, r4\n\tjump.ne\t@.BB3_513\n\tld.1\t64, r4\n\tsub.s!\t@CPI3_56[0], r4, r5\n\tjump.gt\t@.BB3_70\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tadd\t32, r4, r5\n\tst.1\tr5, r2\n\tst.1\tr4, r2\n\tadd\tstack-[11], r0, r6\n\tld.1\tr6, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB3_512\n\tjump\t@.BB3_220\n.BB3_306:\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[9], r0, r1\n\tst.1\tr4, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB3_310\n\tjump\t@.BB3_309\n.BB3_313:\n\tadd\tstack-[21], r0, r1\n\tsub!\tr1, r2, r2\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[5], r0, r5\n\tjump.ge\t@.BB3_315\n\tadd\t@CPI3_54[0], r0, r2\n\tadd\tstack-[21], r0, r6\n\tsub.s!\t@CPI3_54[0], r6, r3\n\tadd\tr6, r0, stack-[14]\n\tadd.lt\tr6, r0, r2\n\tshl.s\t64, r2, r2\n\tor\t@CPI3_84[0], r2, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, r3\n.BB3_322:\n\tld.1\tr5, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_220\n\tadd\tr3, r0, stack-[7]\n\tshl.s\t5, r3, r2\n\tadd\t32, r2, r2\n\tadd\tr2, r4, r3\n\tld.1\tr3, r3\n\tadd\tr2, r5, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\tr3, r0, stack-[10]\n\tst.1\tr1, r3\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_326\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[8], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[11], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_224\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[6], r0, r4\n\tld.1\tr4, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[5], r0, r5\n\tjump.lt\t@.BB3_322\n.BB3_315:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr4, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB3_318\n\tadd\tr0, r0, r5\n\tadd\tstack-[6], r0, r6\n.BB3_317:\n\tadd\t32, r6, r6\n\tld.1\tr6, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r7\n\tjump.lt\t@.BB3_317\n.BB3_318:\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_321\n\tadd\tr0, r0, r3\n\tadd\tstack-[5], r0, r5\n.BB3_320:\n\tadd\t32, r5, r5\n\tld.1\tr5, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB3_320\n.BB3_321:\n\tsub\tr2, r1, r2\n\tadd\t@CPI3_54[0], r0, r3\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_86[0], r0, r4\n\tadd\tr3, r0, stack-[14]\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_53\n\tadd\t@CPI3_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_61[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_336\n\tadd\tstack-[21], r0, r1\n\tadd\tr1, r0, stack-[12]\n.BB3_346:\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_229:\n\tld.1\t64, r4\n\tadd\t@CPI3_101[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tadd\tstack-[21], r0, r2\n\tadd\t160, r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r4, r1\n\tst.1\tr1, r2\n\tadd\tstack-[9], r0, r5\n\tld.1\tr5, r2\n\tadd\t164, r4, r1\n\tst.1\tr1, r2\n\tadd\tr4, r0, stack-[14]\n\tadd\t196, r4, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_232\n\tadd\tr0, r0, r3\n.BB3_231:\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_231\n.BB3_232:\n\tsub.s\t4, r0, r2\n\tadd\tstack-[14], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t100, r3, r3\n\tadd\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[7], r0, r6\n\tld.1\tr6, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB3_235\n\tadd\tr0, r0, r4\n.BB3_234:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_234\n.BB3_235:\n\tadd\tr2, r1, r2\n\tadd\tstack-[14], r0, r3\n\tadd\t132, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[4], r0, r6\n\tld.1\tr6, r2\n\tst.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_238\n\tadd\tr0, r0, r3\n.BB3_237:\n\tadd\tr3, r1, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_237\n.BB3_238:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\tstack-[21], r0, r3\n\tadd\tr3, r0, stack-[13]\n\tcontext.gas_left\tr3\n\tadd\tstack-[6], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.ne\t@.BB3_241\n\tadd\tstack-[13], r0, r1\n\tadd\tr1, r0, stack-[20]\n\tcontext.sp\tr4\n\tsub.s\t20, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB3_249\n.BB3_503:\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tjump\t@.BB3_504\n.BB3_241:\n\tadd\t31, r2, r2\n\tadd\tstack-[5], r0, r4\n\tand\tr2, r4, r2\n\tadd\tstack-[14], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI3_54[0], r5, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_248\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_242\n.BB3_336:\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_101[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[6], r0, r5\n\tld.1\tr5, r2\n\tadd\t164, r3, r1\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[13]\n\tadd\t196, r3, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_339\n\tadd\tr0, r0, r3\n.BB3_338:\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_338\n.BB3_339:\n\tsub.s\t4, r0, r2\n\tadd\tstack-[13], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t100, r3, r3\n\tadd\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[5], r0, r6\n\tld.1\tr6, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB3_342\n\tadd\tr0, r0, r4\n.BB3_341:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_341\n.BB3_342:\n\tadd\tr2, r1, r2\n\tadd\tstack-[13], r0, r3\n\tadd\t132, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r6\n\tld.1\tr6, r2\n\tst.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_345\n\tadd\tr0, r0, r3\n.BB3_344:\n\tadd\tr3, r1, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_344\n.BB3_345:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\tstack-[21], r0, r3\n\tadd\tr3, r0, stack-[12]\n\tcontext.gas_left\tr3\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.ne\t@.BB3_348\n\tadd\tstack-[12], r0, r1\n\tadd\tr1, r0, stack-[18]\n\tcontext.sp\tr4\n\tsub.s\t18, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB3_356\n.BB3_248:\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[13], r0, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_242:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_54[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tadd\tstack-[14], r0, r9\n\tjump.eq\t@.BB3_806\n\tadd\tr0, r0, r6\n.BB3_244:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_244\n.BB3_806:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB3_246\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[14], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB3_246:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[13], r0, r4\n\tadd\tr4, r0, stack-[19]\n\tcontext.sp\tr4\n\tsub.s\t19, r4, r4\n\tmul\t32, r4, r4, r0\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_255\n.BB3_249:\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r1\n\tadd.lt\tr3, r0, r1\n\tadd\t31, r1, r1\n\tand\t96, r1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r5\n\tsub.s!\t@CPI3_69[0], r2, r2\n\tjump.gt\t@.BB3_70\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB3_53\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI3_77[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_53\n\tdiv.s\t32, r4, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI3_101[0], r1, r1\n\tjump.eq\t@.BB3_239\n\tadd\t@CPI3_63[0], r0, r1\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_255:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB3_270\n\tld.1\t0, r2\n\tand\t@CPI3_76[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI3_77[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI3_77[0], r1, r1\n\tsub.s!\t@CPI3_63[0], r1, r1\n\tjump.ne\t@.BB3_270\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB3_270\n\tld.1\t64, r2\n\tadd\tstack-[12], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_814\n\tadd\tr0, r0, r5\n.BB3_260:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_260\n.BB3_814:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_262\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_262:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI3_69[0], r3, r1\n\tjump.gt\t@.BB3_270\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB3_270\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI3_69[0], r5, r6\n\tjump.gt\t@.BB3_270\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB3_270\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[5], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI3_69[0], r5, r3\n\tjump.gt\t@.BB3_70\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB3_270\n\tadd\t@CPI3_63[0], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_652:\n\tld.1\t64, r4\n\tadd\t@CPI3_75[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t132, r4, r1\n\tadd\tstack-[21], r0, r2\n\tadd\t160, r0, r3\n\tst.1\tr1, r3\n\tadd\t100, r4, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r4, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r4, r1\n\tst.1\tr1, r2\n\tadd\tstack-[8], r0, r6\n\tld.1\tr6, r1\n\tadd\t164, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\t196, r4, r2\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB3_655\n\tadd\tr0, r0, r3\n.BB3_654:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB3_654\n.BB3_655:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\tstack-[21], r0, r2\n\tadd\tr2, r0, stack-[8]\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB3_668\n\tadd\tstack-[8], r0, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.sp\tr1\n\tsub.s\t16, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB3_676\n.BB3_326:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_102[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_103[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_348:\n\tadd\t31, r2, r2\n\tadd\tstack-[3], r0, r4\n\tand\tr2, r4, r2\n\tadd\tstack-[13], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI3_54[0], r5, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_54[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_355\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_349\n.BB3_668:\n\tadd\t31, r1, r1\n\tadd\tstack-[10], r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI3_54[0], r0, r3\n\tadd\tstack-[6], r0, r5\n\tsub.s!\t@CPI3_54[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI3_54[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_54[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_675\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_669\n.BB3_355:\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[12], r0, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_349:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_54[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tadd\tstack-[13], r0, r9\n\tjump.eq\t@.BB3_805\n\tadd\tr0, r0, r6\n.BB3_351:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_351\n.BB3_805:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB3_353\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB3_353:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[12], r0, r4\n\tadd\tr4, r0, stack-[17]\n\tcontext.sp\tr4\n\tsub.s\t17, r4, r4\n\tmul\t32, r4, r4, r0\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_362\n.BB3_356:\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r1\n\tadd.lt\tr3, r0, r1\n\tadd\t31, r1, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r5\n\tsub.s!\t@CPI3_69[0], r2, r2\n\tjump.gt\t@.BB3_70\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB3_53\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI3_77[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_53\n\tdiv.s\t32, r4, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI3_101[0], r1, r1\n\tjump.eq\t@.BB3_346\n\tadd\t@CPI3_63[0], r0, r1\n\tadd\tr5, r0, stack-[14]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_362:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB3_270\n\tld.1\t0, r2\n\tand\t@CPI3_76[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI3_77[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI3_77[0], r1, r1\n\tsub.s!\t@CPI3_63[0], r1, r1\n\tjump.ne\t@.BB3_270\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB3_270\n\tld.1\t64, r2\n\tadd\tstack-[14], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_812\n\tadd\tr0, r0, r5\n.BB3_367:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_367\n.BB3_812:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_369\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_369:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI3_69[0], r3, r1\n\tjump.gt\t@.BB3_270\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB3_270\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI3_69[0], r5, r6\n\tjump.gt\t@.BB3_270\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB3_270\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[3], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI3_69[0], r5, r3\n\tjump.gt\t@.BB3_70\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB3_270\n\tadd\t@CPI3_63[0], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_675:\n\tor\t@CPI3_66[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_669:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_54[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tadd\tstack-[6], r0, r9\n\tjump.eq\t@.BB3_804\n\tadd\tr0, r0, r6\n.BB3_671:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_671\n.BB3_804:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB3_673\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[6], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB3_673:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[8], r0, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.sp\tr1\n\tsub.s\t15, r1, r1\n\tmul\t32, r1, r1, r0\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_682\n.BB3_676:\n\tsub.s!\t32, r3, r2\n\tadd\t32, r0, r2\n\tadd.lt\tr3, r0, r2\n\tadd\t31, r2, r2\n\tand\t96, r2, r2\n\tadd\tstack-[6], r0, r4\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, r5\n\tsub.s!\t@CPI3_69[0], r4, r4\n\tjump.gt\t@.BB3_70\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB3_53\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_77[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB3_53\n\tdiv.s\t32, r1, r1, r0\n\tadd\tr2, r0, stack[r1]\n\tsub.s!\t@CPI3_75[0], r2, r1\n\tjump.eq\t@.BB3_656\n\tadd\t@CPI3_63[0], r0, r1\n\tadd\tr5, r0, stack-[8]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_682:\n\tsub.s!\t4, r3, r1\n\tjump.lt\t@.BB3_270\n\tld.1\t0, r1\n\tand\t@CPI3_76[0], r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tld\tr2, r2\n\tand\t@CPI3_77[0], r2, r2\n\tor\tr2, r1, r1\n\tst.1\t0, r1\n\tand\t@CPI3_77[0], r1, r1\n\tsub.s!\t@CPI3_63[0], r1, r1\n\tjump.ne\t@.BB3_270\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB3_270\n\tld.1\t64, r2\n\tadd\tstack-[5], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_807\n\tadd\tr0, r0, r5\n.BB3_687:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_687\n.BB3_807:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_689\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_689:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI3_69[0], r3, r1\n\tjump.gt\t@.BB3_270\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB3_270\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI3_69[0], r5, r6\n\tjump.gt\t@.BB3_270\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB3_270\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[10], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI3_69[0], r5, r3\n\tjump.gt\t@.BB3_70\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_70\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB3_696\n.BB3_270:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI3_63[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_f591, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_696:\n\tadd\t@CPI3_63[0], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_54[0], r0, r2\n\tsub.s!\t@CPI3_54[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_698:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_81\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB3_703\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[12], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr1, r3, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB3_703\n.BB3_704:\n\tadd\tstack-[14], r0, r3\n\tsstore\tr2, r3\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB3_704\n.BB3_703:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB3_713\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_54[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_54[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r2\n\tsub.s!\t@CPI3_54[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_53\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[12], r0, r3\n\tand\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB3_710\n\tadd\t32, r0, r2\n.BB3_709:\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r2, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[14], r0, r4\n\tadd\t32, r4, r4\n\tadd\tr4, r0, stack-[14]\n\tsub!\tr4, r3, r4\n\tjump.lt\t@.BB3_709\n.BB3_710:\n\tadd\tstack-[12], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB3_712\n\tadd\tstack-[12], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB3_712:\n\tadd\tstack-[12], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tjump\t@.BB3_705\n.BB3_713:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[14], r0, r1\n\tjump.eq\t@.BB3_715\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n.BB3_715:\n\tadd\tstack-[12], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI3_54[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI3_54[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tadd\tr1, r0, stack-[9]\n.BB3_705:\n\tadd\tstack-[9], r0, r1\n\tmul\t@CPI3_59[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end3:\n\nfinalize_allocation_36910:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_encode_string:\n.func_begin6:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB6_3\n\tadd\tr0, r0, r4\n.BB6_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB6_2\n.BB6_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end6:\n\nabi_decode_uint256t_uint256:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_encode_array_uint256_dyn:\n.func_begin8:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB8_3\n\tadd\tr0, r0, r2\n.BB8_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB8_2\n.BB8_3:\n\tret\n.func_end8:\n\nabi_decode_addresst_addresst_uint256t_uint256t_bytes:\n.func_begin9:\n\tadd\tr1, r0, r6\n\tsub.s\t4, r6, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t159, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add.s\t4, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t36, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t132, r5, r3\n\tld\tr3, r8\n\tsub.s!\t@CPI9_2[0], r8, r3\n\tjump.gt\t@.BB9_1\n\tadd\t35, r8, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tsub!\tr3, r6, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr4, r0, r7\n\tand\t@CPI9_0[0], r6, r9\n\tand\t@CPI9_0[0], r3, r3\n\tsub!\tr3, r9, r10\n\tadd.ge\t0, r0, r4\n\txor\tr3, r9, r3\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd.eq\tr4, r0, r7\n\tptr.add.s\t68, r5, r3\n\tld\tr3, r3\n\tptr.add.s\t100, r5, r4\n\tld\tr4, r4\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB9_1\n\tadd\t4, r8, r7\n\tptr.add\tr5, r7, r5\n\tld\tr5, r7\n\tsub.s!\t@CPI9_3[0], r7, r5\n\tjump.ge\t@.BB9_7\n\tadd\t63, r7, r5\n\tsub.s\t32, r0, r9\n\tand\tr5, r9, r9\n\tld.1\t64, r5\n\tadd\tr5, r9, r9\n\tsub!\tr9, r5, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI9_2[0], r9, r11\n\tjump.gt\t@.BB9_7\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB9_7\n\tst.1\t64, r9\n\tst.1.inc\tr5, r7, r9\n\tadd\t36, r8, r8\n\tadd\tr7, r8, r10\n\tsub!\tr10, r6, r6\n\tjump.gt\t@.BB9_1\n\tand\t31, r7, r6\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r7, r10\n\tjump.eq\t@.BB9_16\n\tadd\tr0, r0, r11\n.BB9_13:\n\tshl.s\t5, r11, r12\n\tadd\tr9, r12, r13\n\tptr.add\tr8, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r10, r12\n\tjump.lt\t@.BB9_13\n.BB9_16:\n\tsub.s!\t0, r6, r11\n\tjump.eq\t@.BB9_15\n\tshl.s\t5, r10, r10\n\tptr.add\tr8, r10, r8\n\tadd\tr9, r10, r10\n\tshl.s\t3, r6, r6\n\tld.1\tr10, r11\n\tshl\tr11, r6, r11\n\tshr\tr11, r6, r11\n\tld\tr8, r8\n\tsub\t256, r6, r6\n\tshr\tr8, r6, r8\n\tshl\tr8, r6, r6\n\tor\tr6, r11, r6\n\tst.1\tr10, r6\n.BB9_15:\n\tadd\tr9, r7, r6\n\tst.1\tr6, r0\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_7:\n\tadd\t@CPI9_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nstorage_array_index_access_struct_CurrentOwner__dyn:\n.func_begin10:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB10_1\n\tst.1\t0, r1\n\tadd\t@CPI10_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\tr0, r0, r2\n\tret\n.BB10_1:\n\tadd\t@CPI10_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin11:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI11_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB11_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI11_1[0], r1, r2\n\tjump.gt\t@.BB11_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI11_1[0], r2, r4\n\tjump.gt\t@.BB11_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tnop\tstack+=[1]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tjump.eq\t@.BB12_1\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_safeTransferFrom:\n.func_begin13:\n\tnop\tstack+=[10]\n\tadd\tr5, r0, stack-[1]\n\tadd\tr3, r0, stack-[8]\n\tand\t@CPI13_0[0], r1, r3\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr3, r1, r1\n\tadd\tr4, r0, stack-[7]\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB13_6\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[7], r0, r4\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB13_5\n.BB13_6:\n\tld.1\t64, r1\n\tand!\t@CPI13_0[0], r2, r9\n\tjump.eq\t@.BB13_7\n\tsub.s!\t@CPI13_7[0], r1, r3\n\tjump.ge\t@.BB13_9\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t1, r0, r10\n\tst.1.inc\tr1, r10, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r8\n\tadd\tr0, r0, r5\n.BB13_11:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr8, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB13_11\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_13\n\tadd\tstack-[8], r0, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI13_8[0], r1, r3\n\tjump.gt\t@.BB13_9\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tst.1.inc\tr1, r10, r8\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r7\n.BB13_16:\n\tshl.s\t5, r7, r5\n\tadd\tr8, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r7, r7\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB13_16\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_13\n\tadd\tr9, r0, stack-[5]\n\tst.1\tr8, r4\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_21\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[2], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB13_27\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI13_9[0], r0, r4\n\tadd\tr3, r0, stack-[2]\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_2\n\tadd\t@CPI13_10[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_11[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[7], r0, r3\n\tjump.eq\t@.BB13_35\n\tld.1\t64, r10\n\tadd\t132, r10, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r10, r1\n\tst.1\tr1, r3\n\tadd\t68, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_12[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t164, r10, r2\n\tst.1\tr2, r1\n\tadd\t196, r10, r2\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB13_34\n\tadd\tr0, r0, r3\n.BB13_33:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB13_33\n.BB13_34:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB13_37\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[10]\n\tjump\t@.BB13_42\n.BB13_37:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tadd\tr3, r0, stack-[7]\n\tand\tr1, r3, r1\n\tadd\t@CPI13_1[0], r0, r3\n\tsub.s!\t@CPI13_1[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI13_1[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI13_1[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB13_65\n\tadd\tr0, r0, r7\n.BB13_39:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB13_39\n.BB13_65:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB13_41\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB13_41:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[9]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_48\n.BB13_42:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI13_15[0], r4, r2\n\tjump.gt\t@.BB13_9\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB13_9\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB13_2\n\tld.1\tr10, r1\n\tand\t@CPI13_14[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB13_2\n\tdiv.s\t32, r5, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI13_12[0], r1, r1\n\tjump.ne\t@.BB13_47\n.BB13_35:\n\tret\n.BB13_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_13:\n\tadd\t@CPI13_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tadd\t100, r1, r2\n\tadd\t@CPI13_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_21:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_27:\n\tadd\t@CPI13_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_47:\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr4, r0, stack-[8]\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_48:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB13_63\n\tld.1\t0, r2\n\tand\t@CPI13_13[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI13_14[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI13_14[0], r1, r1\n\tsub.s!\t@CPI13_5[0], r1, r1\n\tjump.ne\t@.BB13_63\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB13_63\n\tld.1\t64, r2\n\tadd\tstack-[2], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB13_64\n\tadd\tr0, r0, r5\n.BB13_53:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB13_53\n.BB13_64:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB13_55\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB13_55:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI13_15[0], r3, r1\n\tjump.gt\t@.BB13_63\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB13_63\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI13_15[0], r5, r6\n\tjump.gt\t@.BB13_63\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB13_59\n.BB13_63:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_f591, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_59:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[7], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI13_15[0], r5, r3\n\tjump.gt\t@.BB13_9\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_9\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB13_63\n\tadd\t@CPI13_5[0], r0, r2\n\tadd\tr4, r0, stack-[8]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_9:\n\tadd\t@CPI13_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_setApprovalForAll:\n.func_begin14:\n\tnop\tstack+=[3]\n\tand\t@CPI14_0[0], r1, r3\n\tand\t@CPI14_0[0], r2, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr3, r1, r1\n\tjump.eq\t@.BB14_1\n\tadd\tr3, r0, stack-[2]\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB14_3\n\tld\tr1, r1\n\tst.1\t0, r4\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_3\n\tret\n.BB14_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nabi_encode_stringliteral:\n.func_begin15:\n\tadd\t96, r1, r2\n\tadd\t@CPI15_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI15_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end15:\n\nabi_encode_stringliteral_f591:\n.func_begin16:\n\tadd\t96, r1, r2\n\tadd\t@CPI16_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI16_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t52, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end16:\n\nfun_getShareExit:\n.func_begin17:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI17_2[0], r5, r2\n\tjump.ge\t@.BB17_3\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI17_3[0], r2, r4\n\tjump.gt\t@.BB17_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB17_3\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[4]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[3], r0, r7\n\tsub.s!\t0, r7, r2\n\tadd\tstack-[4], r0, r8\n\tjump.eq\t@.BB17_10\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr8, r0, r3\n.BB17_12:\n\tld.1\t64, r4\n\tsub.s!\t@CPI17_5[0], r4, r5\n\tjump.gt\t@.BB17_3\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI17_6[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r7, r4\n\tjump.lt\t@.BB17_12\n.BB17_10:\n\tld.1\tr8, r2\n\tsub.s!\t0, r2, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB17_9\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r4\n.BB17_15:\n\tshl.s\t5, r4, r1\n\tadd\tr6, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\txor\tr1, r5, r1\n\tand!\t@CPI17_6[0], r1, r1\n\tadd\tr3, r0, r1\n\tjump.eq\t@.BB17_9\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r1\n\tadd\tr0, r0, r1\n\tjump.lt\t@.BB17_15\n.BB17_9:\n\tret\n.BB17_3:\n\tadd\t@CPI17_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_getShareEntity:\n.func_begin18:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[1]\n\tld.1\t64, r2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tjump.ge\t@.BB18_1\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI18_1[0], r2, r2\n\tjump.gt\t@.BB18_1\n\tadd\tstack-[5], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tadd\t32, r3, r2\n\tst.1\tr2, r0\n\tst.1\tr3, r0\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_4\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI18_4[0], r5, r2\n\tjump.gt\t@.BB18_1\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI18_4[0], r2, r4\n\tjump.gt\t@.BB18_1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB18_1\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[3]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t@CPI18_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_4\n\tadd\tstack-[2], r0, r8\n\tsub.s!\t0, r8, r2\n\tadd\tstack-[4], r0, r7\n\tadd\tstack-[3], r0, r9\n\tjump.eq\t@.BB18_12\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr9, r0, r3\n.BB18_14:\n\tld.1\t64, r4\n\tsub.s!\t@CPI18_1[0], r4, r5\n\tjump.gt\t@.BB18_1\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI18_6[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r8, r4\n\tjump.lt\t@.BB18_14\n.BB18_12:\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tadd\tstack-[5], r0, r6\n\tadd\tr6, r0, r1\n\tadd\tstack-[1], r0, r5\n\tjump.eq\t@.BB18_11\n\tadd\tr0, r0, r3\n.BB18_17:\n\tshl.s\t5, r3, r1\n\tadd\tr7, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\txor\tr4, r5, r4\n\tand!\t@CPI18_6[0], r4, r4\n\tjump.eq\t@.BB18_11\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r1\n\tadd\tr6, r0, r1\n\tjump.lt\t@.BB18_17\n.BB18_11:\n\tret\n.BB18_1:\n\tadd\t@CPI18_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_4:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_getShareArrayIndex:\n.func_begin19:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI19_2[0], r5, r2\n\tjump.ge\t@.BB19_3\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI19_3[0], r2, r4\n\tjump.gt\t@.BB19_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB19_3\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[4]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tadd\tstack-[3], r0, r7\n\tsub.s!\t0, r7, r2\n\tadd\tstack-[4], r0, r8\n\tjump.eq\t@.BB19_10\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr8, r0, r3\n.BB19_12:\n\tld.1\t64, r4\n\tsub.s!\t@CPI19_5[0], r4, r5\n\tjump.gt\t@.BB19_3\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI19_6[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r7, r4\n\tjump.lt\t@.BB19_12\n.BB19_10:\n\tld.1\tr8, r2\n\tsub.s!\t0, r2, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r4\n\tadd\tstack-[1], r0, r5\n\tjump.eq\t@.BB19_9\n\tadd\tr0, r0, r3\n.BB19_14:\n\tshl.s\t5, r3, r1\n\tadd\tr5, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\txor\tr1, r4, r1\n\tand!\t@CPI19_6[0], r1, r1\n\tadd\tr3, r0, r1\n\tjump.eq\t@.BB19_9\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r1\n\tadd\tr0, r0, r1\n\tjump.lt\t@.BB19_14\n.BB19_9:\n\tret\n.BB19_3:\n\tadd\t@CPI19_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_addVoteInfo:\n.func_begin20:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[2]\n\tand!\t@CPI20_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB20_1\n\tadd\tr3, r0, stack-[3]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI20_3[0], r2, r2\n\tjump.ge\t@.BB20_6\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[4], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tadd\tstack-[5], r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI20_4[0], r3, r2\n\tjump.gt\t@.BB20_6\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[3]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB20_10\n\tst.1\t0, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tadd\tstack-[3], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI20_8[0], r2, r2\n\tadd\tstack-[4], r0, r3\n\tld.1\tr3, r3\n\tand\t@CPI20_0[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[1], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI20_0[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB20_13\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r4\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tst.1\t0, r4\n\tst.1\t32, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI20_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI20_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI20_9[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB20_3\n\tret\n.BB20_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_6:\n\tadd\t@CPI20_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_1[0], r0, r2\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_10:\n\tadd\t@CPI20_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_13:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_1[0], r0, r2\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nfun_getVoteInfoExit:\n.func_begin21:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI21_2[0], r5, r2\n\tjump.ge\t@.BB21_3\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI21_3[0], r2, r4\n\tjump.gt\t@.BB21_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB21_3\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[4]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tadd\tstack-[3], r0, r7\n\tsub.s!\t0, r7, r2\n\tadd\tstack-[4], r0, r8\n\tjump.eq\t@.BB21_10\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr8, r0, r3\n.BB21_12:\n\tld.1\t64, r4\n\tsub.s!\t@CPI21_5[0], r4, r5\n\tjump.gt\t@.BB21_3\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI21_6[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r7, r4\n\tjump.lt\t@.BB21_12\n.BB21_10:\n\tld.1\tr8, r2\n\tsub.s!\t0, r2, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB21_9\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r4\n.BB21_15:\n\tshl.s\t5, r4, r1\n\tadd\tr6, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\txor\tr1, r5, r1\n\tand!\t@CPI21_6[0], r1, r1\n\tadd\tr3, r0, r1\n\tjump.eq\t@.BB21_9\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r1\n\tadd\tr0, r0, r1\n\tjump.lt\t@.BB21_15\n.BB21_9:\n\tret\n.BB21_3:\n\tadd\t@CPI21_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nfun_getNftEXit:\n.func_begin22:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[1], r0, r2\n\txor\tr1, r2, r1\n\tand!\t@CPI22_2[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tret\n.BB22_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nfun_calculatePercentage:\n.func_begin23:\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB23_1\n\tmul\t100, r1, r3, r4\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB23_5\n\tdiv\tr3, r1, r1, r4\n\tsub.s!\t100, r1, r1\n\tjump.ne\t@.BB23_4\n.BB23_5:\n\tdiv\tr3, r2, r1, r2\n\tret\n.BB23_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tsub.s!\t@CPI23_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_4:\n\tadd\t@CPI23_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\n__farcall:\n.func_begin24:\n.tmp0:\n\tfar_call\tr1, r2, @.BB24_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB24_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end24:\n\n__staticcall:\n.func_begin25:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB25_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB25_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end25:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI3_54:\nCPI10_2:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI17_0:\nCPI18_2:\nCPI19_0:\nCPI20_1:\nCPI21_0:\nCPI22_0:\nCPI23_5:\n\t.cell 4294967295\nCPI0_1:\nCPI3_69:\nCPI5_0:\nCPI9_2:\nCPI13_15:\nCPI17_3:\nCPI18_4:\nCPI19_3:\nCPI20_4:\nCPI21_3:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI3_52:\nCPI7_0:\nCPI9_0:\nCPI11_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI3_57:\n\t.cell 18446744073709551583\nCPI0_4:\nCPI3_70:\nCPI10_3:\nCPI14_3:\nCPI17_4:\nCPI18_5:\nCPI19_4:\nCPI20_7:\nCPI21_4:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\nCPI3_78:\nCPI4_1:\nCPI5_1:\nCPI9_4:\nCPI10_0:\nCPI13_16:\nCPI17_7:\nCPI18_7:\nCPI19_7:\nCPI20_5:\nCPI21_7:\nCPI23_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_7:\nCPI3_79:\nCPI4_2:\nCPI5_2:\nCPI9_5:\nCPI10_1:\nCPI13_17:\nCPI17_8:\nCPI18_8:\nCPI19_8:\nCPI20_6:\nCPI21_8:\nCPI23_1:\n\t.cell 2852213850513516153367582212096\nCPI1_1:\nCPI3_66:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_1:\nCPI3_61:\nCPI13_11:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI3_0:\n\t.cell 1691455524\nCPI3_1:\n\t.cell 3270634236\nCPI3_2:\n\t.cell 3917867460\nCPI3_3:\n\t.cell 4064428841\nCPI3_4:\n\t.cell 4064428842\nCPI3_5:\n\t.cell 4093572003\nCPI3_6:\n\t.cell 4113140426\nCPI3_7:\n\t.cell 3917867461\nCPI3_8:\n\t.cell 4064032283\nCPI3_9:\n\t.cell 3570672045\nCPI3_10:\n\t.cell 3570672046\nCPI3_11:\n\t.cell 3671964104\nCPI3_12:\n\t.cell 3732761000\nCPI3_13:\n\t.cell 3270634237\nCPI3_14:\n\t.cell 3504541104\nCPI3_15:\n\t.cell 2514000704\nCPI3_16:\n\t.cell 2720838756\nCPI3_17:\n\t.cell 2720838757\nCPI3_18:\n\t.cell 2865006163\nCPI3_19:\n\t.cell 3247308483\nCPI3_20:\n\t.cell 2514000705\nCPI3_21:\n\t.cell 2662832757\nCPI3_22:\n\t.cell 2292817665\nCPI3_23:\n\t.cell 2292817666\nCPI3_24:\n\t.cell 2374124147\nCPI3_25:\n\t.cell 1691455525\nCPI3_26:\n\t.cell 1797309524\nCPI3_27:\n\t.cell 357884365\nCPI3_28:\n\t.cell 1309832179\nCPI3_29:\n\t.cell 1475836061\nCPI3_30:\n\t.cell 1475836062\nCPI3_31:\n\t.cell 1567388192\nCPI3_32:\n\t.cell 1615922672\nCPI3_33:\n\t.cell 1309832180\nCPI3_34:\n\t.cell 1446870982\nCPI3_35:\n\t.cell 557048760\nCPI3_36:\n\t.cell 557048761\nCPI3_37:\n\t.cell 783467222\nCPI3_38:\n\t.cell 357884366\nCPI3_39:\n\t.cell 528474106\nCPI3_40:\n\t.cell 186062076\nCPI3_41:\n\t.cell 243872795\nCPI3_42:\n\t.cell 243872796\nCPI3_43:\n\t.cell 302407648\nCPI3_44:\n\t.cell 354855140\nCPI3_45:\n\t.cell 186062077\nCPI3_46:\n\t.cell 240681651\nCPI3_47:\n\t.cell 50221828\nCPI3_48:\n\t.cell 50221829\nCPI3_49:\n\t.cell 117300739\nCPI3_50:\n\t.cell 16635278\nCPI3_51:\n\t.cell 33540519\nCPI3_53:\nCPI9_1:\nCPI11_1:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI17_6:\nCPI18_6:\nCPI19_6:\nCPI20_0:\nCPI21_6:\nCPI22_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI3_55:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI17_1:\nCPI18_3:\nCPI19_1:\nCPI20_2:\nCPI21_1:\nCPI22_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI3_56:\nCPI13_8:\nCPI17_5:\nCPI18_1:\nCPI19_5:\nCPI21_5:\n\t.cell 18446744073709551551\nCPI3_58:\nCPI13_9:\n\t.cell -27213852188849977806687151827570343143753748252864080105821182213072209768606\nCPI3_59:\n\t.cell 79228162532711081667253501952\nCPI3_60:\n\t.cell -44877977326897262784168444354156441158329539312518651612887364914072161059015\nCPI3_62:\n\t.cell 49029036005169207073559450817993169151266089503930969673021265452335078834176\nCPI3_63:\nCPI12_5:\nCPI13_5:\nCPI14_7:\nCPI20_12:\nCPI23_4:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI3_64:\n\t.cell 7922816251426433759354395033600\nCPI3_65:\n\t.cell 14437333991389365756822315673377632757035417522267279379660800\nCPI3_67:\n\t.cell 2535301200456458802993406410752\nCPI3_68:\nCPI20_8:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI3_71:\nCPI23_2:\n\t.cell 44065976022850093057985188796332797985698083205179267427377633267036756901888\nCPI3_72:\nCPI23_3:\n\t.cell 30936487453379369903832728913327844415430449950750548383976987569384191893622\nCPI3_73:\nCPI12_6:\nCPI13_6:\nCPI14_8:\nCPI20_13:\nCPI23_6:\n\t.cell 10458117451882892562347801444352\nCPI3_74:\nCPI13_10:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI3_75:\nCPI13_12:\n\t.cell -6229140943195609470482029081774216773103763255593484717380184921042965233664\nCPI3_76:\nCPI13_13:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI3_77:\nCPI13_14:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI3_80:\n\t.cell 52652770317569481478358116418604467103768672514380261077855835748365880000512\nCPI3_81:\nCPI14_4:\nCPI20_9:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI3_82:\nCPI14_5:\nCPI20_10:\n\t.cell 14654998725967798007904516271620013939489654481799787699370567012326353928192\nCPI3_83:\nCPI14_6:\nCPI20_11:\n\t.cell 31354931754782020730668050510087396086141667671140429186647036696488985261427\nCPI3_84:\n\t.cell 5070602400912917605986812821504\nCPI3_85:\n\t.cell 49791959467252497455735130940088646708311117250336157395101362029847983277999\nCPI3_86:\n\t.cell 33573379646215597789982475826324625834727175556203253221976374124330619566075\nCPI3_87:\n\t.cell 44069385485545407596496181565728762836271594053011519598335883554003313754112\nCPI3_88:\n\t.cell 31354931754782020730666428216927046282608863186648363170254270039807376908652\nCPI3_89:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI3_90:\n\t.cell 31354931754782020730666428216927046719871661559673753862802484414801953186930\nCPI3_91:\n\t.cell 52196896137497975766665242269329108694384123638140188639495824659344745562112\nCPI3_92:\n\t.cell 52652770317566190896331980156269538727141584960148764224704973017207568228718\nCPI3_93:\n\t.cell 49029036005174567805854153917325210013817732639585069586691769957255022116864\nCPI3_94:\nCPI9_3:\nCPI17_2:\nCPI19_2:\nCPI21_2:\n\t.cell 18446744073709551616\nCPI3_95:\n\t.cell 14667325280004778357576260612488761262665225460782578448745097612516640423936\nCPI3_96:\n\t.cell 31354931754782020730666325679441278472750292860769655833395308424203898156136\nCPI3_97:\nCPI12_3:\nCPI20_14:\n\t.cell 44065893178349832907524482763744232223715160598588722440363827218073792806912\nCPI3_98:\nCPI12_4:\nCPI20_15:\n\t.cell 31354931754782020730666326055063969862292926624116462988355266888658445213814\nCPI3_99:\nCPI13_3:\n\t.cell 45885242132750740256497420374811629444014390564921468556415905440447347032064\nCPI3_100:\nCPI13_4:\n\t.cell 31354931754782020730666516506231079667030334057162060953243838907012487280494\nCPI3_101:\n\t.cell -30712243232662532708804285033642283983940691742684704713361190381700136304640\nCPI3_102:\nCPI13_18:\n\t.cell 51621007530836153441481177699373232841556542147537778994550402007698799329280\nCPI3_103:\nCPI13_19:\n\t.cell 31354931754782020730667096066218267071081219445577361327006864227958802900591\nCPI3_104:\nCPI13_20:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI3_105:\nCPI13_21:\n\t.cell 31354931754782020730668151127133586497509920762368500730803146263088741769572\nCPI3_106:\n\t.cell 49488416087105005985251196519109831937658208659842033616102300551039800049664\nCPI3_107:\n\t.cell 31354931754782020730667092324288700479831505799192396736967425796212700506144\nCPI3_108:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI3_109:\n\t.cell 31354931754782020730667477312066610751675534303280223998162701256317757187443\nCPI3_110:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI3_111:\n\t.cell 18446744073709551455\nCPI3_112:\n\t.cell 37714057306076988483118529490347679105585116642029194716945419020321082336612\nCPI3_113:\n\t.cell 50411904420896249798390057088552747694053213439589473829759729709664159399936\nCPI3_114:\n\t.cell 37714057306076988483118529433182395293628422681814405642689417129066110394478\nCPI3_115:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI3_116:\n\t.cell -5442482557903504250613150719145357533886713417884903185095341029921719619869\nCPI3_117:\n\t.cell 29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI3_118:\n\t.cell -17317791891425441398069102864720316188289832523668724183806499875177766060032\nCPI3_119:\n\t.cell 6574797573728907879914310858245660639267253899780774834407394597170562727936\nCPI3_120:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI4_0:\n\t.cell 18446744073709551584\nCPI13_7:\nCPI18_0:\nCPI20_3:\n\t.cell 18446744073709551552\nCPI15_0:\n\t.cell 45288627570839996578658988666401425582779806902220172383983149423179807588352\nCPI15_1:\n\t.cell 31354931754782020730663637404666106243223600773764328557126259806947099505765\nCPI16_0:\n\t.cell 37268791144319902338696353323952642643930904521079424936828708519168845021184\nCPI16_1:\n\t.cell 31354931754782020730668151127133586497509920762368493510471736461519699916085\n","bytecode":{"object":""},"methodIdentifiers":{"acquisition(address,address,uint256)":"d4d421ae","acquisitionWithUsdt(address,address,uint256,uint256)":"0e5882b3","addVoteInfo(address,address,uint256)":"c2f1eafd","approvalForAll(address,address)":"c18dfec3","approvedForAll(address,address)":"0b1714fd","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","calculatePercentage(uint256,uint256)":"2133e3b9","decreaseNumber(uint256,uint256)":"5d6c7220","deposit()":"d0e30db0","getBalance()":"12065fe0","getNftEXit(uint256,address)":"f23c361b","getVoteInfo(uint256)":"8d824273","getVoteInfoExit(uint256,address)":"563d7fc6","getVoteInfoResult(uint256)":"daddb9c8","initialNumbers(uint256)":"1526a8e4","initialOwners(uint256)":"64d19025","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,uint256,string,bytes)":"aac48653","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","name()":"06fdde03","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setTokenUri(uint256,string)":"57f7789e","setURI(string)":"02fe5305","setUsdtAddr(address)":"de7d69a8","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenIdCurrentOwner(uint256,uint256)":"88a99f02","transferFrom(address,address,uint256,uint256,bytes)":"605105f0","uri(uint256)":"0e89341c","usdtAddr()":"1554e1ce","voteInfo(uint256,uint256)":"9eb79a75","withdraw(address,uint256)":"f3fef3a3"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 1:\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\", 3:\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\", 4:\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 13:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 16:\"contracts/AiYueNFTExchange.sol\"\nobject \"AiYueNFTExchange_4976\" {\n    code {\n        {\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"AiYueNFTExchange_4976\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let memPtr := mload(64)\n            let newFreePtr := add(memPtr, _3)\n            if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            /// @src -1:-1:-1\n            let _4 := 0\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            mstore(memPtr, /** @src -1:-1:-1 */ _4)\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let _5 := sload(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let length := /** @src -1:-1:-1 */ _4\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let deleteStart := keccak256(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                let _8 := add(deleteStart, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src -1:-1:-1 */ _4)\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _9 := sload(/** @src 16:1179:1191  \"name = _name\" */ 0x08)\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let length_1 := /** @src -1:-1:-1 */ _4\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            length_1 := shr(_6, _9)\n            let outOfPlaceEncoding_1 := and(_9, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:1179:1191  \"name = _name\" */ 0x08)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                let deleteStart_1 := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart_1 := data }\n                let _10 := add(data, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _10) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _4\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:1179:1191  \"name = _name\" */ 0x08)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ _4\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 16:1179:1191  \"name = _name\" */ 0x08, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _4\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 16:1179:1191  \"name = _name\" */ 0x08, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _11 := sload(/** @src 16:1202:1218  \"symbol = _symbol\" */ 0x09)\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let length_2 := /** @src -1:-1:-1 */ _4\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            length_2 := shr(_6, _11)\n            let outOfPlaceEncoding_2 := and(_11, _6)\n            if iszero(outOfPlaceEncoding_2)\n            {\n                length_2 := and(length_2, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_2, lt(length_2, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            if gt(length_2, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:1202:1218  \"symbol = _symbol\" */ 0x09)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                let deleteStart_2 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_2 := data_1 }\n                let _12 := add(data_1, shr(5, add(length_2, _7)))\n                let start_2 := deleteStart_2\n                for { } lt(start_2, _12) { start_2 := add(start_2, _6) }\n                {\n                    sstore(start_2, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _4\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 16:1202:1218  \"symbol = _symbol\" */ 0x09)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ _4\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 16:1202:1218  \"symbol = _symbol\" */ 0x09, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _4\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 16:1202:1218  \"symbol = _symbol\" */ 0x09, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _13 := mload(64)\n            let _14 := datasize(\"AiYueNFTExchange_4976_deployed\")\n            codecopy(_13, dataoffset(\"AiYueNFTExchange_4976_deployed\"), _14)\n            return(_13, _14)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 3:\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\", 7:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 8:\"@openzeppelin/contracts/utils/Address.sol\", 9:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 16:\"contracts/AiYueNFTExchange.sol\"\n    object \"AiYueNFTExchange_4976_deployed\" {\n        code {\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x00fdd58e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0 := abi_decode_address_24635()\n                        let ret := fun_balanceOf(value0, calldataload(36))\n                        let memPos := mload(_1)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _4 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _4)) { revert(_3, _3) }\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr := /** @src 0:1373:1414  \"interfaceId == type(IERC1155).interfaceId\" */ eq(_4, /** @src 0:1388:1414  \"type(IERC1155).interfaceId\" */ shl(225, 0x6cdb3d13))\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 0:1430:1482  \"interfaceId == type(IERC1155MetadataURI).interfaceId\" */ eq(_4, /** @src 0:1445:1482  \"type(IERC1155MetadataURI).interfaceId\" */ shl(226, 0x03a24d07))\n                        }\n                        /// @src 0:1373:1534  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 12:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_4, /** @src 12:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, iszero(iszero(expr_1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x02fe5305 {\n                        if callvalue() { revert(_3, _3) }\n                        let _5 := 32\n                        if slt(add(calldatasize(), not(3)), _5) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _6 := 0xffffffffffffffff\n                        if gt(offset, _6) { revert(_3, _3) }\n                        let value0_1 := abi_decode_string(add(_2, offset), calldatasize())\n                        let newLen := mload(value0_1)\n                        if gt(newLen, _6)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        let _7 := extract_byte_array_length(sload(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        if gt(_7, 31)\n                        {\n                            mstore(_3, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _8 := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                            let deleteStart := add(_8, shr(5, add(newLen, 31)))\n                            if lt(newLen, _5) { deleteStart := _8 }\n                            let _9 := add(_8, shr(5, add(_7, 31)))\n                            let start := deleteStart\n                            for { } lt(start, _9) { start := add(start, 1) }\n                            { sstore(start, _3) }\n                        }\n                        let srcOffset := _3\n                        srcOffset := _5\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(_3, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let dstPtr := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                            let i := _3\n                            for { } lt(i, loopEnd) { i := add(i, _5) }\n                            {\n                                sstore(dstPtr, mload(add(value0_1, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _5)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(value0_1, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_1 := _3\n                            if newLen\n                            {\n                                value_1 := mload(add(value0_1, srcOffset))\n                            }\n                            sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr := mload(_1)\n                        let ret_1 := _3\n                        let slotValue := sload(/** @src 16:1048:1066  \"string public name\" */ 8)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        let _10 := 0x20\n                        let _11 := 1\n                        switch and(slotValue, _11)\n                        case 0 {\n                            mstore(add(memPtr, _10), and(slotValue, not(255)))\n                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length)))), _10)\n                        }\n                        case 1 {\n                            mstore(_3, /** @src 16:1048:1066  \"string public name\" */ 8)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let dataPos := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                            let i_1 := _3\n                            for { } lt(i_1, length) { i_1 := add(i_1, _10) }\n                            {\n                                mstore(add(add(memPtr, i_1), _10), sload(dataPos))\n                                dataPos := add(dataPos, _11)\n                            }\n                            ret_1 := add(add(memPtr, i_1), _10)\n                        }\n                        finalize_allocation(memPtr, sub(ret_1, memPtr))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _10)\n                        return(memPos_2, sub(abi_encode_string(memPtr, add(memPos_2, _10)), memPos_2))\n                    }\n                    case 0x0b1714fd {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address_24635()\n                        let value1 := abi_decode_address()\n                        let _12 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_2, _12))\n                        mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _13 := keccak256(_3, _1)\n                        mstore(_3, and(value1, _12))\n                        mstore(32, _13)\n                        let value_2 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, iszero(iszero(value_2)))\n                        return(memPos_3, 32)\n                    }\n                    case 0x0e5882b3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let value0_3 := abi_decode_address_24635()\n                        let value1_1 := abi_decode_address()\n                        /// @src 16:9475:9477  \"id\"\n                        fun_addVoteInfo(value0_3, value1_1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ calldataload(68))\n                        let _14 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 16:9511:9519  \"usdtAddr\" */ 0x0a), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _14)\n                        /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                        let expr_mpos := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        let _15 := 32\n                        /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                        let _16 := add(expr_mpos, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _15)\n                        /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                        mstore(_16, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x23b872dd))\n                        mstore(/** @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ add(expr_mpos, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), /** @src 16:9554:9564  \"msg.sender\" */ caller())\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(add(/** @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ expr_mpos, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), and(value1_1, _14))\n                        mstore(add(/** @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ expr_mpos, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), calldataload(100))\n                        /// @src 7:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                        mstore(expr_mpos, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100)\n                        let newFreePtr := add(expr_mpos, 160)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        mstore(_1, newFreePtr)\n                        finalize_allocation_24650(newFreePtr)\n                        mstore(newFreePtr, _15)\n                        mstore(add(expr_mpos, 192), \"SafeERC20: low-level call failed\")\n                        /// @src 8:5487:5518  \"target.call{value: value}(data)\"\n                        let expr_component := call(gas(), cleaned, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 8:5487:5518  \"target.call{value: value}(data)\" */ _16, mload(expr_mpos), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _3)\n                        /// @src 8:5487:5518  \"target.call{value: value}(data)\"\n                        let data := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _17 := returndatasize()\n                            let _18 := array_allocation_size_string(_17)\n                            let memPtr_1 := mload(_1)\n                            finalize_allocation(memPtr_1, _18)\n                            mstore(memPtr_1, _17)\n                            data := memPtr_1\n                            returndatacopy(add(memPtr_1, _15), _3, returndatasize())\n                        }\n                        /// @src 8:5528:5604  \"return verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                        let var_mpos := /** @src 8:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ fun_verifyCallResultFromTarget(cleaned, expr_component, /** @src 8:5487:5518  \"target.call{value: value}(data)\" */ data, /** @src 8:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ newFreePtr)\n                        /// @src 7:5705:5722  \"returndata.length\"\n                        let expr_2 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 7:5705:5722  \"returndata.length\" */ var_mpos)\n                        /// @src 7:5705:5761  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                        let expr_3 := /** @src 7:5705:5727  \"returndata.length == 0\" */ iszero(expr_2)\n                        /// @src 7:5705:5761  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                        if iszero(expr_3)\n                        {\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            if slt(sub(/** @src 7:5731:5761  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr_2), var_mpos), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _15) { revert(_3, _3) }\n                            let value_3 := mload(/** @src 7:5731:5761  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _15))\n                            if iszero(eq(value_3, iszero(iszero(value_3)))) { revert(_3, _3) }\n                            /// @src 7:5705:5761  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                            expr_3 := value_3\n                        }\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        if iszero(expr_3)\n                        {\n                            let memPtr_2 := mload(_1)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _2), _15)\n                            mstore(add(memPtr_2, 36), 42)\n                            mstore(add(memPtr_2, 68), \"SafeERC20: ERC20 operation did n\")\n                            mstore(add(memPtr_2, 100), \"ot succeed\")\n                            revert(memPtr_2, 132)\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x0e89341c {\n                        if callvalue() { revert(_3, _3) }\n                        let _19 := 32\n                        if slt(add(calldatasize(), not(3)), _19) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(_19, /** @src 16:1412:1417  \"_uris\" */ 0x07)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _20 := keccak256(_3, _1)\n                        let memPtr_3 := mload(_1)\n                        let ret_2 := _3\n                        let slotValue_1 := sload(_20)\n                        let length_1 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_3, length_1)\n                        let _21 := 1\n                        switch and(slotValue_1, _21)\n                        case 0 {\n                            mstore(add(memPtr_3, _19), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_3, shl(5, iszero(iszero(length_1)))), _19)\n                        }\n                        case 1 {\n                            mstore(_3, _20)\n                            let dataPos_1 := keccak256(_3, _19)\n                            let i_2 := _3\n                            for { } lt(i_2, length_1) { i_2 := add(i_2, _19) }\n                            {\n                                mstore(add(add(memPtr_3, i_2), _19), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _21)\n                            }\n                            ret_2 := add(add(memPtr_3, i_2), _19)\n                        }\n                        finalize_allocation(memPtr_3, sub(ret_2, memPtr_3))\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, _19)\n                        return(memPos_4, sub(abi_encode_string(memPtr_3, add(memPos_4, _19)), memPos_4))\n                    }\n                    case 0x12065fe0 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let ret_3 := /** @src 16:9178:9199  \"address(this).balance\" */ selfbalance()\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_5 := mload(_1)\n                        mstore(memPos_5, ret_3)\n                        return(memPos_5, 32)\n                    }\n                    case 0x1526a8e4 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, _2)\n                        let dataSlot := keccak256(_3, _1)\n                        let cleaned_1 := and(sload(/** @src 16:822:877  \"mapping(uint256 => InitialNumber) public initialNumbers\" */ dataSlot), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let _22 := sload(/** @src 16:822:877  \"mapping(uint256 => InitialNumber) public initialNumbers\" */ add(dataSlot, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_address_uint256(memPos_6, cleaned_1, _22), memPos_6))\n                    }\n                    case 0x1554e1ce {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_4 := and(sload(/** @src 16:9215:9238  \"address public usdtAddr\" */ 10), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_7 := mload(_1)\n                        mstore(memPos_7, value_4)\n                        return(memPos_7, 32)\n                    }\n                    case 0x1f7fdffa {\n                        if callvalue() { revert(_3, _3) }\n                        let _23 := not(3)\n                        if slt(add(calldatasize(), _23), 128) { revert(_3, _3) }\n                        let value0_4 := abi_decode_address_24635()\n                        let offset_1 := calldataload(36)\n                        let _24 := 0xffffffffffffffff\n                        if gt(offset_1, _24) { revert(_3, _3) }\n                        let value1_2 := abi_decode_array_uint256_dyn(add(_2, offset_1), calldatasize())\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, _24) { revert(_3, _3) }\n                        let value2 := abi_decode_array_uint256_dyn(add(_2, offset_2), calldatasize())\n                        let offset_3 := calldataload(100)\n                        if gt(offset_3, _24) { revert(_3, _3) }\n                        let value3 := abi_decode_string(add(_2, offset_3), calldatasize())\n                        let _25 := and(/** @src 0:9841:9857  \"to != address(0)\" */ value0_4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:9833:9895  \"require(to != address(0), \\\"ERC1155: mint to the zero address\\\")\"\n                        require_helper_stringliteral_ebf0(/** @src 0:9841:9857  \"to != address(0)\" */ iszero(iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _25)))\n                        /// @src 0:9913:9923  \"ids.length\"\n                        let expr_4 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:9913:9923  \"ids.length\" */ value1_2)\n                        /// @src 0:9905:9986  \"require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\")\"\n                        require_helper_stringliteral_e909(/** @src 0:9913:9941  \"ids.length == amounts.length\" */ eq(expr_4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:9927:9941  \"amounts.length\" */ value2)))\n                        /// @src 0:10121:10134  \"uint256 i = 0\"\n                        let var_i := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:10116:10217  \"for (uint256 i = 0; i < ids.length; i++) {...\"\n                        for { }\n                        /** @src 0:10121:10134  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:10152:10155  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 0:10136:10150  \"i < ids.length\"\n                            if iszero(lt(var_i, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:10140:10150  \"ids.length\" */ value1_2)))\n                            /// @src 0:10136:10150  \"i < ids.length\"\n                            { break }\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _26 := mload(/** @src 0:10196:10206  \"amounts[i]\" */ memory_array_index_access_address_dyn(value2, var_i))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, mload(/** @src 0:10181:10187  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_2, var_i)))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _27 := 32\n                            mstore(_27, _3)\n                            let _28 := keccak256(_3, _1)\n                            mstore(_3, _25)\n                            mstore(_27, _28)\n                            let dataSlot_1 := keccak256(_3, _1)\n                            sstore(dataSlot_1, /** @src 0:10171:10206  \"_balances[ids[i]][to] += amounts[i]\" */ checked_add_uint256(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:10171:10206  \"_balances[ids[i]][to] += amounts[i]\" */ dataSlot_1), _26))\n                        }\n                        /// @src 0:10232:10285  \"TransferBatch(operator, address(0), to, ids, amounts)\"\n                        let _29 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        /// @src 0:10232:10285  \"TransferBatch(operator, address(0), to, ids, amounts)\"\n                        log4(_29, sub(abi_encode_array_uint256_dyn_array_uint256_dyn(_29, value1_2, value2), _29), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:10232:10285  \"TransferBatch(operator, address(0), to, ids, amounts)\" */ _25)\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        if /** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(value0_4)))\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let _30 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                            let _31 := shl(224, 0xbc197c81)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            mstore(_30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _31)\n                            mstore(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ add(_30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _3)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), 160)\n                            let tail := abi_encode_array_uint256_dyn(value1_2, add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164))\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), add(sub(tail, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _23))\n                            let tail_1 := abi_encode_array_uint256_dyn(value2, tail)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), add(sub(tail_1, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _23))\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let trySuccessCondition := call(gas(), _25, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(value3, tail_1), /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _30), _30, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let expr_5 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            if trySuccessCondition\n                            {\n                                let _32 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32\n                                /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                                if gt(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _32, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ returndatasize()) { _32 := returndatasize() }\n                                finalize_allocation(_30, _32)\n                                expr_5 := abi_decode_bytes4_fromMemory(_30, add(_30, _32))\n                            }\n                            /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                if /** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ iszero(eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ expr_5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _31))\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                {\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _33 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_33, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_33, sub(abi_encode_stringliteral(add(_33, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _33))\n                                }\n                            }\n                            default /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            {\n                                let _34 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:16709:16790  \"catch Error(string memory reason) {...\"\n                                    let _35 := try_decode_error_message()\n                                    if _35\n                                    {\n                                        _34 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        let _36 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        mstore(_36, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                        mstore(/** @src 0:16761:16775  \"revert(reason)\" */ add(_36, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), 32)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        revert(_36, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_35, add(/** @src 0:16761:16775  \"revert(reason)\" */ _36, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:16761:16775  \"revert(reason)\" */ _36))\n                                    }\n                                }\n                                /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                                if _34\n                                {\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _37 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_37, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_37, sub(abi_encode_stringliteral_f591(add(_37, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _37))\n                                }\n                            }\n                        }\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x2133e3b9 {\n                        if callvalue() { revert(_3, _3) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_4 := fun_calculatePercentage(param, param_1)\n                        let memPos_8 := mload(_1)\n                        mstore(memPos_8, ret_4)\n                        return(memPos_8, 32)\n                    }\n                    case 0x2eb2c2d6 {\n                        if callvalue() { revert(_3, _3) }\n                        let _38 := not(3)\n                        if slt(add(calldatasize(), _38), 160) { revert(_3, _3) }\n                        let value0_5 := abi_decode_address_24635()\n                        let value1_3 := abi_decode_address()\n                        let offset_4 := calldataload(68)\n                        let _39 := 0xffffffffffffffff\n                        if gt(offset_4, _39) { revert(_3, _3) }\n                        let value2_1 := abi_decode_array_uint256_dyn(add(_2, offset_4), calldatasize())\n                        let offset_5 := calldataload(100)\n                        if gt(offset_5, _39) { revert(_3, _3) }\n                        let value3_1 := abi_decode_array_uint256_dyn(add(_2, offset_5), calldatasize())\n                        let offset_6 := calldataload(132)\n                        if gt(offset_6, _39) { revert(_3, _3) }\n                        let value4 := abi_decode_string(add(_2, offset_6), calldatasize())\n                        let _40 := sub(shl(160, 1), 1)\n                        let _41 := and(/** @src 0:4267:4287  \"from == _msgSender()\" */ value0_5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _40)\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        let expr_6 := /** @src 0:4267:4287  \"from == _msgSender()\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _41, /** @src 9:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        if iszero(expr_6)\n                        {\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _41)\n                            mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _42 := keccak256(_3, _1)\n                            mstore(_3, /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(32, _42)\n                            /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                            expr_6 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 0:4246:4399  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_6)\n                        /// @src 0:6417:6427  \"ids.length\"\n                        let expr_7 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:6417:6427  \"ids.length\" */ value2_1)\n                        /// @src 0:6409:6490  \"require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\")\"\n                        require_helper_stringliteral_e909(/** @src 0:6417:6445  \"ids.length == amounts.length\" */ eq(expr_7, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:6431:6445  \"amounts.length\" */ value3_1)))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _43 := and(/** @src 0:6508:6524  \"to != address(0)\" */ value1_3, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _40)\n                        /// @src 0:6500:6566  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                        require_helper_stringliteral_6faf(/** @src 0:6508:6524  \"to != address(0)\" */ iszero(iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _43)))\n                        /// @src 0:6695:6708  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:6690:7101  \"for (uint256 i = 0; i < ids.length; ++i) {...\"\n                        for { }\n                        /** @src 0:6695:6708  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:6726:6729  \"++i\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            if iszero(lt(var_i_1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:6714:6724  \"ids.length\" */ value2_1)))\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            { break }\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _44 := mload(/** @src 0:6758:6764  \"ids[i]\" */ memory_array_index_access_address_dyn(value2_1, var_i_1))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _45 := mload(/** @src 0:6795:6805  \"amounts[i]\" */ memory_array_index_access_address_dyn(value3_1, var_i_1))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _44)\n                            let _46 := 32\n                            mstore(_46, _3)\n                            let _47 := keccak256(_3, _1)\n                            mstore(_3, _41)\n                            mstore(_46, _47)\n                            let _48 := sload(keccak256(_3, _1))\n                            /// @src 0:6875:6951  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                            require_helper_stringliteral_8ac7(/** @src 0:6883:6904  \"fromBalance >= amount\" */ iszero(lt(_48, _45)))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _44)\n                            mstore(_46, _3)\n                            let _49 := keccak256(_3, _1)\n                            mstore(_3, _41)\n                            mstore(_46, _49)\n                            sstore(keccak256(_3, _1), sub(/** @src 0:7015:7035  \"fromBalance - amount\" */ _48, _45))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _44)\n                            mstore(_46, _3)\n                            let _50 := keccak256(_3, _1)\n                            mstore(_3, _43)\n                            mstore(_46, _50)\n                            let dataSlot_2 := keccak256(_3, _1)\n                            sstore(dataSlot_2, /** @src 0:7063:7090  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:7063:7090  \"_balances[id][to] += amount\" */ dataSlot_2), _45))\n                        }\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        let _51 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        log4(_51, sub(abi_encode_array_uint256_dyn_array_uint256_dyn(_51, value2_1, value3_1), _51), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\" */ _41, _43)\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        if /** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(value1_3)))\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let _52 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                            let _53 := shl(224, 0xbc197c81)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            mstore(_52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _53)\n                            mstore(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ add(_52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _41)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), 160)\n                            let tail_2 := abi_encode_array_uint256_dyn(value2_1, add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164))\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), add(sub(tail_2, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _38))\n                            let tail_3 := abi_encode_array_uint256_dyn(value3_1, tail_2)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), add(sub(tail_3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _38))\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let trySuccessCondition_1 := call(gas(), _43, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(value4, tail_3), /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _52), _52, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let expr_8 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            if trySuccessCondition_1\n                            {\n                                let _54 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32\n                                /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                                if gt(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _54, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ returndatasize()) { _54 := returndatasize() }\n                                finalize_allocation(_52, _54)\n                                expr_8 := abi_decode_bytes4_fromMemory(_52, add(_52, _54))\n                            }\n                            /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                if /** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ iszero(eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ expr_8, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _53))\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                {\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _55 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_55, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_55, sub(abi_encode_stringliteral(add(_55, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _55))\n                                }\n                            }\n                            default /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            {\n                                let _56 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:16709:16790  \"catch Error(string memory reason) {...\"\n                                    let _57 := try_decode_error_message()\n                                    if _57\n                                    {\n                                        _56 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        let _58 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        mstore(_58, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                        mstore(/** @src 0:16761:16775  \"revert(reason)\" */ add(_58, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), 32)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        revert(_58, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_57, add(/** @src 0:16761:16775  \"revert(reason)\" */ _58, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:16761:16775  \"revert(reason)\" */ _58))\n                                    }\n                                }\n                                /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                                if _56\n                                {\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _59 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_59, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_59, sub(abi_encode_stringliteral_f591(add(_59, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _59))\n                                }\n                            }\n                        }\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4e1273f4 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset_7 := calldataload(_2)\n                        let _60 := 0xffffffffffffffff\n                        if gt(offset_7, _60) { revert(_3, _3) }\n                        if iszero(slt(add(offset_7, 35), calldatasize())) { revert(_3, _3) }\n                        let _61 := calldataload(add(_2, offset_7))\n                        let _62 := array_allocation_size_array_uint256_dyn(_61)\n                        let memPtr_4 := mload(_1)\n                        finalize_allocation(memPtr_4, _62)\n                        let dst := memPtr_4\n                        mstore(memPtr_4, _61)\n                        let _63 := 0x20\n                        dst := add(memPtr_4, _63)\n                        let srcEnd := add(add(offset_7, shl(5, _61)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset_7, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _63) }\n                        {\n                            let value_5 := calldataload(src)\n                            if iszero(eq(value_5, and(value_5, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                            mstore(dst, value_5)\n                            dst := add(dst, _63)\n                        }\n                        let offset_8 := calldataload(36)\n                        if gt(offset_8, _60) { revert(_3, _3) }\n                        let value1_4 := abi_decode_array_uint256_dyn(add(_2, offset_8), calldatasize())\n                        /// @src 0:2738:2753  \"accounts.length\"\n                        let expr_9 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:2738:2753  \"accounts.length\" */ memPtr_4)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        if iszero(/** @src 0:2738:2767  \"accounts.length == ids.length\" */ eq(expr_9, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:2757:2767  \"ids.length\" */ value1_4)))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        {\n                            let memPtr_5 := mload(_1)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _2), _63)\n                            mstore(add(memPtr_5, 36), 41)\n                            mstore(add(memPtr_5, 68), \"ERC1155: accounts and ids length\")\n                            mstore(add(memPtr_5, 100), \" mismatch\")\n                            revert(memPtr_5, 132)\n                        }\n                        let _64 := mload(/** @src 0:2871:2886  \"accounts.length\" */ memPtr_4)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _65 := array_allocation_size_array_uint256_dyn(_64)\n                        let memPtr_6 := mload(_1)\n                        finalize_allocation(memPtr_6, _65)\n                        mstore(memPtr_6, _64)\n                        calldatacopy(add(memPtr_6, _63), calldatasize(), add(array_allocation_size_array_uint256_dyn(_64), not(31)))\n                        /// @src 0:2903:2916  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:2898:3018  \"for (uint256 i = 0; i < accounts.length; ++i) {...\"\n                        for { }\n                        /** @src 0:2903:2916  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:2939:2942  \"++i\"\n                            var_i_2 := increment_uint256(var_i_2)\n                        }\n                        {\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            if iszero(lt(var_i_2, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:2922:2937  \"accounts.length\" */ memPtr_4)))\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            { break }\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let cleaned_2 := and(mload(/** @src 0:2987:2998  \"accounts[i]\" */ memory_array_index_access_address_dyn(memPtr_4, var_i_2)), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                            mstore(/** @src 0:2958:3007  \"batchBalances[i] = balanceOf(accounts[i], ids[i])\" */ memory_array_index_access_address_dyn(memPtr_6, var_i_2), /** @src 0:2977:3007  \"balanceOf(accounts[i], ids[i])\" */ fun_balanceOf(cleaned_2, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:3000:3006  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_4, var_i_2))))\n                        }\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_9 := mload(_1)\n                        mstore(memPos_9, _63)\n                        return(memPos_9, sub(abi_encode_array_uint256_dyn(memPtr_6, add(memPos_9, _63)), memPos_9))\n                    }\n                    case 0x563d7fc6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let ret_5 := fun_getVoteInfoExit(calldataload(_2), abi_decode_address())\n                        let memPos_10 := mload(_1)\n                        mstore(memPos_10, iszero(iszero(ret_5)))\n                        return(memPos_10, 32)\n                    }\n                    case 0x57f7789e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset_9 := calldataload(36)\n                        let _66 := 0xffffffffffffffff\n                        if gt(offset_9, _66) { revert(_3, _3) }\n                        let value1_5 := abi_decode_string(add(_2, offset_9), calldatasize())\n                        mstore(_3, calldataload(_2))\n                        let _67 := 32\n                        mstore(_67, /** @src 16:1518:1523  \"_uris\" */ 0x07)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_3 := keccak256(_3, _1)\n                        let newLen_1 := mload(value1_5)\n                        if gt(newLen_1, _66)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        let _68 := extract_byte_array_length(sload(dataSlot_3))\n                        if gt(_68, 31)\n                        {\n                            mstore(_3, dataSlot_3)\n                            let data_1 := keccak256(_3, _67)\n                            let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, _67) { deleteStart_1 := data_1 }\n                            let _69 := add(data_1, shr(5, add(_68, 31)))\n                            let start_1 := deleteStart_1\n                            for { } lt(start_1, _69) { start_1 := add(start_1, 1) }\n                            { sstore(start_1, _3) }\n                        }\n                        let srcOffset_1 := _3\n                        srcOffset_1 := _67\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(_3, dataSlot_3)\n                            let dstPtr_1 := keccak256(_3, _67)\n                            let i_3 := _3\n                            for { } lt(i_3, loopEnd_1) { i_3 := add(i_3, _67) }\n                            {\n                                sstore(dstPtr_1, mload(add(value1_5, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, _67)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(value1_5, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(dataSlot_3, add(shl(1, newLen_1), 1))\n                        }\n                        default {\n                            let value_6 := _3\n                            if newLen_1\n                            {\n                                value_6 := mload(add(value1_5, srcOffset_1))\n                            }\n                            sstore(dataSlot_3, or(and(value_6, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x5d6c7220 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_2)\n                        mstore(0x20, _2)\n                        if /** @src 16:3317:3360  \"initialNumbers[tokenId].number >= decNumber\" */ lt(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 16:3317:3347  \"initialNumbers[tokenId].number\" */ add(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 16:3317:3347  \"initialNumbers[tokenId].number\" */ 1)), /** @src 16:3317:3360  \"initialNumbers[tokenId].number >= decNumber\" */ param_3)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        {\n                            let memPtr_7 := mload(_1)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, _2), 0x20)\n                            mstore(add(memPtr_7, 36), 23)\n                            mstore(add(memPtr_7, 68), \"less number to decrease\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(_3, param_2)\n                        mstore(0x20, _2)\n                        /// @src 16:3432:3474  \"initialNumbers[tokenId].number - decNumber\"\n                        let _70 := checked_sub_uint256(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 16:3432:3462  \"initialNumbers[tokenId].number\" */ add(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 16:3317:3347  \"initialNumbers[tokenId].number\" */ 1)), /** @src 16:3432:3474  \"initialNumbers[tokenId].number - decNumber\" */ param_3)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, param_2)\n                        mstore(0x20, _2)\n                        sstore(/** @src 16:3399:3429  \"initialNumbers[tokenId].number\" */ add(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 16:3317:3347  \"initialNumbers[tokenId].number\" */ 1), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _70)\n                        return(_3, _3)\n                    }\n                    case 0x605105f0 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_4, param_5, param_6, param_7, param_8 := abi_decode_addresst_addresst_uint256t_uint256t_bytes(calldatasize())\n                        /// @src 16:2187:2191  \"true\"\n                        let _71 := 0x01\n                        /// @src 16:2177:2213  \"result == true && msg.sender == from\"\n                        let expr_10 := /** @src 16:2177:2191  \"result == true\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ iszero(iszero(/** @src 16:2137:2162  \"getVoteInfoExit(id, from)\" */ fun_getVoteInfoExit(param_6, param_4))), /** @src 16:2187:2191  \"true\" */ _71)\n                        /// @src 16:2177:2213  \"result == true && msg.sender == from\"\n                        let expr_11 := expr_10\n                        if expr_10\n                        {\n                            expr_10 := /** @src 16:2195:2213  \"msg.sender == from\" */ eq(/** @src 16:2195:2205  \"msg.sender\" */ caller(), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 16:2195:2213  \"msg.sender == from\" */ param_4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1)))\n                        }\n                        /// @src 16:2173:2288  \"if (result == true && msg.sender == from) {...\"\n                        if expr_10\n                        {\n                            /// @src 16:2230:2276  \"revert(\\\"this address in vote cannot transfer\\\")\"\n                            let _72 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                            /// @src 16:2230:2276  \"revert(\\\"this address in vote cannot transfer\\\")\"\n                            mstore(_72, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                            mstore(/** @src 16:2230:2276  \"revert(\\\"this address in vote cannot transfer\\\")\" */ add(_72, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), 32)\n                            mstore(add(/** @src 16:2230:2276  \"revert(\\\"this address in vote cannot transfer\\\")\" */ _72, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), 36)\n                            mstore(add(/** @src 16:2230:2276  \"revert(\\\"this address in vote cannot transfer\\\")\" */ _72, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), \"this address in vote cannot tran\")\n                            mstore(add(/** @src 16:2230:2276  \"revert(\\\"this address in vote cannot transfer\\\")\" */ _72, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), \"sfer\")\n                            /// @src 16:2230:2276  \"revert(\\\"this address in vote cannot transfer\\\")\"\n                            revert(_72, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132)\n                        }\n                        /// @src 16:2337:2341  \"data\"\n                        fun_safeTransferFrom(param_4, param_5, param_6, param_7, param_8)\n                        /// @src 16:3898:4438  \"if (getShareExit(_tokenId, _to)) {...\"\n                        switch /** @src 16:3902:3929  \"getShareExit(_tokenId, _to)\" */ fun_getShareExit(param_6, param_5)\n                        case /** @src 16:3898:4438  \"if (getShareExit(_tokenId, _to)) {...\" */ 0 {\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let memPtr_8 := mload(_1)\n                            finalize_allocation_24650(memPtr_8)\n                            mstore(memPtr_8, and(param_5, sub(shl(160, 1), 1)))\n                            mstore(/** @src 16:4265:4363  \"CurrentOwner({...\" */ add(memPtr_8, 32), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ param_7)\n                            mstore(_3, param_6)\n                            mstore(/** @src 16:4265:4363  \"CurrentOwner({...\" */ 32, /** @src 16:4378:4397  \"tokenIdCurrentOwner\" */ 0x05)\n                            /// @src 16:4378:4426  \"tokenIdCurrentOwner[_tokenId].push(currentOwner)\"\n                            array_push_from_struct_CurrentOwner_to_array_struct_CurrentOwner_storage_dyn_ptr(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 16:4378:4426  \"tokenIdCurrentOwner[_tokenId].push(currentOwner)\" */ memPtr_8)\n                        }\n                        default /// @src 16:3898:4438  \"if (getShareExit(_tokenId, _to)) {...\"\n                        {\n                            /// @src 16:3981:4010  \"getShareEntity(_tokenId, _to)\"\n                            let expr_mpos_1 := fun_getShareEntity(param_6, param_5)\n                            /// @src 16:4025:4044  \"currentOwner.amount\"\n                            let _73 := add(expr_mpos_1, 32)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_73, /** @src 16:4025:4055  \"currentOwner.amount += _amount\" */ checked_add_uint256(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:4025:4055  \"currentOwner.amount += _amount\" */ _73), param_7))\n                            /// @src 16:4093:4126  \"getShareArrayIndex(_tokenId, _to)\"\n                            let _74 := fun_getShareArrayIndex(param_6, param_5)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, param_6)\n                            mstore(/** @src 16:4025:4044  \"currentOwner.amount\" */ 32, /** @src 16:4141:4160  \"tokenIdCurrentOwner\" */ 0x05)\n                            /// @src 16:4141:4182  \"tokenIdCurrentOwner[_tokenId][shareIndex]\"\n                            let _75, _76 := storage_array_index_access_struct_CurrentOwner__dyn(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 16:4093:4126  \"getShareArrayIndex(_tokenId, _to)\" */ _74)\n                            /// @src 16:4141:4197  \"tokenIdCurrentOwner[_tokenId][shareIndex] = currentOwner\"\n                            update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(_75, _76, expr_mpos_1)\n                        }\n                        /// @src 16:4480:4511  \"getShareEntity(_tokenId, _from)\"\n                        let expr_mpos_2 := fun_getShareEntity(param_6, param_4)\n                        /// @src 16:4539:4553  \"current.amount\"\n                        let _77 := 32\n                        let _78 := add(expr_mpos_2, _77)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_78, /** @src 16:4539:4563  \"current.amount - _amount\" */ checked_sub_uint256(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:4539:4553  \"current.amount\" */ _78), /** @src 16:4539:4563  \"current.amount - _amount\" */ param_7))\n                        /// @src 16:4600:4635  \"getShareArrayIndex(_tokenId, _from)\"\n                        let _79 := fun_getShareArrayIndex(param_6, param_4)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, param_6)\n                        mstore(/** @src 16:4539:4553  \"current.amount\" */ _77, /** @src 16:4646:4665  \"tokenIdCurrentOwner\" */ 0x05)\n                        /// @src 16:4646:4690  \"tokenIdCurrentOwner[_tokenId][shareOneIndex]\"\n                        let _80, _81 := storage_array_index_access_struct_CurrentOwner__dyn(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 16:4600:4635  \"getShareArrayIndex(_tokenId, _from)\" */ _79)\n                        /// @src 16:4646:4700  \"tokenIdCurrentOwner[_tokenId][shareOneIndex] = current\"\n                        update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(_80, _81, expr_mpos_2)\n                        /// @src 16:2405:2474  \"if (result == true){...\"\n                        if expr_11\n                        {\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, param_6)\n                            mstore(/** @src 16:4539:4553  \"current.amount\" */ _77, /** @src 16:7175:7183  \"voteInfo\" */ 0x06)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let dataSlot_4 := keccak256(_3, _1)\n                            let length_2 := sload(dataSlot_4)\n                            let _82 := array_allocation_size_array_uint256_dyn(length_2)\n                            let memPtr_9 := mload(_1)\n                            finalize_allocation(memPtr_9, _82)\n                            mstore(memPtr_9, length_2)\n                            let mpos := memPtr_9\n                            mpos := add(memPtr_9, /** @src 16:4539:4553  \"current.amount\" */ _77)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, dataSlot_4)\n                            let spos := keccak256(_3, /** @src 16:4539:4553  \"current.amount\" */ _77)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let i_4 := _3\n                            for { }\n                            lt(i_4, length_2)\n                            {\n                                i_4 := add(i_4, /** @src 16:2187:2191  \"true\" */ _71)\n                            }\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            {\n                                mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                                mpos := add(mpos, /** @src 16:4539:4553  \"current.amount\" */ _77)\n                                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                spos := add(spos, 2)\n                            }\n                            /// @src 16:7203:7213  \"uint i = 0\"\n                            let var_i_3 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                            /// @src 16:7198:7352  \"for (uint i = 0; i < voteList.length; i++) {...\"\n                            for { }\n                            /** @src 16:2187:2191  \"true\" */ _71\n                            /// @src 16:7203:7213  \"uint i = 0\"\n                            {\n                                /// @src 16:7236:7239  \"i++\"\n                                var_i_3 := increment_uint256(var_i_3)\n                            }\n                            {\n                                /// @src 16:7215:7234  \"i < voteList.length\"\n                                if iszero(lt(var_i_3, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:7219:7234  \"voteList.length\" */ memPtr_9)))\n                                /// @src 16:7215:7234  \"i < voteList.length\"\n                                { break }\n                                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                let _83 := sub(shl(160, 1), 1)\n                                let cleaned_3 := and(mload(/** @src 16:7260:7271  \"voteList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_9, var_i_3))), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _83)\n                                /// @src 16:7256:7341  \"if (voteList[i].voter == voter) {...\"\n                                if /** @src 16:7260:7286  \"voteList[i].voter == voter\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned_3, and(/** @src 16:7260:7286  \"voteList[i].voter == voter\" */ param_4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _83))\n                                /// @src 16:7256:7341  \"if (voteList[i].voter == voter) {...\"\n                                {\n                                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                    let memPtr_10 := mload(_1)\n                                    finalize_allocation_24650(memPtr_10)\n                                    mstore(memPtr_10, _3)\n                                    mstore(add(memPtr_10, /** @src 16:4539:4553  \"current.amount\" */ _77), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                                    /// @src 16:7307:7325  \"delete voteList[i]\"\n                                    mstore(memory_array_index_access_address_dyn(memPtr_9, var_i_3), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ memPtr_10)\n                                }\n                            }\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x64d19025 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 16:762:815  \"mapping(uint256 => InitialOwner) public initialOwners\" */ 3)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_5 := keccak256(_3, _1)\n                        let cleaned_4 := and(sload(/** @src 16:762:815  \"mapping(uint256 => InitialOwner) public initialOwners\" */ dataSlot_5), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let _84 := sload(/** @src 16:762:815  \"mapping(uint256 => InitialOwner) public initialOwners\" */ add(dataSlot_5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1))\n                        let memPos_11 := mload(_1)\n                        return(memPos_11, sub(abi_encode_address_uint256(memPos_11, cleaned_4, _84), memPos_11))\n                    }\n                    case 0x6b20c454 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_6 := abi_decode_address_24635()\n                        let offset_10 := calldataload(36)\n                        let _85 := 0xffffffffffffffff\n                        if gt(offset_10, _85) { revert(_3, _3) }\n                        let value1_6 := abi_decode_array_uint256_dyn(add(_2, offset_10), calldatasize())\n                        let offset_11 := calldataload(68)\n                        if gt(offset_11, _85) { revert(_3, _3) }\n                        let value2_2 := abi_decode_array_uint256_dyn(add(_2, offset_11), calldatasize())\n                        let _86 := and(/** @src 3:828:851  \"account == _msgSender()\" */ value0_6, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:828:894  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        let expr_12 := /** @src 3:828:851  \"account == _msgSender()\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _86, /** @src 9:719:729  \"msg.sender\" */ caller())\n                        /// @src 3:828:894  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        if iszero(expr_12)\n                        {\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _86)\n                            mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _87 := keccak256(_3, _1)\n                            mstore(_3, /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(32, _87)\n                            /// @src 3:828:894  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                            expr_12 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 3:807:966  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_12)\n                        /// @src 0:11850:11916  \"require(from != address(0), \\\"ERC1155: burn from the zero address\\\")\"\n                        require_helper_stringliteral_87fd(/** @src 0:11858:11876  \"from != address(0)\" */ iszero(iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _86)))\n                        /// @src 0:11934:11944  \"ids.length\"\n                        let expr_13 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:11934:11944  \"ids.length\" */ value1_6)\n                        /// @src 0:11926:12007  \"require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\")\"\n                        require_helper_stringliteral_e909(/** @src 0:11934:11962  \"ids.length == amounts.length\" */ eq(expr_13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:11948:11962  \"amounts.length\" */ value2_2)))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPtr_11 := mload(_1)\n                        finalize_allocation_36910(memPtr_11)\n                        mstore(memPtr_11, _3)\n                        /// @src 0:12142:12155  \"uint256 i = 0\"\n                        let var_i_4 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:12137:12501  \"for (uint256 i = 0; i < ids.length; i++) {...\"\n                        for { }\n                        /** @src 0:12142:12155  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:12173:12176  \"i++\"\n                            var_i_4 := increment_uint256(var_i_4)\n                        }\n                        {\n                            /// @src 0:12157:12171  \"i < ids.length\"\n                            if iszero(lt(var_i_4, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:12161:12171  \"ids.length\" */ value1_6)))\n                            /// @src 0:12157:12171  \"i < ids.length\"\n                            { break }\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _88 := mload(/** @src 0:12205:12211  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_6, var_i_4))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _89 := mload(/** @src 0:12242:12252  \"amounts[i]\" */ memory_array_index_access_address_dyn(value2_2, var_i_4))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _88)\n                            let _90 := 0x20\n                            mstore(_90, _3)\n                            let _91 := keccak256(_3, _1)\n                            mstore(_3, _86)\n                            mstore(_90, _91)\n                            let _92 := sload(keccak256(_3, _1))\n                            /// @src 0:12322:12392  \"require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\")\"\n                            require_helper_stringliteral_294a(/** @src 0:12330:12351  \"fromBalance >= amount\" */ iszero(lt(_92, _89)))\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _88)\n                            mstore(_90, _3)\n                            let _93 := keccak256(_3, _1)\n                            mstore(_3, _86)\n                            mstore(_90, _93)\n                            sstore(keccak256(_3, _1), sub(/** @src 0:12456:12476  \"fromBalance - amount\" */ _92, _89))\n                        }\n                        /// @src 0:12516:12571  \"TransferBatch(operator, from, address(0), ids, amounts)\"\n                        let _94 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        /// @src 0:12516:12571  \"TransferBatch(operator, from, address(0), ids, amounts)\"\n                        log4(_94, sub(abi_encode_array_uint256_dyn_array_uint256_dyn(_94, value1_6, value2_2), _94), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:12516:12571  \"TransferBatch(operator, from, address(0), ids, amounts)\" */ _86, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                        finalize_allocation_36910(mload(_1))\n                        return(_3, _3)\n                    }\n                    case 0x88a99f02 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_9, param_10 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_9)\n                        mstore(0x20, /** @src 16:884:945  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\" */ 5)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_6 := keccak256(_3, _1)\n                        /// @src 16:884:945  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\"\n                        if iszero(lt(param_10, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 16:884:945  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\" */ dataSlot_6)))\n                        {\n                            revert(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _3)\n                        }\n                        /// @src 16:884:945  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\"\n                        let slot, offset_12 := storage_array_index_access_struct_CurrentOwner__dyn(dataSlot_6, param_10)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let cleaned_5 := and(sload(/** @src 16:884:945  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\" */ slot), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let _95 := sload(/** @src 16:884:945  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\" */ add(slot, 1))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_12 := mload(_1)\n                        return(memPos_12, sub(abi_encode_address_uint256(memPos_12, cleaned_5, _95), memPos_12))\n                    }\n                    case 0x8d824273 {\n                        if callvalue() { revert(_3, _3) }\n                        let _96 := 32\n                        if slt(add(calldatasize(), not(3)), _96) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(_96, /** @src 16:6799:6812  \"initialOwners\" */ 0x03)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _97 := 1\n                        let _98 := sload(/** @src 16:6799:6823  \"initialOwners[id].amount\" */ add(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), _97))\n                        /// @src 16:6834:6860  \"uint256 realVoteNumber = 0\"\n                        let var_realVoteNumber := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        mstore(_96, /** @src 16:6896:6904  \"voteInfo\" */ 0x06)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_7 := keccak256(_3, _1)\n                        let length_3 := sload(dataSlot_7)\n                        let _99 := array_allocation_size_array_uint256_dyn(length_3)\n                        let memPtr_12 := mload(_1)\n                        finalize_allocation(memPtr_12, _99)\n                        mstore(memPtr_12, length_3)\n                        let mpos_1 := memPtr_12\n                        mpos_1 := add(memPtr_12, _96)\n                        mstore(_3, dataSlot_7)\n                        let spos_1 := keccak256(_3, _96)\n                        let i_5 := _3\n                        for { } lt(i_5, length_3) { i_5 := add(i_5, _97) }\n                        {\n                            mstore(mpos_1, read_from_storage_reference_type_struct_CurrentOwner(spos_1))\n                            mpos_1 := add(mpos_1, _96)\n                            spos_1 := add(spos_1, 2)\n                        }\n                        /// @src 16:6924:6934  \"uint i = 0\"\n                        let var_i_5 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 16:6919:7025  \"for (uint i = 0; i < voteList.length; i++) {...\"\n                        for { }\n                        /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _97\n                        /// @src 16:6924:6934  \"uint i = 0\"\n                        {\n                            /// @src 16:6957:6960  \"i++\"\n                            var_i_5 := increment_uint256(var_i_5)\n                        }\n                        {\n                            /// @src 16:6936:6955  \"i < voteList.length\"\n                            if iszero(lt(var_i_5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:6940:6955  \"voteList.length\" */ memPtr_12)))\n                            /// @src 16:6936:6955  \"i < voteList.length\"\n                            { break }\n                            /// @src 16:6977:7013  \"realVoteNumber += voteList[i].number\"\n                            var_realVoteNumber := checked_add_uint256(var_realVoteNumber, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:6995:7013  \"voteList[i].number\" */ add(/** @src 16:6995:7006  \"voteList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_12, var_i_5)), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _96)))\n                        }\n                        let memPos_13 := mload(_1)\n                        mstore(memPos_13, _98)\n                        mstore(add(memPos_13, _96), var_realVoteNumber)\n                        return(memPos_13, _1)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr_13 := mload(_1)\n                        let ret_6 := _3\n                        let slotValue_2 := sload(/** @src 16:1073:1093  \"string public symbol\" */ 9)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let length_4 := extract_byte_array_length(slotValue_2)\n                        mstore(memPtr_13, length_4)\n                        let _100 := 0x20\n                        let _101 := 1\n                        switch and(slotValue_2, _101)\n                        case 0 {\n                            mstore(add(memPtr_13, _100), and(slotValue_2, not(255)))\n                            ret_6 := add(add(memPtr_13, shl(5, iszero(iszero(length_4)))), _100)\n                        }\n                        case 1 {\n                            mstore(_3, /** @src 16:1073:1093  \"string public symbol\" */ 9)\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let dataPos_2 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                            let i_6 := _3\n                            for { } lt(i_6, length_4) { i_6 := add(i_6, _100) }\n                            {\n                                mstore(add(add(memPtr_13, i_6), _100), sload(dataPos_2))\n                                dataPos_2 := add(dataPos_2, _101)\n                            }\n                            ret_6 := add(add(memPtr_13, i_6), _100)\n                        }\n                        finalize_allocation(memPtr_13, sub(ret_6, memPtr_13))\n                        let memPos_14 := mload(_1)\n                        mstore(memPos_14, _100)\n                        return(memPos_14, sub(abi_encode_string(memPtr_13, add(memPos_14, _100)), memPos_14))\n                    }\n                    case 0x9eb79a75 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_11, param_12 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_11)\n                        mstore(0x20, /** @src 16:952:994  \"mapping(uint256 => Vote[]) public voteInfo\" */ 6)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_8 := keccak256(_3, _1)\n                        /// @src 16:952:994  \"mapping(uint256 => Vote[]) public voteInfo\"\n                        if iszero(lt(param_12, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 16:952:994  \"mapping(uint256 => Vote[]) public voteInfo\" */ dataSlot_8)))\n                        {\n                            revert(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _3)\n                        }\n                        /// @src 16:952:994  \"mapping(uint256 => Vote[]) public voteInfo\"\n                        let slot_1, offset_13 := storage_array_index_access_struct_CurrentOwner__dyn(dataSlot_8, param_12)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let cleaned_6 := and(sload(/** @src 16:952:994  \"mapping(uint256 => Vote[]) public voteInfo\" */ slot_1), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let _102 := sload(/** @src 16:952:994  \"mapping(uint256 => Vote[]) public voteInfo\" */ add(slot_1, 1))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_15 := mload(_1)\n                        return(memPos_15, sub(abi_encode_address_uint256(memPos_15, cleaned_6, _102), memPos_15))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_7 := abi_decode_address_24635()\n                        let value_7 := calldataload(36)\n                        let _103 := iszero(iszero(value_7))\n                        if iszero(eq(value_7, _103)) { revert(_3, _3) }\n                        let _104 := and(/** @src 0:12901:12918  \"owner != operator\" */ value0_7, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 0:12901:12918  \"owner != operator\" */ eq(/** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _104)\n                        {\n                            let memPtr_14 := mload(_1)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, _2), 32)\n                            mstore(add(memPtr_14, 36), 41)\n                            mstore(add(memPtr_14, 68), \"ERC1155: setting approval status\")\n                            mstore(add(memPtr_14, 100), \" for self\")\n                            revert(memPtr_14, 132)\n                        }\n                        mstore(_3, /** @src 9:719:729  \"msg.sender\" */ caller())\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(0x20, /** @src 0:12974:12992  \"_operatorApprovals\" */ 0x01)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _105 := keccak256(_3, _1)\n                        mstore(_3, _104)\n                        mstore(0x20, _105)\n                        let dataSlot_9 := keccak256(_3, _1)\n                        let value_8 := and(sload(dataSlot_9), not(255))\n                        sstore(dataSlot_9, or(value_8, and(_103, 255)))\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        let _106 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        mstore(_106, _103)\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_106, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x20, /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ _104)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xaac48653 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(_3, _3) }\n                        let value0_8 := abi_decode_address_24635()\n                        let value_9 := calldataload(36)\n                        let value_10 := calldataload(100)\n                        let offset_14 := calldataload(132)\n                        let _107 := 0xffffffffffffffff\n                        if gt(offset_14, _107) { revert(_3, _3) }\n                        let value4_1 := abi_decode_string(add(_2, offset_14), calldatasize())\n                        let offset_15 := calldataload(164)\n                        if gt(offset_15, _107) { revert(_3, _3) }\n                        let value5 := abi_decode_string(add(_2, offset_15), calldatasize())\n                        let _108 := 1\n                        if /** @src 16:1746:1760  \"result != true\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ iszero(iszero(/** @src 16:1704:1727  \"getNftEXit(id, account)\" */ fun_getNftEXit(value_9, value0_8))), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _108)\n                        {\n                            let memPtr_15 := mload(_1)\n                            mstore(memPtr_15, shl(229, 4594637))\n                            mstore(add(memPtr_15, _2), 32)\n                            mstore(add(memPtr_15, 36), 16)\n                            mstore(add(memPtr_15, 68), \"this id had mint\")\n                            revert(memPtr_15, 100)\n                        }\n                        let _109 := and(/** @src 0:8717:8733  \"to != address(0)\" */ value0_8, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:8709:8771  \"require(to != address(0), \\\"ERC1155: mint to the zero address\\\")\"\n                        require_helper_stringliteral_ebf0(/** @src 0:8717:8733  \"to != address(0)\" */ iszero(iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _109)))\n                        /// @src 0:8846:8867  \"_asSingletonArray(id)\"\n                        pop(fun_asSingletonArray(value_9))\n                        /// @src 0:8904:8929  \"_asSingletonArray(amount)\"\n                        pop(fun_asSingletonArray(value_10))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, value_9)\n                        let _110 := 32\n                        mstore(_110, _3)\n                        let _111 := keccak256(_3, _1)\n                        mstore(_3, _109)\n                        mstore(_110, _111)\n                        let dataSlot_10 := keccak256(_3, _1)\n                        sstore(dataSlot_10, /** @src 0:9017:9044  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:9017:9044  \"_balances[id][to] += amount\" */ dataSlot_10), value_10))\n                        /// @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\"\n                        let _112 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        mstore(_112, value_9)\n                        mstore(add(_112, _110), value_10)\n                        /// @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\"\n                        log4(_112, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1, /** @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\" */ _109)\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        if /** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(value0_8)))\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let _113 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                            let _114 := shl(224, 0xf23a6e61)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            mstore(_113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _114)\n                            mstore(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ add(_113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _3)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), value_9)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), value_10)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), 160)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let trySuccessCondition_2 := call(gas(), _109, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _113, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(value5, add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164)), /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _113), _113, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _110)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let expr_14 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            if trySuccessCondition_2\n                            {\n                                let _115 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _110\n                                /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                                if gt(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _110, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ returndatasize()) { _115 := returndatasize() }\n                                finalize_allocation(_113, _115)\n                                expr_14 := abi_decode_bytes4_fromMemory(_113, add(_113, _115))\n                            }\n                            /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            switch iszero(trySuccessCondition_2)\n                            case 0 {\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                if /** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ iszero(eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ expr_14, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _114))\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                {\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _116 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_116, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_116, sub(abi_encode_stringliteral(add(_116, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _116))\n                                }\n                            }\n                            default /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            {\n                                let _117 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _108\n                                /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:15911:15992  \"catch Error(string memory reason) {...\"\n                                    let _118 := try_decode_error_message()\n                                    if _118\n                                    {\n                                        _117 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        let _119 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        mstore(_119, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                        mstore(/** @src 0:15963:15977  \"revert(reason)\" */ add(_119, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), _110)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        revert(_119, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_118, add(/** @src 0:15963:15977  \"revert(reason)\" */ _119, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:15963:15977  \"revert(reason)\" */ _119))\n                                    }\n                                }\n                                /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                                if _117\n                                {\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _120 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_120, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_120, sub(abi_encode_stringliteral_f591(add(_120, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _120))\n                                }\n                            }\n                        }\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPtr_16 := mload(_1)\n                        finalize_allocation_24650(memPtr_16)\n                        mstore(memPtr_16, _109)\n                        mstore(/** @src 16:2790:2879  \"InitialOwner({...\" */ add(memPtr_16, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _110), value_10)\n                        mstore(_3, value_9)\n                        mstore(_110, /** @src 16:2890:2903  \"initialOwners\" */ 0x03)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        copy_struct_to_storage_from_struct_InitialOwner_to_struct_InitialOwner(keccak256(_3, _1), memPtr_16)\n                        let memPtr_17 := mload(_1)\n                        finalize_allocation_24650(memPtr_17)\n                        mstore(memPtr_17, _109)\n                        mstore(/** @src 16:3075:3165  \"InitialNumber({...\" */ add(memPtr_17, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _110), calldataload(68))\n                        mstore(_3, value_9)\n                        mstore(_110, _2)\n                        copy_struct_to_storage_from_struct_InitialOwner_to_struct_InitialOwner(keccak256(_3, _1), memPtr_17)\n                        let memPtr_18 := mload(_1)\n                        finalize_allocation_24650(memPtr_18)\n                        mstore(memPtr_18, _109)\n                        mstore(/** @src 16:3621:3710  \"CurrentOwner({...\" */ add(memPtr_18, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _110), value_10)\n                        mstore(_3, value_9)\n                        mstore(_110, /** @src 16:3721:3740  \"tokenIdCurrentOwner\" */ 0x05)\n                        /// @src 16:3721:3768  \"tokenIdCurrentOwner[tokenId].push(currentOwner)\"\n                        array_push_from_struct_CurrentOwner_to_array_struct_CurrentOwner_storage_dyn_ptr(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 16:3721:3768  \"tokenIdCurrentOwner[tokenId].push(currentOwner)\" */ memPtr_18)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, value_9)\n                        mstore(_110, /** @src 16:1977:1982  \"_uris\" */ 0x07)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_11 := keccak256(_3, _1)\n                        let newLen_2 := mload(value4_1)\n                        if gt(newLen_2, _107)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        let _121 := extract_byte_array_length(sload(dataSlot_11))\n                        if gt(_121, 31)\n                        {\n                            mstore(_3, dataSlot_11)\n                            let data_2 := keccak256(_3, _110)\n                            let deleteStart_2 := add(data_2, shr(/** @src 16:3721:3740  \"tokenIdCurrentOwner\" */ 0x05, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(newLen_2, 31)))\n                            if lt(newLen_2, _110) { deleteStart_2 := data_2 }\n                            let _122 := add(data_2, shr(/** @src 16:3721:3740  \"tokenIdCurrentOwner\" */ 0x05, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(_121, 31)))\n                            let start_2 := deleteStart_2\n                            for { } lt(start_2, _122) { start_2 := add(start_2, _108) }\n                            { sstore(start_2, _3) }\n                        }\n                        let srcOffset_2 := _3\n                        srcOffset_2 := _110\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd_2 := and(newLen_2, not(31))\n                            mstore(_3, dataSlot_11)\n                            let dstPtr_2 := keccak256(_3, _110)\n                            let i_7 := _3\n                            for { } lt(i_7, loopEnd_2) { i_7 := add(i_7, _110) }\n                            {\n                                sstore(dstPtr_2, mload(add(value4_1, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, _108)\n                                srcOffset_2 := add(srcOffset_2, _110)\n                            }\n                            if lt(loopEnd_2, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(value4_1, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(/** @src 16:2890:2903  \"initialOwners\" */ 0x03, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ newLen_2), 248), not(0)))))\n                            }\n                            sstore(dataSlot_11, add(shl(_108, newLen_2), _108))\n                        }\n                        default {\n                            let value_11 := _3\n                            if newLen_2\n                            {\n                                value_11 := mload(add(value4_1, srcOffset_2))\n                            }\n                            sstore(dataSlot_11, or(and(value_11, not(shr(shl(/** @src 16:2890:2903  \"initialOwners\" */ 0x03, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ newLen_2), not(0)))), shl(_108, newLen_2)))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0xc18dfec3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_9 := abi_decode_address_24635()\n                        /// @src 16:6519:6523  \"true\"\n                        fun_setApprovalForAll(value0_9, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_decode_address())\n                        return(_3, _3)\n                    }\n                    case 0xc2f1eafd {\n                        if callvalue() { revert(_3, _3) }\n                        let param_13, param_14, param_15 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        fun_addVoteInfo(param_13, param_14, param_15)\n                        return(_3, _3)\n                    }\n                    case 0xd0e30db0 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        return(_3, _3)\n                    }\n                    case 0xd4d421ae {\n                        if callvalue() { revert(_3, _3) }\n                        let param_16, param_17, param_18 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 16:6041:6043  \"id\"\n                        fun_addVoteInfo(param_16, param_17, param_18)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xdaddb9c8 {\n                        if callvalue() { revert(_3, _3) }\n                        let _123 := 32\n                        if slt(add(calldatasize(), not(3)), _123) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(_123, /** @src 16:7979:7992  \"initialOwners\" */ 0x03)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _124 := 1\n                        let _125 := sload(/** @src 16:7979:8003  \"initialOwners[id].amount\" */ add(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), _124))\n                        /// @src 16:8051:8070  \"bool result = false\"\n                        let var_result := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 16:8014:8040  \"uint256 realVoteNumber = 0\"\n                        let var_realVoteNumber_1 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        mstore(_123, /** @src 16:8106:8114  \"voteInfo\" */ 0x06)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_12 := keccak256(_3, _1)\n                        let length_5 := sload(dataSlot_12)\n                        let _126 := array_allocation_size_array_uint256_dyn(length_5)\n                        let memPtr_19 := mload(_1)\n                        finalize_allocation(memPtr_19, _126)\n                        mstore(memPtr_19, length_5)\n                        let mpos_2 := memPtr_19\n                        mpos_2 := add(memPtr_19, _123)\n                        mstore(_3, dataSlot_12)\n                        let spos_2 := keccak256(_3, _123)\n                        let i_8 := _3\n                        for { } lt(i_8, length_5) { i_8 := add(i_8, _124) }\n                        {\n                            mstore(mpos_2, read_from_storage_reference_type_struct_CurrentOwner(spos_2))\n                            mpos_2 := add(mpos_2, _123)\n                            spos_2 := add(spos_2, 2)\n                        }\n                        /// @src 16:8134:8144  \"uint i = 0\"\n                        let var_i_6 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 16:8129:8235  \"for (uint i = 0; i < voteList.length; i++) {...\"\n                        for { }\n                        /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _124\n                        /// @src 16:8134:8144  \"uint i = 0\"\n                        {\n                            /// @src 16:8167:8170  \"i++\"\n                            var_i_6 := increment_uint256(var_i_6)\n                        }\n                        {\n                            /// @src 16:8146:8165  \"i < voteList.length\"\n                            if iszero(lt(var_i_6, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:8150:8165  \"voteList.length\" */ memPtr_19)))\n                            /// @src 16:8146:8165  \"i < voteList.length\"\n                            { break }\n                            /// @src 16:8187:8223  \"realVoteNumber += voteList[i].number\"\n                            var_realVoteNumber_1 := checked_add_uint256(var_realVoteNumber_1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:8205:8223  \"voteList[i].number\" */ add(/** @src 16:8205:8216  \"voteList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_19, var_i_6)), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _123)))\n                        }\n                        /// @src 16:8369:8383  \"per > standard\"\n                        let expr_15 := gt(/** @src 16:8259:8299  \"calculatePercentage(realVoteNumber, all)\" */ fun_calculatePercentage(var_realVoteNumber_1, _125), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 66)\n                        /// @src 16:8365:8425  \"if (per > standard) {...\"\n                        if expr_15\n                        {\n                            /// @src 16:8400:8413  \"result = true\"\n                            var_result := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _124\n                        }\n                        /// @src 16:8435:8497  \"if (per <= standard) {...\"\n                        if /** @src 16:8439:8454  \"per <= standard\" */ iszero(expr_15)\n                        /// @src 16:8435:8497  \"if (per <= standard) {...\"\n                        {\n                            /// @src 16:8471:8485  \"result = false\"\n                            var_result := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        }\n                        let memPos_16 := mload(_1)\n                        mstore(memPos_16, iszero(iszero(var_result)))\n                        return(memPos_16, _123)\n                    }\n                    case 0xde7d69a8 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        sstore(/** @src 16:9305:9325  \"usdtAddr = _usdtAddr\" */ 0x0a, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ or(and(sload(/** @src 16:9305:9325  \"usdtAddr = _usdtAddr\" */ 0x0a), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(abi_decode_address_24635(), sub(shl(160, 1), 1))))\n                        return(_3, _3)\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_10 := abi_decode_address_24635()\n                        let value1_7 := abi_decode_address()\n                        let _127 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_10, _127))\n                        mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _128 := keccak256(_3, _1)\n                        mstore(_3, and(value1_7, _127))\n                        mstore(32, _128)\n                        let value_12 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_17 := mload(_1)\n                        mstore(memPos_17, iszero(iszero(value_12)))\n                        return(memPos_17, 32)\n                    }\n                    case 0xf23c361b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let ret_7 := fun_getNftEXit(calldataload(_2), abi_decode_address())\n                        let memPos_18 := mload(_1)\n                        mstore(memPos_18, iszero(iszero(ret_7)))\n                        return(memPos_18, 32)\n                    }\n                    case 0xf242432a {\n                        if callvalue() { revert(_3, _3) }\n                        let param_19, param_20, param_21, param_22, param_23 := abi_decode_addresst_addresst_uint256t_uint256t_bytes(calldatasize())\n                        fun_safeTransferFrom(param_19, param_20, param_21, param_22, param_23)\n                        return(_3, _3)\n                    }\n                    case 0xf3fef3a3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value_13 := calldataload(_2)\n                        let _129 := and(value_13, sub(shl(160, 1), 1))\n                        if iszero(eq(value_13, _129)) { revert(_3, _3) }\n                        let value_14 := calldataload(36)\n                        if iszero(/** @src 16:9001:9033  \"contractAddress.balance > amount\" */ gt(/** @src 16:9001:9024  \"contractAddress.balance\" */ selfbalance(), /** @src 16:9001:9033  \"contractAddress.balance > amount\" */ value_14))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        {\n                            let memPtr_20 := mload(_1)\n                            mstore(memPtr_20, shl(229, 4594637))\n                            mstore(add(memPtr_20, _2), 32)\n                            mstore(add(memPtr_20, 36), 23)\n                            mstore(add(memPtr_20, 68), \"less amount to withdraw\")\n                            revert(memPtr_20, 100)\n                        }\n                        /// @src 16:9072:9092  \"rec.transfer(amount)\"\n                        let _130 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 16:9072:9092  \"rec.transfer(amount)\"\n                        if iszero(value_14) { _130 := 2300 }\n                        if iszero(call(_130, _129, value_14, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _3, _3, _3))\n                        /// @src 16:9072:9092  \"rec.transfer(amount)\"\n                        {\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        return(_3, _3)\n                    }\n                    case 0xf5298aca {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_11 := abi_decode_address_24635()\n                        let value_15 := calldataload(36)\n                        let value_16 := calldataload(68)\n                        let _131 := and(/** @src 3:512:535  \"account == _msgSender()\" */ value0_11, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:512:578  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        let expr_16 := /** @src 3:512:535  \"account == _msgSender()\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _131, /** @src 9:719:729  \"msg.sender\" */ caller())\n                        /// @src 3:512:578  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        if iszero(expr_16)\n                        {\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _131)\n                            mstore(32, 1)\n                            let _132 := keccak256(_3, _1)\n                            mstore(_3, /** @src 9:719:729  \"msg.sender\" */ caller())\n                            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(32, _132)\n                            /// @src 3:512:578  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                            expr_16 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 3:491:650  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_16)\n                        /// @src 0:10830:10896  \"require(from != address(0), \\\"ERC1155: burn from the zero address\\\")\"\n                        require_helper_stringliteral_87fd(/** @src 0:10838:10856  \"from != address(0)\" */ iszero(iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _131)))\n                        /// @src 0:10971:10992  \"_asSingletonArray(id)\"\n                        pop(fun_asSingletonArray(value_15))\n                        /// @src 0:11029:11054  \"_asSingletonArray(amount)\"\n                        pop(fun_asSingletonArray(value_16))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPtr_21 := mload(_1)\n                        finalize_allocation_36910(memPtr_21)\n                        mstore(memPtr_21, _3)\n                        mstore(_3, value_15)\n                        mstore(0x20, _3)\n                        let _133 := keccak256(_3, _1)\n                        mstore(_3, _131)\n                        mstore(0x20, _133)\n                        let _134 := sload(keccak256(_3, _1))\n                        /// @src 0:11193:11263  \"require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\")\"\n                        require_helper_stringliteral_294a(/** @src 0:11201:11222  \"fromBalance >= amount\" */ iszero(lt(_134, value_16)))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, value_15)\n                        mstore(0x20, _3)\n                        let _135 := keccak256(_3, _1)\n                        mstore(_3, _131)\n                        mstore(0x20, _135)\n                        sstore(keccak256(_3, _1), sub(/** @src 0:11319:11339  \"fromBalance - amount\" */ _134, value_16))\n                        /// @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\"\n                        let _136 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        mstore(_136, value_15)\n                        mstore(add(_136, 0x20), value_16)\n                        /// @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\"\n                        log4(_136, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1, /** @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\" */ _131, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                        finalize_allocation_36910(mload(_1))\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_24635() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_24650(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_36910(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := array_allocation_size_string(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                array := memPtr\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_uint256_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_uint256_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_decode_addresst_addresst_uint256t_uint256t_bytes(dataEnd) -> value0, value1, value2, value3, value4\n            {\n                if slt(add(dataEnd, not(3)), 160) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n                value3 := calldataload(100)\n                let offset := calldataload(132)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value4 := abi_decode_string(add(4, offset), dataEnd)\n            }\n            function storage_array_index_access_struct_CurrentOwner__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x20)\n                slot := add(data, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            /// @ast-id 115 @src 0:2185:2412  \"function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account, var_id) -> var\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := and(/** @src 0:2298:2319  \"account != address(0)\" */ var_account, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                if /** @src 0:2298:2319  \"account != address(0)\" */ iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: address zero is not a v\")\n                    mstore(add(memPtr, 100), \"alid owner\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(0x20, /** @src 0:2317:2318  \"0\" */ 0x00)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _2 := keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                mstore(0x20, _2)\n                /// @src 0:2376:2405  \"return _balances[id][account]\"\n                var := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function require_helper_stringliteral_47c7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC1155: caller is not token own\")\n                    mstore(add(memPtr, 100), \"er or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 252 @src 0:3576:3970  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_id, var_amount, var_data_mpos)\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:3776:3796  \"from == _msgSender()\" */ var_from, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                let expr := /** @src 0:3776:3796  \"from == _msgSender()\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2, /** @src 9:719:729  \"msg.sender\" */ caller())\n                /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                if iszero(expr)\n                {\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                    mstore(0x20, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 9:719:729  \"msg.sender\" */ caller())\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(0x20, _3)\n                    /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                    expr := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)), 0xff)\n                }\n                /// @src 0:3755:3908  \"require(...\"\n                require_helper_stringliteral_47c7(expr)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _4 := and(/** @src 0:5099:5115  \"to != address(0)\" */ var_to, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                /// @src 0:5091:5157  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                require_helper_stringliteral_6faf(/** @src 0:5099:5115  \"to != address(0)\" */ iszero(iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)))\n                /// @src 0:5232:5253  \"_asSingletonArray(id)\"\n                pop(fun_asSingletonArray(var_id))\n                /// @src 0:5290:5315  \"_asSingletonArray(amount)\"\n                pop(fun_asSingletonArray(var_amount))\n                /// @src 0:5113:5114  \"0\"\n                let _5 := 0x00\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                let _6 := 0x20\n                mstore(_6, /** @src 0:5113:5114  \"0\" */ _5)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _7 := 0x40\n                let _8 := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                mstore(_6, _8)\n                let _9 := sload(keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7))\n                /// @src 0:5448:5524  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                require_helper_stringliteral_8ac7(/** @src 0:5456:5477  \"fromBalance >= amount\" */ iszero(lt(_9, var_amount)))\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(_6, /** @src 0:5113:5114  \"0\" */ _5)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _10 := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                mstore(_6, _10)\n                sstore(keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7), sub(/** @src 0:5580:5600  \"fromBalance - amount\" */ _9, var_amount))\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(_6, /** @src 0:5113:5114  \"0\" */ _5)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _11 := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                mstore(_6, _11)\n                let dataSlot := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                sstore(dataSlot, /** @src 0:5620:5647  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:5620:5647  \"_balances[id][to] += amount\" */ dataSlot), var_amount))\n                /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                let _12 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                mstore(_12, var_id)\n                mstore(add(_12, _6), var_amount)\n                /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                log4(_12, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7, /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 9:719:729  \"msg.sender\" */ caller(), /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ _2, _4)\n                /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                if /** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(var_to)))\n                /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                {\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    let _13 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                    let _14 := shl(224, 0xf23a6e61)\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    mstore(_13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _14)\n                    mstore(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ add(_13, 4), /** @src 9:719:729  \"msg.sender\" */ caller())\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _2)\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), var_id)\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), var_amount)\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), 160)\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    let trySuccessCondition := call(gas(), _4, /** @src 0:5113:5114  \"0\" */ _5, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(var_data_mpos, add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164)), /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13), _13, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6)\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    let expr_1 := /** @src 0:5113:5114  \"0\" */ _5\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    if trySuccessCondition\n                    {\n                        let _15 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6\n                        /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                        if gt(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ returndatasize()) { _15 := returndatasize() }\n                        finalize_allocation(_13, _15)\n                        expr_1 := abi_decode_bytes4_fromMemory(_13, add(_13, _15))\n                    }\n                    /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                        if /** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ iszero(eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ expr_1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _14))\n                        /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                        {\n                            /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                            let _16 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                            /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                            mstore(_16, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                            /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                            revert(_16, sub(abi_encode_stringliteral(add(_16, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ 4)), /** @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _16))\n                        }\n                    }\n                    default /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                    {\n                        let _17 := 1\n                        if eq(147028384, return_data_selector())\n                        {\n                            /// @src 0:15911:15992  \"catch Error(string memory reason) {...\"\n                            let _18 := try_decode_error_message()\n                            if _18\n                            {\n                                _17 := /** @src 0:5113:5114  \"0\" */ _5\n                                /// @src 0:15963:15977  \"revert(reason)\"\n                                let _19 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                                /// @src 0:15963:15977  \"revert(reason)\"\n                                mstore(_19, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                                mstore(/** @src 0:15963:15977  \"revert(reason)\" */ add(_19, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ 4), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6)\n                                /// @src 0:15963:15977  \"revert(reason)\"\n                                revert(_19, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_18, add(/** @src 0:15963:15977  \"revert(reason)\" */ _19, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:15963:15977  \"revert(reason)\" */ _19))\n                            }\n                        }\n                        /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                        if _17\n                        {\n                            /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                            let _20 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                            /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                            mstore(_20, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                            /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                            revert(_20, sub(abi_encode_stringliteral_f591(add(_20, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ 4)), /** @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _20))\n                        }\n                    }\n                }\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function require_helper_stringliteral_6faf(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC1155: transfer to the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_8ac7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: insufficient balance fo\")\n                    mstore(add(memPtr, 100), \"r transfer\")\n                    revert(memPtr, 132)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral_e909(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 40)\n                    mstore(add(memPtr, 68), \"ERC1155: ids and amounts length \")\n                    mstore(add(memPtr, 100), \"mismatch\")\n                    revert(memPtr, 132)\n                }\n            }\n            function abi_encode_array_uint256_dyn_array_uint256_dyn(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                tail := abi_encode_array_uint256_dyn(value1, tail_1)\n            }\n            /// @ast-id 1027 @src 0:12790:13083  \"function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {...\"\n            function fun_setApprovalForAll(var_owner, var_operator)\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:12901:12918  \"owner != operator\" */ var_operator, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                let _3 := and(/** @src 0:12901:12918  \"owner != operator\" */ var_owner, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                if /** @src 0:12901:12918  \"owner != operator\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC1155: setting approval status\")\n                    mstore(add(memPtr, 100), \" for self\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                mstore(0x20, /** @src 16:6519:6523  \"true\" */ 0x01)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                mstore(0x20, _4)\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 16:6519:6523  \"true\" */ 0x01))\n                /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                let _5 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(0x40)\n                mstore(_5, /** @src 16:6519:6523  \"true\" */ 0x01)\n                /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_5, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x20, /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, _3, _2)\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value0 := value\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 40)\n                mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n                mstore(add(headStart, 96), \"d tokens\")\n                tail := add(headStart, 128)\n            }\n            function return_data_selector() -> sig\n            {\n                if gt(returndatasize(), 3)\n                {\n                    returndatacopy(0, 0, 4)\n                    sig := shr(224, mload(0))\n                }\n            }\n            function try_decode_error_message() -> ret\n            {\n                if lt(returndatasize(), 0x44) { leave }\n                let data := mload(64)\n                let _1 := not(3)\n                returndatacopy(data, 4, add(returndatasize(), _1))\n                let offset := mload(data)\n                let _2 := returndatasize()\n                let _3 := 0xffffffffffffffff\n                if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n                let msg := add(data, offset)\n                let length := mload(msg)\n                if gt(length, _3) { leave }\n                if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n                finalize_allocation(data, add(add(offset, length), 0x20))\n                ret := msg\n            }\n            function abi_encode_stringliteral_f591(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 52)\n                mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n                mstore(add(headStart, 96), \"Receiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1221 @src 0:16914:17107  \"function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {...\"\n            function fun_asSingletonArray(var_element) -> var__mpos\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_24650(memPtr)\n                mstore(memPtr, /** @src 0:17047:17048  \"1\" */ 0x01)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataStart := add(memPtr, 32)\n                calldatacopy(dataStart, calldatasize(), 32)\n                if iszero(mload(memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n                }\n                mstore(/** @src 0:17059:17077  \"array[0] = element\" */ dataStart, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_element)\n                /// @src 0:17088:17100  \"return array\"\n                var__mpos := memPtr\n            }\n            /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function require_helper_stringliteral_87fd(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC1155: burn from the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_294a(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC1155: burn amount exceeds bal\")\n                    mstore(add(memPtr, 100), \"ance\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_ebf0(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC1155: mint to the zero addres\")\n                    mstore(add(memPtr, 100), \"s\")\n                    revert(memPtr, 132)\n                }\n            }\n            function copy_struct_to_storage_from_struct_InitialOwner_to_struct_InitialOwner(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(mload(value), sub(shl(160, 1), 1))))\n                sstore(add(slot, 1), mload(add(value, 32)))\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(slot, offset, value)\n            {\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                copy_struct_to_storage_from_struct_InitialOwner_to_struct_InitialOwner(slot, value)\n            }\n            function array_push_from_struct_CurrentOwner_to_array_struct_CurrentOwner_storage_dyn_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_CurrentOwner__dyn(array, oldLen)\n                update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(slot, offset, value0)\n            }\n            function read_from_storage_reference_type_struct_CurrentOwner(slot) -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation_24650(memPtr)\n                value := memPtr\n                mstore(memPtr, and(sload(slot), sub(shl(160, 1), 1)))\n                mstore(add(memPtr, 32), sload(add(slot, 1)))\n            }\n            /// @ast-id 4418 @src 16:4716:5054  \"function getShareExit(uint256 _tokenId, address owner) internal view returns (bool){...\"\n            function fun_getShareExit(var_tokenId, var_owner) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_tokenId)\n                let _2 := 0x20\n                mstore(_2, /** @src 16:4841:4860  \"tokenIdCurrentOwner\" */ 0x05)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                let length := sload(dataSlot)\n                let _3 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr := mload(0x40)\n                finalize_allocation(memPtr, _3)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                mpos := add(memPtr, _2)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ dataSlot)\n                let spos := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                let i := /** @src -1:-1:-1 */ _1\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 2)\n                }\n                /// @src 16:4886:4896  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 16:4881:5024  \"for (uint i = 0; i < shares.length; i++) {...\"\n                for { }\n                /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                /// @src 16:4886:4896  \"uint i = 0\"\n                {\n                    /// @src 16:4917:4920  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 16:4898:4915  \"i < shares.length\"\n                    if iszero(lt(var_i, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:4902:4915  \"shares.length\" */ memPtr)))\n                    /// @src 16:4898:4915  \"i < shares.length\"\n                    { break }\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _4 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 16:4941:4950  \"shares[i]\" */ mload(memory_array_index_access_address_dyn(memPtr, var_i))), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                    /// @src 16:4937:5013  \"if (shares[i].owner == owner) {...\"\n                    if /** @src 16:4941:4965  \"shares[i].owner == owner\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 16:4941:4965  \"shares[i].owner == owner\" */ var_owner, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4))\n                    /// @src 16:4937:5013  \"if (shares[i].owner == owner) {...\"\n                    {\n                        /// @src 16:4986:4997  \"return true\"\n                        var := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                        /// @src 16:4986:4997  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 16:5034:5046  \"return false\"\n                var := /** @src -1:-1:-1 */ _1\n            }\n            /// @ast-id 4473 @src 16:5062:5503  \"function getShareEntity(uint256 _tokenId, address owner) internal view returns (CurrentOwner memory){...\"\n            function fun_getShareEntity(var_tokenId, var_owner) -> var_4426_mpos\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_24650(memPtr)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(memPtr, /** @src -1:-1:-1 */ _1)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _2 := 32\n                mstore(add(memPtr, _2), /** @src -1:-1:-1 */ _1)\n                /// @src 16:5173:5199  \"CurrentOwner  memory share\"\n                let var_share_mpos := /** @src -1:-1:-1 */ _1\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_24650(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ _1)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(add(memPtr_1, _2), /** @src -1:-1:-1 */ _1)\n                /// @src 16:5173:5199  \"CurrentOwner  memory share\"\n                var_share_mpos := memPtr_1\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_tokenId)\n                mstore(_2, /** @src 16:5244:5263  \"tokenIdCurrentOwner\" */ 0x05)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 64)\n                let length := sload(dataSlot)\n                let _3 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr_2 := mload(64)\n                finalize_allocation(memPtr_2, _3)\n                mstore(memPtr_2, length)\n                let mpos := memPtr_2\n                mpos := add(memPtr_2, _2)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ dataSlot)\n                let spos := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                let i := /** @src -1:-1:-1 */ _1\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 2)\n                }\n                /// @src 16:5289:5299  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 16:5284:5473  \"for (uint i = 0; i < shareList.length; i++) {...\"\n                for { }\n                /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                /// @src 16:5289:5299  \"uint i = 0\"\n                {\n                    /// @src 16:5323:5326  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 16:5301:5321  \"i < shareList.length\"\n                    if iszero(lt(var_i, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:5305:5321  \"shareList.length\" */ memPtr_2)))\n                    /// @src 16:5301:5321  \"i < shareList.length\"\n                    { break }\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _4 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 16:5347:5359  \"shareList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_2, var_i))), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                    /// @src 16:5343:5462  \"if (shareList[i].owner == owner) {...\"\n                    if /** @src 16:5347:5374  \"shareList[i].owner == owner\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 16:5347:5374  \"shareList[i].owner == owner\" */ var_owner, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4))\n                    /// @src 16:5343:5462  \"if (shareList[i].owner == owner) {...\"\n                    {\n                        /// @src 16:5395:5415  \"share = shareList[i]\"\n                        var_share_mpos := /** @src 16:5403:5415  \"shareList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_2, var_i))\n                        /// @src 16:5434:5446  \"return share\"\n                        var_4426_mpos := var_share_mpos\n                        leave\n                    }\n                }\n                /// @src 16:5483:5495  \"return share\"\n                var_4426_mpos := var_share_mpos\n            }\n            /// @ast-id 4524 @src 16:5511:5920  \"function getShareArrayIndex(uint256 _tokenId, address owner) internal view returns (uint256){...\"\n            function fun_getShareArrayIndex(var_tokenId, var_owner) -> var\n            {\n                /// @src 16:5614:5627  \"uint256 index\"\n                let var_index := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0\n                mstore(var_index, var_tokenId)\n                let _1 := 0x20\n                mstore(_1, /** @src 16:5672:5691  \"tokenIdCurrentOwner\" */ 0x05)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(var_index, 0x40)\n                let length := sload(dataSlot)\n                let _2 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr := mload(0x40)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                mpos := add(memPtr, _1)\n                mstore(var_index, dataSlot)\n                let spos := keccak256(var_index, _1)\n                let i := var_index\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                    mpos := add(mpos, _1)\n                    spos := add(spos, 2)\n                }\n                /// @src 16:5717:5727  \"uint i = 0\"\n                let var_i := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_index\n                /// @src 16:5712:5890  \"for (uint i = 0; i < shareList.length; i++) {...\"\n                for { }\n                /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                /// @src 16:5717:5727  \"uint i = 0\"\n                {\n                    /// @src 16:5751:5754  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 16:5729:5749  \"i < shareList.length\"\n                    if iszero(lt(var_i, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:5733:5749  \"shareList.length\" */ memPtr)))\n                    /// @src 16:5729:5749  \"i < shareList.length\"\n                    { break }\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _3 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 16:5775:5787  \"shareList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr, var_i))), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                    /// @src 16:5771:5879  \"if (shareList[i].owner == owner) {...\"\n                    if /** @src 16:5775:5802  \"shareList[i].owner == owner\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 16:5775:5802  \"shareList[i].owner == owner\" */ var_owner, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3))\n                    /// @src 16:5771:5879  \"if (shareList[i].owner == owner) {...\"\n                    {\n                        /// @src 16:5823:5832  \"index = i\"\n                        var_index := var_i\n                        /// @src 16:5851:5863  \"return index\"\n                        var := var_i\n                        leave\n                    }\n                }\n                /// @src 16:5900:5912  \"return index\"\n                var := var_index\n            }\n            /// @ast-id 4578 @src 16:6060:6392  \"function addVoteInfo(address voter, address operator, uint256 id) public {...\"\n            function fun_addVoteInfo(var_voter, var_operator, var_id)\n            {\n                /// @src 16:6162:6182  \"balanceOf(voter, id)\"\n                let expr := fun_balanceOf(var_voter, var_id)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_24650(memPtr)\n                mstore(memPtr, and(var_voter, sub(shl(160, 1), 1)))\n                mstore(/** @src 16:6215:6295  \"Vote({...\" */ add(memPtr, 32), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ expr)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(/** @src 16:6215:6295  \"Vote({...\" */ 32, /** @src 16:6306:6314  \"voteInfo\" */ 0x06)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 64)\n                let oldLen := sload(dataSlot)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n                }\n                sstore(dataSlot, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_CurrentOwner__dyn(dataSlot, oldLen)\n                update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(slot, offset, memPtr)\n                /// @src 16:6379:6383  \"true\"\n                fun_setApprovalForAll(var_voter, var_operator)\n            }\n            /// @ast-id 4748 @src 16:7369:7683  \"function getVoteInfoExit(uint256 id, address voter) public view returns (bool){...\"\n            function fun_getVoteInfoExit(var_id, var_voter) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                let _2 := 0x20\n                mstore(_2, /** @src 16:7483:7491  \"voteInfo\" */ 0x06)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                let length := sload(dataSlot)\n                let _3 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr := mload(0x40)\n                finalize_allocation(memPtr, _3)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                mpos := add(memPtr, _2)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ dataSlot)\n                let spos := keccak256(/** @src -1:-1:-1 */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                let i := /** @src -1:-1:-1 */ _1\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 2)\n                }\n                /// @src 16:7511:7521  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 16:7506:7653  \"for (uint i = 0; i < voteList.length; i++) {...\"\n                for { }\n                /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                /// @src 16:7511:7521  \"uint i = 0\"\n                {\n                    /// @src 16:7544:7547  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 16:7523:7542  \"i < voteList.length\"\n                    if iszero(lt(var_i, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 16:7527:7542  \"voteList.length\" */ memPtr)))\n                    /// @src 16:7523:7542  \"i < voteList.length\"\n                    { break }\n                    /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _4 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 16:7568:7579  \"voteList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr, var_i))), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                    /// @src 16:7564:7642  \"if (voteList[i].voter == voter) {...\"\n                    if /** @src 16:7568:7594  \"voteList[i].voter == voter\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 16:7568:7594  \"voteList[i].voter == voter\" */ var_voter, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4))\n                    /// @src 16:7564:7642  \"if (voteList[i].voter == voter) {...\"\n                    {\n                        /// @src 16:7615:7626  \"return true\"\n                        var := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                        /// @src 16:7615:7626  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 16:7663:7675  \"return false\"\n                var := /** @src -1:-1:-1 */ _1\n            }\n            /// @ast-id 4770 @src 16:7691:7881  \"function getNftEXit(uint256 id, address owner) public view returns (bool){...\"\n            function fun_getNftEXit(var_id, var_owner) -> var\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(0x20, /** @src 16:7779:7792  \"initialOwners\" */ 0x03)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)), _1)\n                /// @src 16:7775:7851  \"if (initialOwners[id].owner == owner) {...\"\n                if /** @src 16:7779:7811  \"initialOwners[id].owner == owner\" */ eq(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 16:7779:7811  \"initialOwners[id].owner == owner\" */ var_owner, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1))\n                /// @src 16:7775:7851  \"if (initialOwners[id].owner == owner) {...\"\n                {\n                    /// @src 16:7828:7839  \"return true\"\n                    var := /** @src 16:7835:7839  \"true\" */ 0x01\n                    /// @src 16:7828:7839  \"return true\"\n                    leave\n                }\n                /// @src 16:7861:7873  \"return false\"\n                var := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 4884 @src 16:8536:8810  \"function calculatePercentage(uint256 numerator, uint256 denominator) public pure returns (uint256) {...\"\n            function fun_calculatePercentage(var_numerator, var_denominator) -> var\n            {\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if /** @src 16:8654:8670  \"denominator != 0\" */ iszero(var_denominator)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"Denominator must be a non-zero v\")\n                    mstore(add(memPtr, 100), \"alue\")\n                    revert(memPtr, 132)\n                }\n                let product := mul(var_numerator, /** @src 16:8756:8759  \"100\" */ 0x64)\n                /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if iszero(or(iszero(var_numerator), eq(/** @src 16:8756:8759  \"100\" */ 0x64, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ div(product, var_numerator))))\n                {\n                    mstore(/** @src 16:8669:8670  \"0\" */ 0x00, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src 16:8669:8670  \"0\" */ 0x00, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n                }\n                /// @src 16:8785:8802  \"return percentage\"\n                var := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ div(product, var_denominator)\n            }\n            /// @ast-id 2244 @src 8:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n            {\n                /// @src 8:7851:7863  \"bytes memory\"\n                var_mpos := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 96\n                /// @src 8:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 8:8976:9355  \"if (returndata.length > 0) {...\"\n                    switch /** @src 8:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 8:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 8:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 8:9324:9344  \"revert(errorMessage)\"\n                        let _1 := /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(64)\n                        /// @src 8:9324:9344  \"revert(errorMessage)\"\n                        mstore(_1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(229, 4594637))\n                        mstore(/** @src 8:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                        /// @src 8:9324:9344  \"revert(errorMessage)\"\n                        revert(_1, sub(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(var_errorMessage_mpos, add(/** @src 8:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 8:9324:9344  \"revert(errorMessage)\" */ _1))\n                    }\n                    default /// @src 8:8976:9355  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 8:9152:9294  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n                default /// @src 8:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 8:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 8:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 8:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 8:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        if /** @src 8:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 8:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                        /// @src 16:335:9596  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 29)\n                            mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @src 8:8201:8218  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220478b31a3cd31bb6f864837532d9afb88dcea167dd41d6e6dd1bf41c90ba4ff1d64736f6c63430008120033\"\n    }\n}\n","hash":"0100090f8baf40469ce6406d3f70bb688048a3e3f15206a0411dc300b18585aa","factoryDependencies":{}}}}}}