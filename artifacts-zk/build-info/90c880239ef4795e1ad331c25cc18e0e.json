{"id":"90c880239ef4795e1ad331c25cc18e0e","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual override returns (uint256[] memory) {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/AiYueNFTExchange.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\n\r\ncontract AiYueNFTExchange is ERC1155, ERC1155Burnable {\r\n\r\n    struct InitialOwner {\r\n        address owner;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct CurrentOwner {\r\n        address owner;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct Vote {\r\n        address voter;\r\n        uint256 number;\r\n    }\r\n    using ECDSA for bytes32;\r\n    mapping(uint256 => InitialOwner) public initialOwners;\r\n    mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner;\r\n    mapping(uint256 => Vote[]) public voteInfo;\r\n    mapping(bytes32 => bool)  executed;\r\n    mapping(address => mapping(address => bool)) private operatorApprovals;\r\n    mapping(uint256 => string) private _uris;\r\n    string public name;\r\n    string public symbol;\r\n    constructor(string memory _name, string memory _symbol) ERC1155(\"https://gray-notable-pheasant-927.mypinata.cloud/ipfs/QmY8UCGaUBvtRGxTWzXqZEbWPM8a7MtvkWaJrts2zxRQEy?_gl=1*1vdvem1*_ga*MjcyOTA3NTIuMTY4OTkwNjE3NA..*_ga_5RMPXG14TE*MTY5MTAyNzE5Mi4xMC4xLjE2OTEwMjcyMDUuNDcuMC4w\") {\r\n        name = _name;\r\n        symbol = _symbol;\r\n    }\r\n    function setURI(string memory newuri) public {\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function uri(uint256 tokenId) override public view returns (string memory){\r\n        return (_uris[tokenId]);\r\n    }\r\n\r\n    function setTokenUri(uint256 tokenId, string memory uri) public {\r\n        _uris[tokenId] = uri;\r\n    }\r\n\r\n    function mint(address account, uint256 id, uint256 amount, string memory uri, bytes memory data) public\r\n    {\r\n        _mint(account, id, amount, data);\r\n        initOwnerAmount(account, id, amount);\r\n        initCurrentOwner(account, id, amount);\r\n        _uris[id] = uri;\r\n    }\r\n\r\n\r\n    function transferFrom(address from, address to, uint256 id, uint256 amount, bytes memory data) public {\r\n        safeTransferFrom(from, to, id, amount, data);\r\n        changeTokenIdAmount(from, to, id, amount);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }\r\n\r\n    function initOwnerAmount(address _owner, uint256 tokenId, uint256 _amount) internal {\r\n        InitialOwner memory initialOwner = InitialOwner({\r\n            owner : _owner,\r\n            amount : _amount\r\n            });\r\n        initialOwners[tokenId] = initialOwner;\r\n    }\r\n\r\n    function initCurrentOwner(address _owner, uint256 tokenId, uint256 _amount) internal {\r\n        CurrentOwner memory currentOwner = CurrentOwner({\r\n            owner : _owner,\r\n            amount : _amount\r\n            });\r\n        tokenIdCurrentOwner[tokenId].push(currentOwner);\r\n    }\r\n\r\n    function changeTokenIdAmount(address _from, address _to, uint256 _tokenId, uint256 _amount) internal {\r\n        if (getShareExit(_tokenId, _to)) {\r\n            CurrentOwner memory currentOwner = getShareEntity(_tokenId, _to);\r\n            currentOwner.amount += _amount;\r\n\r\n            uint256 shareIndex = getShareArrayIndex(_tokenId, _to);\r\n            tokenIdCurrentOwner[_tokenId][shareIndex] = currentOwner;\r\n        } else {\r\n            CurrentOwner memory currentOwner = CurrentOwner({\r\n                owner : _to,\r\n                amount : _amount\r\n                });\r\n            tokenIdCurrentOwner[_tokenId].push(currentOwner);\r\n        }\r\n\r\n        CurrentOwner memory current = getShareEntity(_tokenId, _from);\r\n        current.amount = current.amount - _amount;\r\n\r\n        uint256 shareOneIndex = getShareArrayIndex(_tokenId, _from);\r\n        tokenIdCurrentOwner[_tokenId][shareOneIndex] = current;\r\n    }\r\n\r\n    function getShareExit(uint256 _tokenId, address owner) internal view returns (bool){\r\n        CurrentOwner[] memory shares = tokenIdCurrentOwner[_tokenId];\r\n        for (uint i = 0; i < shares.length; i++) {\r\n            if (shares[i].owner == owner) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getShareEntity(uint256 _tokenId, address owner) internal view returns (CurrentOwner memory){\r\n        CurrentOwner  memory share;\r\n        CurrentOwner[] memory shareList = tokenIdCurrentOwner[_tokenId];\r\n        for (uint i = 0; i < shareList.length; i++) {\r\n            if (shareList[i].owner == owner) {\r\n                share = shareList[i];\r\n                return share;\r\n            }\r\n        }\r\n        return share;\r\n    }\r\n\r\n    function getShareArrayIndex(uint256 _tokenId, address owner) internal view returns (uint256){\r\n        uint256 index;\r\n        CurrentOwner[] memory shareList = tokenIdCurrentOwner[_tokenId];\r\n        for (uint i = 0; i < shareList.length; i++) {\r\n            if (shareList[i].owner == owner) {\r\n                index = i;\r\n                return index;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n    function addVoteInfo(address _voter, address operator, uint256 id) public {\r\n        uint256 _number = balanceOf(_voter, id);\r\n        Vote memory newVote = Vote({\r\n            voter : _voter,\r\n            number : _number\r\n            });\r\n        voteInfo[id].push(newVote);\r\n        _setApprovalForAll(_voter, operator, true);\r\n    }\r\n\r\n    function approvalForAll(address owner, address operator) public virtual {\r\n        //        operatorApprovals[owner][operator] = approved;\r\n        //        emit ApprovalForAll(owner, operator, approved);\r\n        _setApprovalForAll(owner, operator, true);\r\n    }\r\n\r\n    function approvedForAll(address account, address operator) public view virtual returns (bool) {\r\n        //return operatorApprovals[account][operator];\r\n        return isApprovedForAll(account, operator);\r\n    }\r\n\r\n    function getVoteInfo(uint256 id) public view returns (uint256, uint256){\r\n        uint256 all = initialOwners[id].amount;\r\n        uint256 realVoteNumber = 0;\r\n        Vote[] memory voteList = voteInfo[id];\r\n        for (uint i = 0; i < voteList.length; i++) {\r\n            realVoteNumber += voteList[i].number;\r\n        }\r\n        return (all, realVoteNumber);\r\n    }\r\n\r\n    function getVoteInfoResult(uint256 id) public view returns (bool){\r\n        uint256 all = initialOwners[id].amount;\r\n        uint256 realVoteNumber = 0;\r\n        bool result = false;\r\n        Vote[] memory voteList = voteInfo[id];\r\n        for (uint i = 0; i < voteList.length; i++) {\r\n            realVoteNumber += voteList[i].number;\r\n        }\r\n        uint256 per = calculatePercentage(realVoteNumber, all);\r\n        uint256 standard = calculatePercentage(2, 3);\r\n        if (per > standard) {\r\n            result = true;\r\n        }\r\n        if (per <= standard) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function calculatePercentage(uint256 numerator, uint256 denominator) public pure returns (uint256) {\r\n        require(denominator != 0, \"Denominator must be a non-zero value\");\r\n        uint256 percentage = (numerator * 100) / denominator;\r\n        return percentage;\r\n    }\r\n\r\n\r\n    function deposit() public payable {\r\n    }\r\n\r\n    function withdraw(address payable rec, uint256 amount) public {\r\n        address contractAddress = address(this);\r\n        require(contractAddress.balance > amount, \"less amount to withdraw\");\r\n        rec.transfer(amount);\r\n    }\r\n\r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getSigner(address sender, uint nonce, bytes calldata _data, bytes memory signature) public view returns (address) {\r\n        bytes32 messageHash = getHash(sender, nonce, _data);\r\n        bytes32 signedMessageHash = messageHash.toEthSignedMessageHash();\r\n        // Require that this signature hasn't already been executed\r\n        require(!executed[signedMessageHash], \"Already executed!\");\r\n        address signer = signedMessageHash.recover(signature);\r\n        return signer;\r\n    }\r\n\r\n    function getHash(address sender, uint nonce, bytes calldata _data) public pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(sender, nonce, _data));\r\n    }\r\n\r\n\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/AiYueNFTExchange.sol:45:43:\n   |\n45 |     function setTokenUri(uint256 tokenId, string memory uri) public {\n   |                                           ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/AiYueNFTExchange.sol:41:5:\n   |\n41 |     function uri(uint256 tokenId) override public view returns (string memory){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/AiYueNFTExchange.sol","start":1588,"end":1605},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/AiYueNFTExchange.sol:49:64:\n   |\n49 |     function mint(address account, uint256 id, uint256 amount, string memory uri, bytes memory data) public\n   |                                                                ^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/AiYueNFTExchange.sol:41:5:\n   |\n41 |     function uri(uint256 tokenId) override public view returns (string memory){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/AiYueNFTExchange.sol","start":1720,"end":1737},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":6276,"end":6300},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/AiYueNFTExchange.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"13","start":7462,"end":7482},"type":"Warning"}],"version":"0.8.18","long_version":"0.8.18+commit.87f61d96.Windows.msvc","zk_version":"1.3.10","sources":{"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Address":[1799],"Context":[1821],"ERC1155":[1222],"ERC165":[2440],"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC1155Receiver":[1385],"IERC165":[2452]},"id":1223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1345,"src":"134:24:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1386,"src":"159:32:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1470,"src":"192:46:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1800,"src":"239:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1822,"src":"273:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":2441,"src":"307:46:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["590:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1821,"src":"590:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"590:7:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["599:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2440,"src":"599:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"599:6:0"},{"baseName":{"id":13,"name":"IERC1155","nameLocations":["607:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"607:8:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"607:8:0"},{"baseName":{"id":15,"name":"IERC1155MetadataURI","nameLocations":["617:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1469,"src":"617:19:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"617:19:0"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"355:214:0","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1222,"linearizedBaseContracts":[1222,1469,1344,2440,2452,1821],"name":"ERC1155","nameLocation":"579:7:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":19,"libraryName":{"id":17,"name":"Address","nameLocations":["649:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1799,"src":"649:7:0"},"nodeType":"UsingForDirective","src":"643:26:0","typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":25,"mutability":"mutable","name":"_balances","nameLocation":"780:9:0","nodeType":"VariableDeclaration","scope":1222,"src":"724:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":24,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"724:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"743:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":31,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"899:18:0","nodeType":"VariableDeclaration","scope":1222,"src":"846:71:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":30,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":29,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"865:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":28,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":33,"mutability":"mutable","name":"_uri","nameLocation":"1053:4:0","nodeType":"VariableDeclaration","scope":1222,"src":"1038:19:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":32,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"1139:30:0","statements":[{"expression":{"arguments":[{"id":40,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1157:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":39,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1149:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1149:13:0"}]},"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"1064:38:0","text":" @dev See {_setURI}."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"uri_","nameLocation":"1133:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1119:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35,"name":"string","nodeType":"ElementaryTypeName","src":"1119:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1118:20:0"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"1139:0:0"},"scope":1222,"src":"1107:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2439,2451],"body":{"id":74,"nodeType":"Block","src":"1344:197:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1373:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":57,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"1393:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}],"id":56,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1388:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":58,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1388:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1344","typeString":"type(contract IERC1155)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1403:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1388:26:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1373:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1430:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":63,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1450:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1469_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1469_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":62,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1445:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1469","typeString":"type(contract IERC1155MetadataURI)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1471:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1445:37:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1430:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":70,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1522:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":68,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1498:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1222_$","typeString":"type(contract super ERC1155)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1504:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"1498:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:161:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":54,"id":73,"nodeType":"Return","src":"1354:180:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1175:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":75,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1245:17:0","nodeType":"FunctionDefinition","overrides":{"id":51,"nodeType":"OverrideSpecifier","overrides":[{"id":49,"name":"ERC165","nameLocations":["1312:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2440,"src":"1312:6:0"},{"id":50,"name":"IERC165","nameLocations":["1320:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"1320:7:0"}],"src":"1303:25:0"},"parameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"interfaceId","nameLocation":"1270:11:0","nodeType":"VariableDeclaration","scope":75,"src":"1263:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":46,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1263:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1262:20:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"1338:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":52,"name":"bool","nodeType":"ElementaryTypeName","src":"1338:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1337:6:0"},"scope":1222,"src":"1236:305:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1468],"body":{"id":86,"nodeType":"Block","src":"2015:28:0","statements":[{"expression":{"id":84,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2032:4:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":83,"id":85,"nodeType":"Return","src":"2025:11:0"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"1547:388:0","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":87,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1949:3:0","nodeType":"FunctionDefinition","overrides":{"id":80,"nodeType":"OverrideSpecifier","overrides":[],"src":"1982:8:0"},"parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":87,"src":"1953:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1952:9:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":87,"src":"2000:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":81,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1999:15:0"},"scope":1222,"src":"1940:103:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1282],"body":{"id":114,"nodeType":"Block","src":"2280:132:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":99,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2298:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2309:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:0","typeDescriptions":{}}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2321:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"2290:76:0"},{"expression":{"baseExpression":{"baseExpression":{"id":108,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2383:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":110,"indexExpression":{"id":109,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2393:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":112,"indexExpression":{"id":111,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2397:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":97,"id":113,"nodeType":"Return","src":"2376:29:0"}]},"documentation":{"id":88,"nodeType":"StructuredDocumentation","src":"2049:131:0","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":115,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2194:9:0","nodeType":"FunctionDefinition","overrides":{"id":94,"nodeType":"OverrideSpecifier","overrides":[],"src":"2253:8:0"},"parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"account","nameLocation":"2212:7:0","nodeType":"VariableDeclaration","scope":115,"src":"2204:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2204:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"id","nameLocation":"2229:2:0","nodeType":"VariableDeclaration","scope":115,"src":"2221:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:29:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"2271:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:0"},"scope":1222,"src":"2185:227:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1295],"body":{"id":178,"nodeType":"Block","src":"2720:335:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":130,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2738:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2747:6:0","memberName":"length","nodeType":"MemberAccess","src":"2738:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":132,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2757:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:6:0","memberName":"length","nodeType":"MemberAccess","src":"2757:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2730:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":137,"nodeType":"ExpressionStatement","src":"2730:83:0"},{"assignments":[142],"declarations":[{"constant":false,"id":142,"mutability":"mutable","name":"batchBalances","nameLocation":"2841:13:0","nodeType":"VariableDeclaration","scope":178,"src":"2824:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":141,"nodeType":"ArrayTypeName","src":"2824:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":149,"initialValue":{"arguments":[{"expression":{"id":146,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2871:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2880:6:0","memberName":"length","nodeType":"MemberAccess","src":"2871:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2857:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":144,"nodeType":"ArrayTypeName","src":"2861:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2824:63:0"},{"body":{"id":174,"nodeType":"Block","src":"2944:74:0","statements":[{"expression":{"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":161,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2958:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":163,"indexExpression":{"id":162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2972:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2958:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":165,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2987:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":167,"indexExpression":{"id":166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2996:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2987:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":168,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"3000:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":170,"indexExpression":{"id":169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3004:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":164,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2977:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2977:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":173,"nodeType":"ExpressionStatement","src":"2958:49:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2918:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":155,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2922:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:6:0","memberName":"length","nodeType":"MemberAccess","src":"2922:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":175,"initializationExpression":{"assignments":[151],"declarations":[{"constant":false,"id":151,"mutability":"mutable","name":"i","nameLocation":"2911:1:0","nodeType":"VariableDeclaration","scope":175,"src":"2903:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":153,"initialValue":{"hexValue":"30","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2903:13:0"},"loopExpression":{"expression":{"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2939:3:0","subExpression":{"id":158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2941:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":160,"nodeType":"ExpressionStatement","src":"2939:3:0"},"nodeType":"ForStatement","src":"2898:120:0"},{"expression":{"id":176,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3035:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":128,"id":177,"nodeType":"Return","src":"3028:20:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"2418:146:0","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":179,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2578:14:0","nodeType":"FunctionDefinition","overrides":{"id":124,"nodeType":"OverrideSpecifier","overrides":[],"src":"2684:8:0"},"parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"accounts","nameLocation":"2619:8:0","nodeType":"VariableDeclaration","scope":179,"src":"2602:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ArrayTypeName","src":"2602:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"ids","nameLocation":"2654:3:0","nodeType":"VariableDeclaration","scope":179,"src":"2637:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":121,"nodeType":"ArrayTypeName","src":"2637:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2592:71:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":179,"src":"2702:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":126,"nodeType":"ArrayTypeName","src":"2702:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2701:18:0"},"scope":1222,"src":"2569:486:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":195,"nodeType":"Block","src":"3207:69:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":189,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3236:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3250:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3260:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":188,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3217:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"ExpressionStatement","src":"3217:52:0"}]},"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"3061:57:0","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":196,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3132:17:0","nodeType":"FunctionDefinition","overrides":{"id":186,"nodeType":"OverrideSpecifier","overrides":[],"src":"3198:8:0"},"parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"operator","nameLocation":"3158:8:0","nodeType":"VariableDeclaration","scope":196,"src":"3150:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"3150:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"approved","nameLocation":"3173:8:0","nodeType":"VariableDeclaration","scope":196,"src":"3168:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":183,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3149:33:0"},"returnParameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"3207:0:0"},"scope":1222,"src":"3123:153:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":213,"nodeType":"Block","src":"3448:61:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":207,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"3465:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":209,"indexExpression":{"id":208,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3484:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":211,"indexExpression":{"id":210,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3493:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":206,"id":212,"nodeType":"Return","src":"3458:44:0"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"3282:56:0","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":214,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3352:16:0","nodeType":"FunctionDefinition","overrides":{"id":203,"nodeType":"OverrideSpecifier","overrides":[],"src":"3424:8:0"},"parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"account","nameLocation":"3377:7:0","nodeType":"VariableDeclaration","scope":214,"src":"3369:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"operator","nameLocation":"3394:8:0","nodeType":"VariableDeclaration","scope":214,"src":"3386:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3368:35:0"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"3442:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"3442:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3441:6:0"},"scope":1222,"src":"3343:166:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1327],"body":{"id":251,"nodeType":"Block","src":"3745:225:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":230,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3776:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3784:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3784:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3776:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":235,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3817:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":236,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3823:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":234,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3800:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3776:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3850:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3755:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:153:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"3755:153:0"},{"expression":{"arguments":[{"id":244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3936:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":245,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3942:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":246,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"3946:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":247,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3950:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":248,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3958:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":243,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"3918:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3918:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"3918:45:0"}]},"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3515:56:0","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":252,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3585:16:0","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"3736:8:0"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"from","nameLocation":"3619:4:0","nodeType":"VariableDeclaration","scope":252,"src":"3611:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3611:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"to","nameLocation":"3641:2:0","nodeType":"VariableDeclaration","scope":252,"src":"3633:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"id","nameLocation":"3661:2:0","nodeType":"VariableDeclaration","scope":252,"src":"3653:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"amount","nameLocation":"3681:6:0","nodeType":"VariableDeclaration","scope":252,"src":"3673:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3673:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"data","nameLocation":"3710:4:0","nodeType":"VariableDeclaration","scope":252,"src":"3697:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":224,"name":"bytes","nodeType":"ElementaryTypeName","src":"3697:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3601:119:0"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"3745:0:0"},"scope":1222,"src":"3576:394:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":291,"nodeType":"Block","src":"4236:232:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":270,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4267:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":271,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4275:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4267:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":275,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4308:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4314:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":274,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"4291:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4267:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4341:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4246:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:153:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"4246:153:0"},{"expression":{"arguments":[{"id":284,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4432:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":285,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4438:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":286,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4442:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":287,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4447:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"4456:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":283,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4409:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"4409:52:0"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"3976:61:0","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":292,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4051:21:0","nodeType":"FunctionDefinition","overrides":{"id":267,"nodeType":"OverrideSpecifier","overrides":[],"src":"4227:8:0"},"parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"from","nameLocation":"4090:4:0","nodeType":"VariableDeclaration","scope":292,"src":"4082:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"to","nameLocation":"4112:2:0","nodeType":"VariableDeclaration","scope":292,"src":"4104:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"ids","nameLocation":"4141:3:0","nodeType":"VariableDeclaration","scope":292,"src":"4124:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":259,"nodeType":"ArrayTypeName","src":"4124:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"amounts","nameLocation":"4171:7:0","nodeType":"VariableDeclaration","scope":292,"src":"4154:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4154:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":262,"nodeType":"ArrayTypeName","src":"4154:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"data","nameLocation":"4201:4:0","nodeType":"VariableDeclaration","scope":292,"src":"4188:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":264,"name":"bytes","nodeType":"ElementaryTypeName","src":"4188:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4072:139:0"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"4236:0:0"},"scope":1222,"src":"4042:426:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":408,"nodeType":"Block","src":"5081:784:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5099:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5113:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5105:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"5105:7:0","typeDescriptions":{}}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5105:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5099:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5117:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"5091:66:0"},{"assignments":[317],"declarations":[{"constant":false,"id":317,"mutability":"mutable","name":"operator","nameLocation":"5176:8:0","nodeType":"VariableDeclaration","scope":408,"src":"5168:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":320,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":318,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"5187:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5168:31:0"},{"assignments":[325],"declarations":[{"constant":false,"id":325,"mutability":"mutable","name":"ids","nameLocation":"5226:3:0","nodeType":"VariableDeclaration","scope":408,"src":"5209:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":324,"nodeType":"ArrayTypeName","src":"5209:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":329,"initialValue":{"arguments":[{"id":327,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5250:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":326,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"5232:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5232:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5209:44:0"},{"assignments":[334],"declarations":[{"constant":false,"id":334,"mutability":"mutable","name":"amounts","nameLocation":"5280:7:0","nodeType":"VariableDeclaration","scope":408,"src":"5263:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ArrayTypeName","src":"5263:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":338,"initialValue":{"arguments":[{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5308:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":335,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"5290:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5263:52:0"},{"expression":{"arguments":[{"id":340,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5347:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5357:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5363:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":343,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5367:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":344,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5372:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":345,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5381:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":339,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5326:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"5326:60:0"},{"assignments":[349],"declarations":[{"constant":false,"id":349,"mutability":"mutable","name":"fromBalance","nameLocation":"5405:11:0","nodeType":"VariableDeclaration","scope":408,"src":"5397:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":355,"initialValue":{"baseExpression":{"baseExpression":{"id":350,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5419:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":352,"indexExpression":{"id":351,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5429:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":354,"indexExpression":{"id":353,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5433:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5397:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":357,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5456:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":358,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5471:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5456:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5479:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5448:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5448:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5448:76:0"},{"id":373,"nodeType":"UncheckedBlock","src":"5534:77:0","statements":[{"expression":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":363,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5558:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":366,"indexExpression":{"id":364,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5568:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5558:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":367,"indexExpression":{"id":365,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5572:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5558:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":368,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5580:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":369,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5594:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5580:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5558:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ExpressionStatement","src":"5558:42:0"}]},{"expression":{"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":374,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5620:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":377,"indexExpression":{"id":375,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5630:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5620:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":378,"indexExpression":{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5634:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5620:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":379,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5641:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":381,"nodeType":"ExpressionStatement","src":"5620:27:0"},{"eventCall":{"arguments":[{"id":383,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5678:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5688:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":385,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5694:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5698:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":387,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5702:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":382,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5663:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5663:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"EmitStatement","src":"5658:51:0"},{"expression":{"arguments":[{"id":391,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5740:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":392,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":393,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5756:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":394,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5760:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":395,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5765:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":396,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5774:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":390,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5720:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"ExpressionStatement","src":"5720:59:0"},{"expression":{"arguments":[{"id":400,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5821:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":401,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5831:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5837:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5841:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":404,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"5845:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":405,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5853:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":399,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5790:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5790:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"5790:68:0"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"4474:439:0","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"4927:17:0","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"from","nameLocation":"4962:4:0","nodeType":"VariableDeclaration","scope":409,"src":"4954:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"to","nameLocation":"4984:2:0","nodeType":"VariableDeclaration","scope":409,"src":"4976:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"4976:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"id","nameLocation":"5004:2:0","nodeType":"VariableDeclaration","scope":409,"src":"4996:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"amount","nameLocation":"5024:6:0","nodeType":"VariableDeclaration","scope":409,"src":"5016:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"5016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"data","nameLocation":"5053:4:0","nodeType":"VariableDeclaration","scope":409,"src":"5040:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":302,"name":"bytes","nodeType":"ElementaryTypeName","src":"5040:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4944:119:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"5081:0:0"},"scope":1222,"src":"4918:947:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"6399:927:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":426,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6417:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6421:6:0","memberName":"length","nodeType":"MemberAccess","src":"6417:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":428,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6431:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6439:6:0","memberName":"length","nodeType":"MemberAccess","src":"6431:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6417:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6447:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6409:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6409:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"6409:81:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"6508:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6522:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6514:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"6514:7:0","typeDescriptions":{}}},"id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6514:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6508:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6526:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6500:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"ExpressionStatement","src":"6500:66:0"},{"assignments":[445],"declarations":[{"constant":false,"id":445,"mutability":"mutable","name":"operator","nameLocation":"6585:8:0","nodeType":"VariableDeclaration","scope":543,"src":"6577:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":448,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":446,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"6596:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6596:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6577:31:0"},{"expression":{"arguments":[{"id":450,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6640:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":451,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6650:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"6656:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6660:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":454,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6665:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":455,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6674:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":449,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6619:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"6619:60:0"},{"body":{"id":515,"nodeType":"Block","src":"6731:370:0","statements":[{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"id","nameLocation":"6753:2:0","nodeType":"VariableDeclaration","scope":515,"src":"6745:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6745:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":474,"initialValue":{"baseExpression":{"id":471,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6758:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":473,"indexExpression":{"id":472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6762:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6758:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6745:19:0"},{"assignments":[476],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"amount","nameLocation":"6786:6:0","nodeType":"VariableDeclaration","scope":515,"src":"6778:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":480,"initialValue":{"baseExpression":{"id":477,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6795:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":479,"indexExpression":{"id":478,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6803:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6795:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6778:27:0"},{"assignments":[482],"declarations":[{"constant":false,"id":482,"mutability":"mutable","name":"fromBalance","nameLocation":"6828:11:0","nodeType":"VariableDeclaration","scope":515,"src":"6820:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":488,"initialValue":{"baseExpression":{"baseExpression":{"id":483,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"6842:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":485,"indexExpression":{"id":484,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6852:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":487,"indexExpression":{"id":486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6856:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6820:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":490,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"6883:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":491,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6898:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6906:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6875:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"6875:76:0"},{"id":506,"nodeType":"UncheckedBlock","src":"6965:85:0","statements":[{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":496,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"6993:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":499,"indexExpression":{"id":497,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7003:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6993:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":500,"indexExpression":{"id":498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7007:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6993:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":501,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"7015:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":502,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7029:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7015:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6993:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"nodeType":"ExpressionStatement","src":"6993:42:0"}]},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":507,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"7063:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":510,"indexExpression":{"id":508,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"7073:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7063:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":511,"indexExpression":{"id":509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7077:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7063:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"7084:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7063:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ExpressionStatement","src":"7063:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6710:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":463,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6714:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6718:6:0","memberName":"length","nodeType":"MemberAccess","src":"6714:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6710:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":516,"initializationExpression":{"assignments":[459],"declarations":[{"constant":false,"id":459,"mutability":"mutable","name":"i","nameLocation":"6703:1:0","nodeType":"VariableDeclaration","scope":516,"src":"6695:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"6695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":461,"initialValue":{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6695:13:0"},"loopExpression":{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6726:3:0","subExpression":{"id":466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6728:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"6726:3:0"},"nodeType":"ForStatement","src":"6690:411:0"},{"eventCall":{"arguments":[{"id":518,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7130:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7140:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7146:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"7150:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":522,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7155:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":517,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"7116:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7116:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"7111:52:0"},{"expression":{"arguments":[{"id":526,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7194:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7204:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7210:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"7214:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":530,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7219:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7228:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":525,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7174:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7174:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"7174:59:0"},{"expression":{"arguments":[{"id":535,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7280:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7290:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7296:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":538,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"7300:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":539,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7305:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":540,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7314:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"7244:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7244:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"7244:75:0"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"5871:335:0","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"6220:22:0","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"from","nameLocation":"6260:4:0","nodeType":"VariableDeclaration","scope":544,"src":"6252:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"6252:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"to","nameLocation":"6282:2:0","nodeType":"VariableDeclaration","scope":544,"src":"6274:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"6274:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"ids","nameLocation":"6311:3:0","nodeType":"VariableDeclaration","scope":544,"src":"6294:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":416,"nodeType":"ArrayTypeName","src":"6294:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"amounts","nameLocation":"6341:7:0","nodeType":"VariableDeclaration","scope":544,"src":"6324:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":419,"nodeType":"ArrayTypeName","src":"6324:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"data","nameLocation":"6371:4:0","nodeType":"VariableDeclaration","scope":544,"src":"6358:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":421,"name":"bytes","nodeType":"ElementaryTypeName","src":"6358:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6242:139:0"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"6399:0:0"},"scope":1222,"src":"6211:1115:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":554,"nodeType":"Block","src":"8205:30:0","statements":[{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"8215:4:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":551,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8222:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8215:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":553,"nodeType":"ExpressionStatement","src":"8215:13:0"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"7332:812:0","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"8158:7:0","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"newuri","nameLocation":"8180:6:0","nodeType":"VariableDeclaration","scope":555,"src":"8166:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":546,"name":"string","nodeType":"ElementaryTypeName","src":"8166:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8165:22:0"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"8205:0:0"},"scope":1222,"src":"8149:86:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"8699:580:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8717:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8731:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"8723:7:0","typeDescriptions":{}}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8717:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8735:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8709:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8709:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":576,"nodeType":"ExpressionStatement","src":"8709:62:0"},{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"operator","nameLocation":"8790:8:0","nodeType":"VariableDeclaration","scope":655,"src":"8782:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"8782:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":581,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"8801:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8801:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8782:31:0"},{"assignments":[586],"declarations":[{"constant":false,"id":586,"mutability":"mutable","name":"ids","nameLocation":"8840:3:0","nodeType":"VariableDeclaration","scope":655,"src":"8823:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8823:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":585,"nodeType":"ArrayTypeName","src":"8823:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":590,"initialValue":{"arguments":[{"id":588,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8864:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":587,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8846:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8846:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8823:44:0"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"amounts","nameLocation":"8894:7:0","nodeType":"VariableDeclaration","scope":655,"src":"8877:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"nodeType":"ArrayTypeName","src":"8877:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":599,"initialValue":{"arguments":[{"id":597,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8922:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":596,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8904:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8904:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8877:52:0"},{"expression":{"arguments":[{"id":601,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8961:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8979:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8971:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"8971:7:0","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8971:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8983:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"8987:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":608,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8992:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":609,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9001:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":600,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8940:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"8940:66:0"},{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":612,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"9017:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":615,"indexExpression":{"id":613,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9027:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9017:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":616,"indexExpression":{"id":614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9031:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9017:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9038:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9017:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":619,"nodeType":"ExpressionStatement","src":"9017:27:0"},{"eventCall":{"arguments":[{"id":621,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"9074:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9092:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9084:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"9084:7:0","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9084:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9096:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9100:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":628,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9104:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":620,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9059:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9059:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"EmitStatement","src":"9054:57:0"},{"expression":{"arguments":[{"id":632,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"9142:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9160:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:0","typeDescriptions":{}}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9164:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9168:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":639,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9173:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":640,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9182:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":631,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"9122:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9122:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"9122:65:0"},{"expression":{"arguments":[{"id":644,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"9229:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9239:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"9239:7:0","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9239:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9251:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9255:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9259:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9267:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":643,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"9198:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9198:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"9198:74:0"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"8241:362:0","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8617:5:0","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"to","nameLocation":"8631:2:0","nodeType":"VariableDeclaration","scope":656,"src":"8623:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"8623:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"id","nameLocation":"8643:2:0","nodeType":"VariableDeclaration","scope":656,"src":"8635:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"amount","nameLocation":"8655:6:0","nodeType":"VariableDeclaration","scope":656,"src":"8647:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"8676:4:0","nodeType":"VariableDeclaration","scope":656,"src":"8663:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"8663:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8622:59:0"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"8699:0:0"},"scope":1222,"src":"8608:671:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":766,"nodeType":"Block","src":"9823:637:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"9841:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9855:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9847:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"9847:7:0","typeDescriptions":{}}},"id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9847:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9841:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9859:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9833:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"9833:62:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":681,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"9913:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9917:6:0","memberName":"length","nodeType":"MemberAccess","src":"9913:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":683,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"9927:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9935:6:0","memberName":"length","nodeType":"MemberAccess","src":"9927:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9913:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9943:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9905:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9905:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9905:81:0"},{"assignments":[690],"declarations":[{"constant":false,"id":690,"mutability":"mutable","name":"operator","nameLocation":"10005:8:0","nodeType":"VariableDeclaration","scope":766,"src":"9997:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"9997:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":693,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10016:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10016:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9997:31:0"},{"expression":{"arguments":[{"id":695,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10060:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:0","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10082:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10086:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":702,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10091:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":703,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10100:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":694,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"10039:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10039:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"ExpressionStatement","src":"10039:66:0"},{"body":{"id":729,"nodeType":"Block","src":"10157:60:0","statements":[{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":717,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"10171:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":722,"indexExpression":{"baseExpression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10181:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":720,"indexExpression":{"id":719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10185:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10181:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10171:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":723,"indexExpression":{"id":721,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10189:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":724,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10196:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"indexExpression":{"id":725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10204:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10196:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":728,"nodeType":"ExpressionStatement","src":"10171:35:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10136:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":711,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10140:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10144:6:0","memberName":"length","nodeType":"MemberAccess","src":"10140:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10136:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":730,"initializationExpression":{"assignments":[707],"declarations":[{"constant":false,"id":707,"mutability":"mutable","name":"i","nameLocation":"10129:1:0","nodeType":"VariableDeclaration","scope":730,"src":"10121:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":709,"initialValue":{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10133:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:13:0"},"loopExpression":{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10152:3:0","subExpression":{"id":714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10152:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ExpressionStatement","src":"10152:3:0"},"nodeType":"ForStatement","src":"10116:101:0"},{"eventCall":{"arguments":[{"id":732,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10246:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10264:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10256:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"10256:7:0","typeDescriptions":{}}},"id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10256:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":737,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10268:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10272:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":739,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10277:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":731,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"10232:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10232:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"EmitStatement","src":"10227:58:0"},{"expression":{"arguments":[{"id":743,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10316:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10334:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10326:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:0","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10338:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10342:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":750,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10347:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10356:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":742,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"10296:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"10296:65:0"},{"expression":{"arguments":[{"id":755,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"10408:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10426:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10418:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"10418:7:0","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10418:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":760,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10430:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"10434:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":762,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"10439:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":763,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10448:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":754,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"10372:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10372:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"ExpressionStatement","src":"10372:81:0"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"9285:379:0","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"9678:10:0","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"9706:2:0","nodeType":"VariableDeclaration","scope":767,"src":"9698:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"9698:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"ids","nameLocation":"9735:3:0","nodeType":"VariableDeclaration","scope":767,"src":"9718:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"9718:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":661,"nodeType":"ArrayTypeName","src":"9718:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"amounts","nameLocation":"9765:7:0","nodeType":"VariableDeclaration","scope":767,"src":"9748:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"9748:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ArrayTypeName","src":"9748:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"data","nameLocation":"9795:4:0","nodeType":"VariableDeclaration","scope":767,"src":"9782:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":666,"name":"bytes","nodeType":"ElementaryTypeName","src":"9782:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9688:117:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"9823:0:0"},"scope":1222,"src":"9669:791:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":871,"nodeType":"Block","src":"10820:682:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":778,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"10838:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10854:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10846:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10846:7:0","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10846:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10838:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10858:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10830:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10830:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"10830:66:0"},{"assignments":[788],"declarations":[{"constant":false,"id":788,"mutability":"mutable","name":"operator","nameLocation":"10915:8:0","nodeType":"VariableDeclaration","scope":871,"src":"10907:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"10907:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":789,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"10926:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10907:31:0"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"ids","nameLocation":"10965:3:0","nodeType":"VariableDeclaration","scope":871,"src":"10948:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ArrayTypeName","src":"10948:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":800,"initialValue":{"arguments":[{"id":798,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10989:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":797,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"10971:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10971:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10948:44:0"},{"assignments":[805],"declarations":[{"constant":false,"id":805,"mutability":"mutable","name":"amounts","nameLocation":"11019:7:0","nodeType":"VariableDeclaration","scope":871,"src":"11002:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"11002:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ArrayTypeName","src":"11002:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":809,"initialValue":{"arguments":[{"id":807,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11047:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"11029:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11029:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11002:52:0"},{"expression":{"arguments":[{"id":811,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11086:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11096:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11110:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11102:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"11102:7:0","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11102:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"11114:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":818,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"11119:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11128:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":810,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"11065:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"ExpressionStatement","src":"11065:66:0"},{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"fromBalance","nameLocation":"11150:11:0","nodeType":"VariableDeclaration","scope":871,"src":"11142:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11142:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":829,"initialValue":{"baseExpression":{"baseExpression":{"id":824,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"11164:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":826,"indexExpression":{"id":825,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"11174:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":828,"indexExpression":{"id":827,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11178:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11142:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"11201:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":832,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11216:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11201:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11224:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11193:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"11193:70:0"},{"id":847,"nodeType":"UncheckedBlock","src":"11273:77:0","statements":[{"expression":{"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":837,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"11297:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":840,"indexExpression":{"id":838,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"11307:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11297:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":841,"indexExpression":{"id":839,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11311:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11297:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"11319:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11333:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11319:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11297:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":846,"nodeType":"ExpressionStatement","src":"11297:42:0"}]},{"eventCall":{"arguments":[{"id":849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11380:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11390:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11404:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11396:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"11396:7:0","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11396:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"11408:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"11412:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":848,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"11365:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11365:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"EmitStatement","src":"11360:59:0"},{"expression":{"arguments":[{"id":860,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11450:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11460:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:0","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"11478:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":867,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"11483:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11492:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":859,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11430:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11430:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"11430:65:0"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"10466:275:0","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":872,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10755:5:0","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"from","nameLocation":"10769:4:0","nodeType":"VariableDeclaration","scope":872,"src":"10761:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"id","nameLocation":"10783:2:0","nodeType":"VariableDeclaration","scope":872,"src":"10775:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"10775:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"amount","nameLocation":"10795:6:0","nodeType":"VariableDeclaration","scope":872,"src":"10787:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10760:42:0"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"10820:0:0"},"scope":1222,"src":"10746:756:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"11840:814:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":885,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"11858:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11874:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11866:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"11866:7:0","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11866:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11858:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11878:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11850:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11850:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"11850:66:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":895,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"11934:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11938:6:0","memberName":"length","nodeType":"MemberAccess","src":"11934:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":897,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"11948:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11956:6:0","memberName":"length","nodeType":"MemberAccess","src":"11948:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11934:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11964:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11926:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11926:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"11926:81:0"},{"assignments":[904],"declarations":[{"constant":false,"id":904,"mutability":"mutable","name":"operator","nameLocation":"12026:8:0","nodeType":"VariableDeclaration","scope":994,"src":"12018:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":907,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":905,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"12037:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12018:31:0"},{"expression":{"arguments":[{"id":909,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"12081:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12091:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12105:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12097:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"12097:7:0","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12097:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12109:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":916,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12114:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12123:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":908,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12060:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12060:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"12060:66:0"},{"body":{"id":969,"nodeType":"Block","src":"12178:323:0","statements":[{"assignments":[932],"declarations":[{"constant":false,"id":932,"mutability":"mutable","name":"id","nameLocation":"12200:2:0","nodeType":"VariableDeclaration","scope":969,"src":"12192:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"12192:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":936,"initialValue":{"baseExpression":{"id":933,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12205:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":935,"indexExpression":{"id":934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12209:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12205:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12192:19:0"},{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"amount","nameLocation":"12233:6:0","nodeType":"VariableDeclaration","scope":969,"src":"12225:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"initialValue":{"baseExpression":{"id":939,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12242:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":941,"indexExpression":{"id":940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12250:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12242:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12225:27:0"},{"assignments":[944],"declarations":[{"constant":false,"id":944,"mutability":"mutable","name":"fromBalance","nameLocation":"12275:11:0","nodeType":"VariableDeclaration","scope":969,"src":"12267:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":950,"initialValue":{"baseExpression":{"baseExpression":{"id":945,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"12289:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":947,"indexExpression":{"id":946,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"12299:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":949,"indexExpression":{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12303:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12267:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"12330:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":953,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"12345:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12330:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12353:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12322:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12322:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"ExpressionStatement","src":"12322:70:0"},{"id":968,"nodeType":"UncheckedBlock","src":"12406:85:0","statements":[{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":958,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"12434:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":961,"indexExpression":{"id":959,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"12444:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12434:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":962,"indexExpression":{"id":960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12448:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12434:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"12456:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":964,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"12470:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12456:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12434:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"nodeType":"ExpressionStatement","src":"12434:42:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12157:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":925,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12161:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:6:0","memberName":"length","nodeType":"MemberAccess","src":"12161:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12157:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":970,"initializationExpression":{"assignments":[921],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"i","nameLocation":"12150:1:0","nodeType":"VariableDeclaration","scope":970,"src":"12142:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12142:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":923,"initialValue":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12154:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12142:13:0"},"loopExpression":{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12173:3:0","subExpression":{"id":928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12173:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"nodeType":"ExpressionStatement","src":"12173:3:0"},"nodeType":"ForStatement","src":"12137:364:0"},{"eventCall":{"arguments":[{"id":972,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"12530:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12540:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12554:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12546:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:0","typeDescriptions":{}}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":978,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12558:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":979,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12563:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":971,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"12516:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12516:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"EmitStatement","src":"12511:60:0"},{"expression":{"arguments":[{"id":983,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"12602:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":984,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"12612:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12618:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"12618:7:0","typeDescriptions":{}}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12618:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":989,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"12630:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":990,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"12635:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12644:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":982,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"12582:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12582:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"12582:65:0"}]},"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"11508:228:0","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":995,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"11750:10:0","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"from","nameLocation":"11769:4:0","nodeType":"VariableDeclaration","scope":995,"src":"11761:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"11761:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"11792:3:0","nodeType":"VariableDeclaration","scope":995,"src":"11775:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"11775:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"11775:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"amounts","nameLocation":"11814:7:0","nodeType":"VariableDeclaration","scope":995,"src":"11797:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"11797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"11797:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11760:62:0"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"11840:0:0"},"scope":1222,"src":"11741:913:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"12883:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"12901:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1007,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"12910:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12901:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12920:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12893:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12893:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"12893:71:0"},{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1012,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"12974:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1015,"indexExpression":{"id":1013,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"12993:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1016,"indexExpression":{"id":1014,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"13000:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12974:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1017,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"13012:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12974:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1019,"nodeType":"ExpressionStatement","src":"12974:46:0"},{"eventCall":{"arguments":[{"id":1021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"13050:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1022,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"13057:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"13067:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1020,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"13035:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13035:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"EmitStatement","src":"13030:46:0"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"12660:125:0","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12799:18:0","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"owner","nameLocation":"12826:5:0","nodeType":"VariableDeclaration","scope":1027,"src":"12818:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"12818:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"operator","nameLocation":"12841:8:0","nodeType":"VariableDeclaration","scope":1027,"src":"12833:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12833:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"approved","nameLocation":"12856:8:0","nodeType":"VariableDeclaration","scope":1027,"src":"12851:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1001,"name":"bool","nodeType":"ElementaryTypeName","src":"12851:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12817:48:0"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"12883:0:0"},"scope":1222,"src":"12790:293:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"14231:2:0","statements":[]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"13089:925:0","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14028:20:0","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"operator","nameLocation":"14066:8:0","nodeType":"VariableDeclaration","scope":1046,"src":"14058:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"14058:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"from","nameLocation":"14092:4:0","nodeType":"VariableDeclaration","scope":1046,"src":"14084:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"14084:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"to","nameLocation":"14114:2:0","nodeType":"VariableDeclaration","scope":1046,"src":"14106:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"ids","nameLocation":"14143:3:0","nodeType":"VariableDeclaration","scope":1046,"src":"14126:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ArrayTypeName","src":"14126:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"amounts","nameLocation":"14173:7:0","nodeType":"VariableDeclaration","scope":1046,"src":"14156:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"14156:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"nodeType":"ArrayTypeName","src":"14156:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"data","nameLocation":"14203:4:0","nodeType":"VariableDeclaration","scope":1046,"src":"14190:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"14190:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14048:165:0"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"14231:0:0"},"scope":1222,"src":"14019:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"15377:2:0","statements":[]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"14239:922:0","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15175:19:0","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"operator","nameLocation":"15212:8:0","nodeType":"VariableDeclaration","scope":1065,"src":"15204:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"15204:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"from","nameLocation":"15238:4:0","nodeType":"VariableDeclaration","scope":1065,"src":"15230:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"15230:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"to","nameLocation":"15260:2:0","nodeType":"VariableDeclaration","scope":1065,"src":"15252:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"15252:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"ids","nameLocation":"15289:3:0","nodeType":"VariableDeclaration","scope":1065,"src":"15272:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"15272:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ArrayTypeName","src":"15272:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"amounts","nameLocation":"15319:7:0","nodeType":"VariableDeclaration","scope":1065,"src":"15302:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"15302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ArrayTypeName","src":"15302:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"data","nameLocation":"15349:4:0","nodeType":"VariableDeclaration","scope":1065,"src":"15336:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"15336:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15194:165:0"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"15377:0:0"},"scope":1222,"src":"15166:213:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"15578:532:0","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1080,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"15592:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15595:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"15592:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15592:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1126,"nodeType":"IfStatement","src":"15588:516:0","trueBody":{"id":1125,"nodeType":"Block","src":"15609:495:0","statements":[{"clauses":[{"block":{"id":1107,"nodeType":"Block","src":"15726:184:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1096,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"15748:8:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1097,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"15760:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15777:17:0","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"15760:34:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15795:8:0","memberName":"selector","nodeType":"MemberAccess","src":"15760:43:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15748:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"15744:152:0","trueBody":{"id":1105,"nodeType":"Block","src":"15805:91:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15834:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1101,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15827:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15827:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"ExpressionStatement","src":"15827:50:0"}]}}]},"errorName":"","id":1108,"nodeType":"TryCatchClause","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"response","nameLocation":"15716:8:0","nodeType":"VariableDeclaration","scope":1108,"src":"15709:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1093,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15709:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15708:17:0"},"src":"15700:210:0"},{"block":{"id":1116,"nodeType":"Block","src":"15945:47:0","statements":[{"expression":{"arguments":[{"id":1113,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"15970:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1112,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15963:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15963:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"15963:14:0"}]},"errorName":"Error","id":1117,"nodeType":"TryCatchClause","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"reason","nameLocation":"15937:6:0","nodeType":"VariableDeclaration","scope":1117,"src":"15923:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1109,"name":"string","nodeType":"ElementaryTypeName","src":"15923:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15922:22:0"},"src":"15911:81:0"},{"block":{"id":1122,"nodeType":"Block","src":"15999:95:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16024:54:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1118,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16017:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16017:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"ExpressionStatement","src":"16017:62:0"}]},"errorName":"","id":1123,"nodeType":"TryCatchClause","src":"15993:101:0"}],"externalCall":{"arguments":[{"id":1087,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"15666:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"15676:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"15682:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"15686:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1091,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"15694:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"15644:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1083,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"15627:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1385","typeString":"contract IERC1155Receiver"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15648:17:0","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"15627:38:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:72:0","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1124,"nodeType":"TryStatement","src":"15623:471:0"}]}}]},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"15394:30:0","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"operator","nameLocation":"15442:8:0","nodeType":"VariableDeclaration","scope":1128,"src":"15434:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"15434:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"from","nameLocation":"15468:4:0","nodeType":"VariableDeclaration","scope":1128,"src":"15460:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"15460:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"to","nameLocation":"15490:2:0","nodeType":"VariableDeclaration","scope":1128,"src":"15482:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"15482:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"id","nameLocation":"15510:2:0","nodeType":"VariableDeclaration","scope":1128,"src":"15502:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"15502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"amount","nameLocation":"15530:6:0","nodeType":"VariableDeclaration","scope":1128,"src":"15522:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"15522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"data","nameLocation":"15559:4:0","nodeType":"VariableDeclaration","scope":1128,"src":"15546:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1076,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15424:145:0"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"15578:0:0"},"scope":1222,"src":"15385:725:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1192,"nodeType":"Block","src":"16334:574:0","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1145,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"16348:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16351:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"16348:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16348:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"IfStatement","src":"16344:558:0","trueBody":{"id":1190,"nodeType":"Block","src":"16365:537:0","statements":[{"clauses":[{"block":{"id":1172,"nodeType":"Block","src":"16519:189:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"16541:8:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1162,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"16553:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16570:22:0","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"16553:39:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16593:8:0","memberName":"selector","nodeType":"MemberAccess","src":"16553:48:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16541:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1171,"nodeType":"IfStatement","src":"16537:157:0","trueBody":{"id":1170,"nodeType":"Block","src":"16603:91:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16632:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1166,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16625:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16625:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"16625:50:0"}]}}]},"errorName":"","id":1173,"nodeType":"TryCatchClause","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"response","nameLocation":"16496:8:0","nodeType":"VariableDeclaration","scope":1173,"src":"16489:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1158,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16489:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16471:47:0"},"src":"16463:245:0"},{"block":{"id":1181,"nodeType":"Block","src":"16743:47:0","statements":[{"expression":{"arguments":[{"id":1178,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"16768:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1177,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16761:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16761:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"16761:14:0"}]},"errorName":"Error","id":1182,"nodeType":"TryCatchClause","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"reason","nameLocation":"16735:6:0","nodeType":"VariableDeclaration","scope":1182,"src":"16721:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1174,"name":"string","nodeType":"ElementaryTypeName","src":"16721:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16720:22:0"},"src":"16709:81:0"},{"block":{"id":1187,"nodeType":"Block","src":"16797:95:0","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16822:54:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1183,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16815:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16815:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"16815:62:0"}]},"errorName":"","id":1188,"nodeType":"TryCatchClause","src":"16791:101:0"}],"externalCall":{"arguments":[{"id":1152,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"16427:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"16437:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"16443:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1155,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"16448:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"16457:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1149,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"16400:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"16383:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1385_$","typeString":"type(contract IERC1155Receiver)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1385","typeString":"contract IERC1155Receiver"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16404:22:0","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"16383:43:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:79:0","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1189,"nodeType":"TryStatement","src":"16379:513:0"}]}}]},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"16125:35:0","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"operator","nameLocation":"16178:8:0","nodeType":"VariableDeclaration","scope":1193,"src":"16170:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"16170:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"from","nameLocation":"16204:4:0","nodeType":"VariableDeclaration","scope":1193,"src":"16196:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"16196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"to","nameLocation":"16226:2:0","nodeType":"VariableDeclaration","scope":1193,"src":"16218:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"16218:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"ids","nameLocation":"16255:3:0","nodeType":"VariableDeclaration","scope":1193,"src":"16238:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"16238:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1136,"nodeType":"ArrayTypeName","src":"16238:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"amounts","nameLocation":"16285:7:0","nodeType":"VariableDeclaration","scope":1193,"src":"16268:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"16268:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ArrayTypeName","src":"16268:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"data","nameLocation":"16315:4:0","nodeType":"VariableDeclaration","scope":1193,"src":"16302:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"16302:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16160:165:0"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"16334:0:0"},"scope":1222,"src":"16116:792:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1220,"nodeType":"Block","src":"16998:109:0","statements":[{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"array","nameLocation":"17025:5:0","nodeType":"VariableDeclaration","scope":1220,"src":"17008:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ArrayTypeName","src":"17008:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1211,"initialValue":{"arguments":[{"hexValue":"31","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17047:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17033:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"17037:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1207,"nodeType":"ArrayTypeName","src":"17037:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17033:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17008:41:0"},{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1212,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"17059:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1214,"indexExpression":{"hexValue":"30","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17065:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1215,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"17070:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17059:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"17059:18:0"},{"expression":{"id":1218,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"17095:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1200,"id":1219,"nodeType":"Return","src":"17088:12:0"}]},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"16923:17:0","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"element","nameLocation":"16949:7:0","nodeType":"VariableDeclaration","scope":1221,"src":"16941:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"16941:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16940:17:0"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"16980:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"16980:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ArrayTypeName","src":"16980:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16979:18:0"},"scope":1222,"src":"16914:193:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1223,"src":"570:16539:0","usedErrors":[]}],"src":"109:17001:0"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1344],"IERC165":[2452]},"id":1345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1224,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1345,"sourceUnit":2453,"src":"135:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1227,"name":"IERC165","nameLocations":["372:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"372:7:1"},"id":1228,"nodeType":"InheritanceSpecifier","src":"372:7:1"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"184:165:1","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1344,"linearizedBaseContracts":[1344,2452],"name":"IERC1155","nameLocation":"360:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"386:121:1","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1241,"name":"TransferSingle","nameLocation":"518:14:1","nodeType":"EventDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"549:8:1","nodeType":"VariableDeclaration","scope":1241,"src":"533:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"575:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"559:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"597:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"581:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"609:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"601:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"621:5:1","nodeType":"VariableDeclaration","scope":1241,"src":"613:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:1"},"src":"512:116:1"},{"anonymous":false,"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"634:144:1","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1256,"name":"TransferBatch","nameLocation":"789:13:1","nodeType":"EventDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"828:8:1","nodeType":"VariableDeclaration","scope":1256,"src":"812:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1246,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"862:4:1","nodeType":"VariableDeclaration","scope":1256,"src":"846:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"892:2:1","nodeType":"VariableDeclaration","scope":1256,"src":"876:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"914:3:1","nodeType":"VariableDeclaration","scope":1256,"src":"904:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"904:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1254,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"937:6:1","nodeType":"VariableDeclaration","scope":1256,"src":"927:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ArrayTypeName","src":"927:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:1"},"src":"783:167:1"},{"anonymous":false,"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"956:147:1","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1265,"name":"ApprovalForAll","nameLocation":"1114:14:1","nodeType":"EventDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1145:7:1","nodeType":"VariableDeclaration","scope":1265,"src":"1129:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1170:8:1","nodeType":"VariableDeclaration","scope":1265,"src":"1154:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1185:8:1","nodeType":"VariableDeclaration","scope":1265,"src":"1180:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:1"},"src":"1108:87:1"},{"anonymous":false,"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"1201:343:1","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1272,"name":"URI","nameLocation":"1555:3:1","nodeType":"EventDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1566:5:1","nodeType":"VariableDeclaration","scope":1272,"src":"1559:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1267,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1270,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1589:2:1","nodeType":"VariableDeclaration","scope":1272,"src":"1573:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:1"},"src":"1549:44:1"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"1599:173:1","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1786:9:1","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"account","nameLocation":"1804:7:1","nodeType":"VariableDeclaration","scope":1282,"src":"1796:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"id","nameLocation":"1821:2:1","nodeType":"VariableDeclaration","scope":1282,"src":"1813:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:1"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"1848:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:1"},"scope":1344,"src":"1777:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"1863:188:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1295,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2065:14:1","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"accounts","nameLocation":"2108:8:1","nodeType":"VariableDeclaration","scope":1295,"src":"2089:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"nodeType":"ArrayTypeName","src":"2089:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"ids","nameLocation":"2145:3:1","nodeType":"VariableDeclaration","scope":1295,"src":"2126:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ArrayTypeName","src":"2126:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:75:1"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"2178:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ArrayTypeName","src":"2178:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:18:1"},"scope":1344,"src":"2056:140:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"2202:248:1","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2464:17:1","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"operator","nameLocation":"2490:8:1","nodeType":"VariableDeclaration","scope":1303,"src":"2482:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"approved","nameLocation":"2505:8:1","nodeType":"VariableDeclaration","scope":1303,"src":"2500:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1299,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2481:33:1"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"2523:0:1"},"scope":1344,"src":"2455:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"2530:135:1","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2679:16:1","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"account","nameLocation":"2704:7:1","nodeType":"VariableDeclaration","scope":1313,"src":"2696:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"operator","nameLocation":"2721:8:1","nodeType":"VariableDeclaration","scope":1313,"src":"2713:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2695:35:1"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"2754:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1310,"name":"bool","nodeType":"ElementaryTypeName","src":"2754:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2753:6:1"},"scope":1344,"src":"2670:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2766:556:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1327,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3336:16:1","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3361:4:1","nodeType":"VariableDeclaration","scope":1327,"src":"3353:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3375:2:1","nodeType":"VariableDeclaration","scope":1327,"src":"3367:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"id","nameLocation":"3387:2:1","nodeType":"VariableDeclaration","scope":1327,"src":"3379:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"amount","nameLocation":"3399:6:1","nodeType":"VariableDeclaration","scope":1327,"src":"3391:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"data","nameLocation":"3422:4:1","nodeType":"VariableDeclaration","scope":1327,"src":"3407:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"3407:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:75:1"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"3436:0:1"},"scope":1344,"src":"3327:110:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"3443:390:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3847:21:1","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"from","nameLocation":"3886:4:1","nodeType":"VariableDeclaration","scope":1343,"src":"3878:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"to","nameLocation":"3908:2:1","nodeType":"VariableDeclaration","scope":1343,"src":"3900:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"3900:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"ids","nameLocation":"3939:3:1","nodeType":"VariableDeclaration","scope":1343,"src":"3920:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1334,"nodeType":"ArrayTypeName","src":"3920:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"amounts","nameLocation":"3971:7:1","nodeType":"VariableDeclaration","scope":1343,"src":"3952:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ArrayTypeName","src":"3952:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"data","nameLocation":"4003:4:1","nodeType":"VariableDeclaration","scope":1343,"src":"3988:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"3988:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3868:145:1"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"4022:0:1"},"scope":1344,"src":"3838:185:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1345,"src":"350:3675:1","usedErrors":[]}],"src":"110:3916:1"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1385],"IERC165":[2452]},"id":1386,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1346,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1386,"sourceUnit":2453,"src":"143:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1349,"name":"IERC165","nameLocations":["262:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"262:7:2"},"id":1350,"nodeType":"InheritanceSpecifier","src":"262:7:2"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"192:39:2","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1385,"linearizedBaseContracts":[1385,2452],"name":"IERC1155Receiver","nameLocation":"242:16:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"276:826:2","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1366,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:2","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"operator","nameLocation":"1151:8:2","nodeType":"VariableDeclaration","scope":1366,"src":"1143:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"from","nameLocation":"1177:4:2","nodeType":"VariableDeclaration","scope":1366,"src":"1169:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"id","nameLocation":"1199:2:2","nodeType":"VariableDeclaration","scope":1366,"src":"1191:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"value","nameLocation":"1219:5:2","nodeType":"VariableDeclaration","scope":1366,"src":"1211:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"data","nameLocation":"1249:4:2","nodeType":"VariableDeclaration","scope":1366,"src":"1234:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1360,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:2"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"1278:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1363,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:2"},"scope":1385,"src":"1107:179:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"1292:994:2","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1384,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:2","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"operator","nameLocation":"2340:8:2","nodeType":"VariableDeclaration","scope":1384,"src":"2332:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"from","nameLocation":"2366:4:2","nodeType":"VariableDeclaration","scope":1384,"src":"2358:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"ids","nameLocation":"2399:3:2","nodeType":"VariableDeclaration","scope":1384,"src":"2380:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1373,"nodeType":"ArrayTypeName","src":"2380:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"values","nameLocation":"2431:6:2","nodeType":"VariableDeclaration","scope":1384,"src":"2412:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1376,"nodeType":"ArrayTypeName","src":"2412:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"data","nameLocation":"2462:4:2","nodeType":"VariableDeclaration","scope":1384,"src":"2447:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:2"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1384,"src":"2491:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1381,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:2"},"scope":1385,"src":"2291:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1386,"src":"232:2269:2","usedErrors":[]}],"src":"118:2384:2"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"Address":[1799],"Context":[1821],"ERC1155":[1222],"ERC1155Burnable":[1454],"ERC165":[2440],"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC1155Receiver":[1385],"IERC165":[2452]},"id":1455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1387,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1455,"sourceUnit":1223,"src":"153:24:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1390,"name":"ERC1155","nameLocations":["394:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"394:7:3"},"id":1391,"nodeType":"InheritanceSpecifier","src":"394:7:3"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"179:177:3","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"},"fullyImplemented":false,"id":1454,"linearizedBaseContracts":[1454,1222,1469,1344,2440,2452,1821],"name":"ERC1155Burnable","nameLocation":"375:15:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1420,"nodeType":"Block","src":"481:212:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"512:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"523:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"523:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"512:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"556:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"565:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"565:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"539:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"539:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"512:66:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"592:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"491:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"491:159:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"491:159:3"},{"expression":{"arguments":[{"id":1415,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"676:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"680:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1414,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"661:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"661:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"661:25:3"}]},"functionSelector":"f5298aca","id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"417:4:3","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"account","nameLocation":"430:7:3","nodeType":"VariableDeclaration","scope":1421,"src":"422:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"id","nameLocation":"447:2:3","nodeType":"VariableDeclaration","scope":1421,"src":"439:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"value","nameLocation":"459:5:3","nodeType":"VariableDeclaration","scope":1421,"src":"451:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"421:44:3"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"481:0:3"},"scope":1454,"src":"408:285:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1452,"nodeType":"Block","src":"797:219:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"828:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1434,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"839:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"839:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"828:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1438,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"872:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1439,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"881:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1437,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"855:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"828:66:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"908:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"807:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"807:159:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1445,"nodeType":"ExpressionStatement","src":"807:159:3"},{"expression":{"arguments":[{"id":1447,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"988:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1448,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"997:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1449,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1002:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1446,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"977:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"977:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"977:32:3"}]},"functionSelector":"6b20c454","id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"708:9:3","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"account","nameLocation":"726:7:3","nodeType":"VariableDeclaration","scope":1453,"src":"718:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"ids","nameLocation":"752:3:3","nodeType":"VariableDeclaration","scope":1453,"src":"735:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1425,"nodeType":"ArrayTypeName","src":"735:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"values","nameLocation":"774:6:3","nodeType":"VariableDeclaration","scope":1453,"src":"757:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1428,"nodeType":"ArrayTypeName","src":"757:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"717:64:3"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"797:0:3"},"scope":1454,"src":"699:317:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1455,"src":"357:661:3","usedErrors":[]}],"src":"128:891:3"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC165":[2452]},"id":1470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1456,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1470,"sourceUnit":1345,"src":"142:25:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1459,"name":"IERC1155","nameLocations":["397:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"397:8:4"},"id":1460,"nodeType":"InheritanceSpecifier","src":"397:8:4"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"169:194:4","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1469,"linearizedBaseContracts":[1469,1344,2452],"name":"IERC1155MetadataURI","nameLocation":"374:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"412:192:4","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1468,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"618:3:4","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"id","nameLocation":"630:2:4","nodeType":"VariableDeclaration","scope":1468,"src":"622:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:12:4"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"657:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1465,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:4"},"scope":1469,"src":"609:63:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1470,"src":"364:310:4","usedErrors":[]}],"src":"117:558:4"}},"@openzeppelin/contracts/utils/Address.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1799]},"id":1800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1471,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1799,"linearizedBaseContracts":[1799],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1486,"nodeType":"Block","src":"1478:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1480,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"1702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:5","memberName":"code","nodeType":"MemberAccess","src":"1702:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:5","memberName":"length","nodeType":"MemberAccess","src":"1702:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1479,"id":1485,"nodeType":"Return","src":"1695:30:5"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"216:1191:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:5","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"account","nameLocation":"1440:7:5","nodeType":"VariableDeclaration","scope":1487,"src":"1432:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:5"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"1472:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1477,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:5"},"scope":1799,"src":"1412:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1520,"nodeType":"Block","src":"2718:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1498,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1799","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1799","typeString":"library Address"}],"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:5","typeDescriptions":{}}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1501,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"2761:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1505,"nodeType":"ExpressionStatement","src":"2728:73:5"},{"assignments":[1507,null],"declarations":[{"constant":false,"id":1507,"mutability":"mutable","name":"success","nameLocation":"2818:7:5","nodeType":"VariableDeclaration","scope":1520,"src":"2813:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1506,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1514,"initialValue":{"arguments":[{"hexValue":"","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1508,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"2831:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:5","memberName":"call","nodeType":"MemberAccess","src":"2831:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"2853:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:5"},{"expression":{"arguments":[{"id":1516,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2882:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1519,"nodeType":"ExpressionStatement","src":"2874:78:5"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"1738:904:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:5","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:5","nodeType":"VariableDeclaration","scope":1521,"src":"2666:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"amount","nameLocation":"2701:6:5","nodeType":"VariableDeclaration","scope":1521,"src":"2693:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:5"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"2718:0:5"},"scope":1799,"src":"2647:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1538,"nodeType":"Block","src":"3790:96:5","statements":[{"expression":{"arguments":[{"id":1532,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"3829:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1533,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3837:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1531,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1579,1623],"referencedDeclaration":1623,"src":"3807:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1530,"id":1537,"nodeType":"Return","src":"3800:79:5"}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"2965:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:5","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"target","nameLocation":"3731:6:5","nodeType":"VariableDeclaration","scope":1539,"src":"3723:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"data","nameLocation":"3752:4:5","nodeType":"VariableDeclaration","scope":1539,"src":"3739:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1525,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:5"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1539,"src":"3776:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1528,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:5"},"scope":1799,"src":"3701:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1558,"nodeType":"Block","src":"4255:76:5","statements":[{"expression":{"arguments":[{"id":1552,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"4294:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1553,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4302:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1555,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"4311:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1551,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1579,1623],"referencedDeclaration":1623,"src":"4272:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1550,"id":1557,"nodeType":"Return","src":"4265:59:5"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"3892:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1559,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:5","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"target","nameLocation":"4147:6:5","nodeType":"VariableDeclaration","scope":1559,"src":"4139:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"data","nameLocation":"4176:4:5","nodeType":"VariableDeclaration","scope":1559,"src":"4163:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1543,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:5","nodeType":"VariableDeclaration","scope":1559,"src":"4190:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1545,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:5"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1559,"src":"4241:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1548,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:5"},"scope":1799,"src":"4108:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"4806:111:5","statements":[{"expression":{"arguments":[{"id":1572,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"4845:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"4853:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"4859:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1571,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1579,1623],"referencedDeclaration":1623,"src":"4823:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1570,"id":1577,"nodeType":"Return","src":"4816:94:5"}]},"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"4337:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:5","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"target","nameLocation":"4732:6:5","nodeType":"VariableDeclaration","scope":1579,"src":"4724:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"data","nameLocation":"4753:4:5","nodeType":"VariableDeclaration","scope":1579,"src":"4740:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"value","nameLocation":"4767:5:5","nodeType":"VariableDeclaration","scope":1579,"src":"4759:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:5"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"4792:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1568,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:5"},"scope":1799,"src":"4693:224:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"5344:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1596,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1799","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1799","typeString":"library Address"}],"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:5","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5387:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"ExpressionStatement","src":"5354:81:5"},{"assignments":[1605,1607],"declarations":[{"constant":false,"id":1605,"mutability":"mutable","name":"success","nameLocation":"5451:7:5","nodeType":"VariableDeclaration","scope":1622,"src":"5446:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1604,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:5","nodeType":"VariableDeclaration","scope":1622,"src":"5460:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1614,"initialValue":{"arguments":[{"id":1612,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"5513:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1608,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5487:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:5","memberName":"call","nodeType":"MemberAccess","src":"5487:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5506:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:5"},{"expression":{"arguments":[{"id":1616,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5562:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1617,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"5570:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1618,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"5579:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1619,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"5591:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1615,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"5535:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1592,"id":1621,"nodeType":"Return","src":"5528:76:5"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"4923:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:5","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"target","nameLocation":"5213:6:5","nodeType":"VariableDeclaration","scope":1623,"src":"5205:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"data","nameLocation":"5242:4:5","nodeType":"VariableDeclaration","scope":1623,"src":"5229:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1583,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"value","nameLocation":"5264:5:5","nodeType":"VariableDeclaration","scope":1623,"src":"5256:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:5","nodeType":"VariableDeclaration","scope":1623,"src":"5279:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1587,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:5"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1623,"src":"5330:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1590,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:5"},"scope":1799,"src":"5165:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1639,"nodeType":"Block","src":"5888:97:5","statements":[{"expression":{"arguments":[{"id":1634,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"5924:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1635,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"5932:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1633,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1640,1669],"referencedDeclaration":1669,"src":"5905:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1632,"id":1638,"nodeType":"Return","src":"5898:80:5"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"5617:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:5","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"target","nameLocation":"5824:6:5","nodeType":"VariableDeclaration","scope":1640,"src":"5816:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"data","nameLocation":"5845:4:5","nodeType":"VariableDeclaration","scope":1640,"src":"5832:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:5"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1640,"src":"5874:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1630,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:5"},"scope":1799,"src":"5788:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"6327:168:5","statements":[{"assignments":[1653,1655],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"success","nameLocation":"6343:7:5","nodeType":"VariableDeclaration","scope":1668,"src":"6338:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1652,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:5","nodeType":"VariableDeclaration","scope":1668,"src":"6352:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1654,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1660,"initialValue":{"arguments":[{"id":1658,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"6397:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1656,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6379:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:5"},{"expression":{"arguments":[{"id":1662,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6446:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1663,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"6454:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1664,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"6463:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1665,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6475:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1661,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"6419:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1651,"id":1667,"nodeType":"Return","src":"6412:76:5"}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"5991:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:5","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"target","nameLocation":"6214:6:5","nodeType":"VariableDeclaration","scope":1669,"src":"6206:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"data","nameLocation":"6243:4:5","nodeType":"VariableDeclaration","scope":1669,"src":"6230:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1644,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:5","nodeType":"VariableDeclaration","scope":1669,"src":"6257:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1646,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:5"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"6313:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1649,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:5"},"scope":1799,"src":"6169:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"6771:101:5","statements":[{"expression":{"arguments":[{"id":1680,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6809:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6817:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1679,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1686,1715],"referencedDeclaration":1715,"src":"6788:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1678,"id":1684,"nodeType":"Return","src":"6781:84:5"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"6501:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:5","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"target","nameLocation":"6712:6:5","nodeType":"VariableDeclaration","scope":1686,"src":"6704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"data","nameLocation":"6733:4:5","nodeType":"VariableDeclaration","scope":1686,"src":"6720:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:5"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"6757:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1676,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:5"},"scope":1799,"src":"6674:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"7213:170:5","statements":[{"assignments":[1699,1701],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"success","nameLocation":"7229:7:5","nodeType":"VariableDeclaration","scope":1714,"src":"7224:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1698,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:5","nodeType":"VariableDeclaration","scope":1714,"src":"7238:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1700,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1706,"initialValue":{"arguments":[{"id":1704,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"7285:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1702,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"7265:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:5"},{"expression":{"arguments":[{"id":1708,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"7334:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1709,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7342:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1710,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"7351:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1711,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"7363:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1707,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"7307:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1697,"id":1713,"nodeType":"Return","src":"7300:76:5"}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"6878:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:5","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"target","nameLocation":"7105:6:5","nodeType":"VariableDeclaration","scope":1715,"src":"7097:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"data","nameLocation":"7134:4:5","nodeType":"VariableDeclaration","scope":1715,"src":"7121:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1690,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:5","nodeType":"VariableDeclaration","scope":1715,"src":"7148:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:5"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"7199:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1695,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:5"},"scope":1799,"src":"7058:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"7865:434:5","statements":[{"condition":{"id":1729,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"7879:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1751,"nodeType":"Block","src":"8235:58:5","statements":[{"expression":{"arguments":[{"id":1747,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"8257:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1748,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"8269:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1746,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"8249:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"ExpressionStatement","src":"8249:33:5"}]},"id":1752,"nodeType":"IfStatement","src":"7875:418:5","trueBody":{"id":1745,"nodeType":"Block","src":"7888:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1730,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"7906:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:5","memberName":"length","nodeType":"MemberAccess","src":"7906:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"7902:286:5","trueBody":{"id":1741,"nodeType":"Block","src":"7930:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1736,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"8132:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1735,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"8121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"ExpressionStatement","src":"8113:60:5"}]}},{"expression":{"id":1743,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"8208:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1728,"id":1744,"nodeType":"Return","src":"8201:17:5"}]}}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"7389:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:5","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"target","nameLocation":"7724:6:5","nodeType":"VariableDeclaration","scope":1754,"src":"7716:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"success","nameLocation":"7745:7:5","nodeType":"VariableDeclaration","scope":1754,"src":"7740:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1719,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:5","nodeType":"VariableDeclaration","scope":1754,"src":"7762:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1721,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:5","nodeType":"VariableDeclaration","scope":1754,"src":"7795:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1723,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:5"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"7851:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1726,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:5"},"scope":1799,"src":"7671:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"8680:135:5","statements":[{"condition":{"id":1766,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8694:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1775,"nodeType":"Block","src":"8751:58:5","statements":[{"expression":{"arguments":[{"id":1771,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"8773:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1772,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"8785:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1770,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"8765:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"8765:33:5"}]},"id":1776,"nodeType":"IfStatement","src":"8690:119:5","trueBody":{"id":1769,"nodeType":"Block","src":"8703:42:5","statements":[{"expression":{"id":1767,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"8724:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1765,"id":1768,"nodeType":"Return","src":"8717:17:5"}]}}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"8305:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:5","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"success","nameLocation":"8560:7:5","nodeType":"VariableDeclaration","scope":1778,"src":"8555:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1756,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:5","nodeType":"VariableDeclaration","scope":1778,"src":"8577:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1758,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:5","nodeType":"VariableDeclaration","scope":1778,"src":"8610:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1760,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:5"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1778,"src":"8666:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1763,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:5"},"scope":1799,"src":"8520:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"8904:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1785,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"8980:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:5","memberName":"length","nodeType":"MemberAccess","src":"8980:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1795,"nodeType":"Block","src":"9310:45:5","statements":[{"expression":{"arguments":[{"id":1792,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9331:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1791,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1794,"nodeType":"ExpressionStatement","src":"9324:20:5"}]},"id":1796,"nodeType":"IfStatement","src":"8976:379:5","trueBody":{"id":1790,"nodeType":"Block","src":"9003:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:5"},"nodeType":"YulFunctionCall","src":"9202:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:5"},"nodeType":"YulFunctionCall","src":"9243:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:5"},"nodeType":"YulFunctionCall","src":"9236:44:5"},"nodeType":"YulExpressionStatement","src":"9236:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1780,"isOffset":false,"isSlot":false,"src":"9208:10:5","valueSize":1},{"declaration":1780,"isOffset":false,"isSlot":false,"src":"9251:10:5","valueSize":1}],"id":1789,"nodeType":"InlineAssembly","src":"9152:142:5"}]}}]},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:5","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:5","nodeType":"VariableDeclaration","scope":1798,"src":"8838:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:5","nodeType":"VariableDeclaration","scope":1798,"src":"8863:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:5"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[],"src":"8904:0:5"},"scope":1799,"src":"8821:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1800,"src":"194:9169:5","usedErrors":[]}],"src":"101:9263:5"}},"@openzeppelin/contracts/utils/Context.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1821]},"id":1822,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1801,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1821,"linearizedBaseContracts":[1821],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1810,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1806,"id":1809,"nodeType":"Return","src":"712:17:6"}]},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1811,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1821,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1815,"id":1818,"nodeType":"Return","src":"819:15:6"}]},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1813,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1821,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1822,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3318],"SignedMath":[3423],"Strings":[2050]},"id":2051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1823,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":3319,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":3424,"src":"152:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"185:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":2050,"linearizedBaseContracts":[2050],"name":"Strings","nameLocation":"228:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1829,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:7","nodeType":"VariableDeclaration","scope":2050,"src":"242:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1827,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1832,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:7","nodeType":"VariableDeclaration","scope":2050,"src":"302:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1830,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1879,"nodeType":"Block","src":"518:625:7","statements":[{"id":1878,"nodeType":"UncheckedBlock","src":"528:609:7","statements":[{"assignments":[1841],"declarations":[{"constant":false,"id":1841,"mutability":"mutable","name":"length","nameLocation":"560:6:7","nodeType":"VariableDeclaration","scope":1878,"src":"552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1848,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"580:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1842,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3318_$","typeString":"type(library Math)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"569:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:7"},{"assignments":[1850],"declarations":[{"constant":false,"id":1850,"mutability":"mutable","name":"buffer","nameLocation":"618:6:7","nodeType":"VariableDeclaration","scope":1878,"src":"604:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1849,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1855,"initialValue":{"arguments":[{"id":1853,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"638:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1851,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:7"},{"assignments":[1857],"declarations":[{"constant":false,"id":1857,"mutability":"mutable","name":"ptr","nameLocation":"667:3:7","nodeType":"VariableDeclaration","scope":1878,"src":"659:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1858,"nodeType":"VariableDeclarationStatement","src":"659:11:7"},{"AST":{"nodeType":"YulBlock","src":"740:67:7","statements":[{"nodeType":"YulAssignment","src":"758:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:7"},"nodeType":"YulFunctionCall","src":"777:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:7"},"nodeType":"YulFunctionCall","src":"765:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1850,"isOffset":false,"isSlot":false,"src":"769:6:7","valueSize":1},{"declaration":1841,"isOffset":false,"isSlot":false,"src":"785:6:7","valueSize":1},{"declaration":1857,"isOffset":false,"isSlot":false,"src":"758:3:7","valueSize":1}],"id":1859,"nodeType":"InlineAssembly","src":"731:76:7"},{"body":{"id":1874,"nodeType":"Block","src":"833:267:7","statements":[{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:7","subExpression":{"id":1861,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"851:5:7"},{"AST":{"nodeType":"YulBlock","src":"934:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:7"},"nodeType":"YulFunctionCall","src":"974:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:7"},"nodeType":"YulFunctionCall","src":"969:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:7"},"nodeType":"YulFunctionCall","src":"956:44:7"},"nodeType":"YulExpressionStatement","src":"956:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1829,"isOffset":false,"isSlot":false,"src":"990:8:7","valueSize":1},{"declaration":1857,"isOffset":false,"isSlot":false,"src":"964:3:7","valueSize":1},{"declaration":1835,"isOffset":false,"isSlot":false,"src":"978:5:7","valueSize":1}],"id":1864,"nodeType":"InlineAssembly","src":"925:93:7"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"1035:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"1035:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"1068:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1873,"nodeType":"IfStatement","src":"1064:21:7","trueBody":{"id":1872,"nodeType":"Break","src":"1080:5:7"}}]},"condition":{"hexValue":"74727565","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1875,"nodeType":"WhileStatement","src":"820:280:7"},{"expression":{"id":1876,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1839,"id":1877,"nodeType":"Return","src":"1113:13:7"}]}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"352:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1880,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:7","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"value","nameLocation":"473:5:7","nodeType":"VariableDeclaration","scope":1880,"src":"465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:7"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1880,"src":"503:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:7"},"scope":2050,"src":"447:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"1313:103:7","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1354:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:7","trueExpression":{"hexValue":"2d","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1400:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1899,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"1385:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3423_$","typeString":"type(library SignedMath)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"1385:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1880,1908],"referencedDeclaration":1880,"src":"1376:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1890,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1888,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:7","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1887,"id":1906,"nodeType":"Return","src":"1323:86:7"}]},"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"1149:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:7","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"value","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":1908,"src":"1261:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1882,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:7"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1908,"src":"1298:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:7"},"scope":2050,"src":"1243:173:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"1595:100:7","statements":[{"id":1926,"nodeType":"UncheckedBlock","src":"1605:84:7","statements":[{"expression":{"arguments":[{"id":1917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1918,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"1655:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3318_$","typeString":"type(library Math)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"1655:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1916,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1928,2004,2024],"referencedDeclaration":2004,"src":"1636:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1915,"id":1925,"nodeType":"Return","src":"1629:49:7"}]}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"1422:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:7","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"value","nameLocation":"1550:5:7","nodeType":"VariableDeclaration","scope":1928,"src":"1542:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:7"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1928,"src":"1580:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1913,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:7"},"scope":2050,"src":"1521:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"1908:347:7","statements":[{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:7","nodeType":"VariableDeclaration","scope":2003,"src":"1918:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1938,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1948,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1943,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1954:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1940,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:7"},{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1949,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"1975:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1951,"indexExpression":{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1954,"nodeType":"ExpressionStatement","src":"1975:15:7"},{"expression":{"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1955,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2000:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"indexExpression":{"hexValue":"31","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1960,"nodeType":"ExpressionStatement","src":"2000:15:7"},{"body":{"id":1989,"nodeType":"Block","src":"2070:83:7","statements":[{"expression":{"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1975,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2084:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1977,"indexExpression":{"id":1976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2091:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1978,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2096:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1982,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2105:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1984,"nodeType":"ExpressionStatement","src":"2084:33:7"},{"expression":{"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ExpressionStatement","src":"2131:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2058:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"initializationExpression":{"assignments":[1962],"declarations":[{"constant":false,"id":1962,"mutability":"mutable","name":"i","nameLocation":"2038:1:7","nodeType":"VariableDeclaration","scope":1990,"src":"2030:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1964,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2046:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:7"},"loopExpression":{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:7","subExpression":{"id":1972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2067:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"2065:3:7"},"nodeType":"ForStatement","src":"2025:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"ExpressionStatement","src":"2162:55:7"},{"expression":{"arguments":[{"id":2000,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2241:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:7","typeDescriptions":{}}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1937,"id":2002,"nodeType":"Return","src":"2227:21:7"}]},"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"1701:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"value","nameLocation":"1847:5:7","nodeType":"VariableDeclaration","scope":2004,"src":"1839:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"length","nameLocation":"1862:6:7","nodeType":"VariableDeclaration","scope":2004,"src":"1854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"1893:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1935,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:7"},"scope":2050,"src":"1818:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"2480:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2017,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2525:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2015,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:7","typeDescriptions":{}}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2020,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"2533:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2012,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1928,2004,2024],"referencedDeclaration":2004,"src":"2497:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2011,"id":2022,"nodeType":"Return","src":"2490:59:7"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"2261:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:7","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"addr","nameLocation":"2436:4:7","nodeType":"VariableDeclaration","scope":2024,"src":"2428:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:7"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"2465:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2009,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:7"},"scope":2050,"src":"2407:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2048,"nodeType":"Block","src":"2711:66:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2744:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:7","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2034,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2767:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2041,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:7","typeDescriptions":{}}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2040,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2033,"id":2047,"nodeType":"Return","src":"2721:49:7"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"2562:66:7","text":" @dev Returns true if the two strings are equal."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:7","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"a","nameLocation":"2662:1:7","nodeType":"VariableDeclaration","scope":2049,"src":"2648:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"b","nameLocation":"2679:1:7","nodeType":"VariableDeclaration","scope":2049,"src":"2665:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2028,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:7"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"2705:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2031,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:7"},"scope":2050,"src":"2633:144:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2051,"src":"220:2559:7","usedErrors":[]}],"src":"101:2679:7"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2416],"Math":[3318],"SignedMath":[3423],"Strings":[2050]},"id":2417,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2052,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2417,"sourceUnit":2051,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"163:205:8","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2416,"linearizedBaseContracts":[2416],"name":"ECDSA","nameLocation":"377:5:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2060,"members":[{"id":2055,"name":"NoError","nameLocation":"417:7:8","nodeType":"EnumValue","src":"417:7:8"},{"id":2056,"name":"InvalidSignature","nameLocation":"434:16:8","nodeType":"EnumValue","src":"434:16:8"},{"id":2057,"name":"InvalidSignatureLength","nameLocation":"460:22:8","nodeType":"EnumValue","src":"460:22:8"},{"id":2058,"name":"InvalidSignatureS","nameLocation":"492:17:8","nodeType":"EnumValue","src":"492:17:8"},{"id":2059,"name":"InvalidSignatureV","nameLocation":"519:17:8","nodeType":"EnumValue","src":"519:17:8"}],"name":"RecoverError","nameLocation":"394:12:8","nodeType":"EnumDefinition","src":"389:175:8"},{"body":{"id":2103,"nodeType":"Block","src":"624:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"638:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2067,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"647:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"647:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"734:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2073,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"743:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2056,"src":"743:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"843:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2082,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"852:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"852:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"965:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2091,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"974:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2058,"src":"974:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"961:114:8","trueBody":{"id":2098,"nodeType":"Block","src":"1006:69:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2094,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"ExpressionStatement","src":"1020:44:8"}]}},"id":2100,"nodeType":"IfStatement","src":"839:236:8","trueBody":{"id":2089,"nodeType":"Block","src":"889:66:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2085,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"ExpressionStatement","src":"903:41:8"}]}},"id":2101,"nodeType":"IfStatement","src":"730:345:8","trueBody":{"id":2080,"nodeType":"Block","src":"774:59:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2076,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"ExpressionStatement","src":"788:34:8"}]}},"id":2102,"nodeType":"IfStatement","src":"634:441:8","trueBody":{"id":2071,"nodeType":"Block","src":"669:55:8","statements":[{"functionReturnParameters":2065,"id":2070,"nodeType":"Return","src":"683:7:8"}]}}]},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:8","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"error","nameLocation":"604:5:8","nodeType":"VariableDeclaration","scope":2104,"src":"591:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"RecoverError","nameLocations":["591:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"591:12:8"},"referencedDeclaration":2060,"src":"591:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:8"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"624:0:8"},"scope":2416,"src":"570:511:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2149,"nodeType":"Block","src":"2249:626:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2117,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2263:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:8","memberName":"length","nodeType":"MemberAccess","src":"2263:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2147,"nodeType":"Block","src":"2788:81:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:8","typeDescriptions":{}}},"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2143,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"2822:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"2822:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}}],"id":2145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2116,"id":2146,"nodeType":"Return","src":"2802:56:8"}]},"id":2148,"nodeType":"IfStatement","src":"2259:610:8","trueBody":{"id":2138,"nodeType":"Block","src":"2287:495:8","statements":[{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"r","nameLocation":"2309:1:8","nodeType":"VariableDeclaration","scope":2138,"src":"2301:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2123,"nodeType":"VariableDeclarationStatement","src":"2301:9:8"},{"assignments":[2125],"declarations":[{"constant":false,"id":2125,"mutability":"mutable","name":"s","nameLocation":"2332:1:8","nodeType":"VariableDeclaration","scope":2138,"src":"2324:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2126,"nodeType":"VariableDeclarationStatement","src":"2324:9:8"},{"assignments":[2128],"declarations":[{"constant":false,"id":2128,"mutability":"mutable","name":"v","nameLocation":"2353:1:8","nodeType":"VariableDeclaration","scope":2138,"src":"2347:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2127,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2129,"nodeType":"VariableDeclarationStatement","src":"2347:7:8"},{"AST":{"nodeType":"YulBlock","src":"2555:171:8","statements":[{"nodeType":"YulAssignment","src":"2573:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:8"},"nodeType":"YulFunctionCall","src":"2584:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:8"},"nodeType":"YulFunctionCall","src":"2578:27:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:8"}]},{"nodeType":"YulAssignment","src":"2622:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:8"},"nodeType":"YulFunctionCall","src":"2633:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:8"},"nodeType":"YulFunctionCall","src":"2627:27:8"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:8"}]},{"nodeType":"YulAssignment","src":"2671:41:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:8","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:8"},"nodeType":"YulFunctionCall","src":"2690:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:8"},"nodeType":"YulFunctionCall","src":"2684:27:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:8"},"nodeType":"YulFunctionCall","src":"2676:36:8"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2122,"isOffset":false,"isSlot":false,"src":"2573:1:8","valueSize":1},{"declaration":2125,"isOffset":false,"isSlot":false,"src":"2622:1:8","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":false,"src":"2588:9:8","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":false,"src":"2637:9:8","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":false,"src":"2694:9:8","valueSize":1},{"declaration":2128,"isOffset":false,"isSlot":false,"src":"2671:1:8","valueSize":1}],"id":2130,"nodeType":"InlineAssembly","src":"2546:180:8"},{"expression":{"arguments":[{"id":2132,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2757:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2133,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2763:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2134,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2766:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2135,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2769:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2131,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2150,2224,2318],"referencedDeclaration":2318,"src":"2746:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2116,"id":2137,"nodeType":"Return","src":"2739:32:8"}]}}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"1087:1053:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:8","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"hash","nameLocation":"2173:4:8","nodeType":"VariableDeclaration","scope":2150,"src":"2165:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"signature","nameLocation":"2192:9:8","nodeType":"VariableDeclaration","scope":2150,"src":"2179:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2108,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:8"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2150,"src":"2226:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2150,"src":"2235:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2114,"nodeType":"UserDefinedTypeName","pathNode":{"id":2113,"name":"RecoverError","nameLocations":["2235:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"2235:12:8"},"referencedDeclaration":2060,"src":"2235:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:8"},"scope":2416,"src":"2145:730:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"3748:140:8","statements":[{"assignments":[2161,2164],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:8","nodeType":"VariableDeclaration","scope":2176,"src":"3759:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"error","nameLocation":"3791:5:8","nodeType":"VariableDeclaration","scope":2176,"src":"3778:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2163,"nodeType":"UserDefinedTypeName","pathNode":{"id":2162,"name":"RecoverError","nameLocations":["3778:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"3778:12:8"},"referencedDeclaration":2060,"src":"3778:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2169,"initialValue":{"arguments":[{"id":2166,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"3811:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2167,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"3817:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2165,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2150,2224,2318],"referencedDeclaration":2150,"src":"3800:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:8"},{"expression":{"arguments":[{"id":2171,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"3849:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}],"id":2170,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"3837:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2060_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2173,"nodeType":"ExpressionStatement","src":"3837:18:8"},{"expression":{"id":2174,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3872:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2159,"id":2175,"nodeType":"Return","src":"3865:16:8"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2881:775:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:8","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"hash","nameLocation":"3686:4:8","nodeType":"VariableDeclaration","scope":2177,"src":"3678:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"signature","nameLocation":"3705:9:8","nodeType":"VariableDeclaration","scope":2177,"src":"3692:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2154,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:8"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"3739:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:8"},"scope":2416,"src":"3661:227:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"4245:203:8","statements":[{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"s","nameLocation":"4263:1:8","nodeType":"VariableDeclaration","scope":2223,"src":"4255:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2200,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2194,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"4267:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:8","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:8"},{"assignments":[2202],"declarations":[{"constant":false,"id":2202,"mutability":"mutable","name":"v","nameLocation":"4363:1:8","nodeType":"VariableDeclaration","scope":2223,"src":"4357:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2201,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2215,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2207,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"4382:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:8","typeDescriptions":{}}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2203,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:8","typeDescriptions":{}}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:8"},{"expression":{"arguments":[{"id":2217,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4427:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2218,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"4433:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2219,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"4436:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2220,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"4439:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2216,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2150,2224,2318],"referencedDeclaration":2318,"src":"4416:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2191,"id":2222,"nodeType":"Return","src":"4409:32:8"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"3894:243:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:8","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"hash","nameLocation":"4170:4:8","nodeType":"VariableDeclaration","scope":2224,"src":"4162:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"r","nameLocation":"4184:1:8","nodeType":"VariableDeclaration","scope":2224,"src":"4176:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"vs","nameLocation":"4195:2:8","nodeType":"VariableDeclaration","scope":2224,"src":"4187:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:8"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"4222:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"4231:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"RecoverError","nameLocations":["4231:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"4231:12:8"},"referencedDeclaration":2060,"src":"4231:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:8"},"scope":2416,"src":"4142:306:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2253,"nodeType":"Block","src":"4699:136:8","statements":[{"assignments":[2237,2240],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:8","nodeType":"VariableDeclaration","scope":2253,"src":"4710:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"error","nameLocation":"4742:5:8","nodeType":"VariableDeclaration","scope":2253,"src":"4729:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2239,"nodeType":"UserDefinedTypeName","pathNode":{"id":2238,"name":"RecoverError","nameLocations":["4729:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"4729:12:8"},"referencedDeclaration":2060,"src":"4729:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2246,"initialValue":{"arguments":[{"id":2242,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4762:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2243,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4768:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2244,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4771:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2241,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2150,2224,2318],"referencedDeclaration":2224,"src":"4751:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:8"},{"expression":{"arguments":[{"id":2248,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4796:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}],"id":2247,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"4784:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2060_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2250,"nodeType":"ExpressionStatement","src":"4784:18:8"},{"expression":{"id":2251,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"4819:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2235,"id":2252,"nodeType":"Return","src":"4812:16:8"}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"4454:154:8","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2254,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:8","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"hash","nameLocation":"4638:4:8","nodeType":"VariableDeclaration","scope":2254,"src":"4630:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"r","nameLocation":"4652:1:8","nodeType":"VariableDeclaration","scope":2254,"src":"4644:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"vs","nameLocation":"4663:2:8","nodeType":"VariableDeclaration","scope":2254,"src":"4655:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:8"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2254,"src":"4690:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:8"},"scope":2416,"src":"4613:222:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2317,"nodeType":"Block","src":"5120:1345:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2273,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"6016:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:8","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2286,"nodeType":"IfStatement","src":"6004:161:8","trueBody":{"id":2285,"nodeType":"Block","src":"6089:76:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:8","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2281,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"6123:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2058,"src":"6123:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}}],"id":2283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2270,"id":2284,"nodeType":"Return","src":"6103:51:8"}]}},{"assignments":[2288],"declarations":[{"constant":false,"id":2288,"mutability":"mutable","name":"signer","nameLocation":"6267:6:8","nodeType":"VariableDeclaration","scope":2317,"src":"6259:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2295,"initialValue":{"arguments":[{"id":2290,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6286:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2291,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"6292:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2292,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"6295:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2293,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"6298:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2289,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6314:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:8","typeDescriptions":{}}},"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"IfStatement","src":"6310:101:8","trueBody":{"id":2310,"nodeType":"Block","src":"6336:75:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:8","typeDescriptions":{}}},"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2306,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"6370:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2056,"src":"6370:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}}],"id":2308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2270,"id":2309,"nodeType":"Return","src":"6350:50:8"}]}},{"expression":{"components":[{"id":2312,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6429:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2313,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"6437:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2060_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"6437:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}}],"id":2315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2270,"id":2316,"nodeType":"Return","src":"6421:37:8"}]},"documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"4841:163:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2318,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:8","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"hash","nameLocation":"5037:4:8","nodeType":"VariableDeclaration","scope":2318,"src":"5029:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"v","nameLocation":"5049:1:8","nodeType":"VariableDeclaration","scope":2318,"src":"5043:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2258,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"r","nameLocation":"5060:1:8","nodeType":"VariableDeclaration","scope":2318,"src":"5052:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"s","nameLocation":"5071:1:8","nodeType":"VariableDeclaration","scope":2318,"src":"5063:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:8"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"5097:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"5106:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2268,"nodeType":"UserDefinedTypeName","pathNode":{"id":2267,"name":"RecoverError","nameLocations":["5106:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"5106:12:8"},"referencedDeclaration":2060,"src":"5106:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:8"},"scope":2416,"src":"5009:1456:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2350,"nodeType":"Block","src":"6692:138:8","statements":[{"assignments":[2333,2336],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:8","nodeType":"VariableDeclaration","scope":2350,"src":"6703:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"error","nameLocation":"6735:5:8","nodeType":"VariableDeclaration","scope":2350,"src":"6722:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2335,"nodeType":"UserDefinedTypeName","pathNode":{"id":2334,"name":"RecoverError","nameLocations":["6722:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"6722:12:8"},"referencedDeclaration":2060,"src":"6722:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"id":2338,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"6755:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2339,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"6761:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2340,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"6764:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2341,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"6767:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2337,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2150,2224,2318],"referencedDeclaration":2318,"src":"6744:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2060_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:8"},{"expression":{"arguments":[{"id":2345,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"6791:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2060","typeString":"enum ECDSA.RecoverError"}],"id":2344,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"6779:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2060_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"ExpressionStatement","src":"6779:18:8"},{"expression":{"id":2348,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"6814:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2331,"id":2349,"nodeType":"Return","src":"6807:16:8"}]},"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"6471:122:8","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:8","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"hash","nameLocation":"6623:4:8","nodeType":"VariableDeclaration","scope":2351,"src":"6615:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"v","nameLocation":"6635:1:8","nodeType":"VariableDeclaration","scope":2351,"src":"6629:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2322,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"r","nameLocation":"6646:1:8","nodeType":"VariableDeclaration","scope":2351,"src":"6638:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"s","nameLocation":"6657:1:8","nodeType":"VariableDeclaration","scope":2351,"src":"6649:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:8"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"6683:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:8"},"scope":2416,"src":"6598:232:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2360,"nodeType":"Block","src":"7206:310:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:8","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:8","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:8"},"nodeType":"YulFunctionCall","src":"7376:48:8"},"nodeType":"YulExpressionStatement","src":"7376:48:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:8","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:8"},"nodeType":"YulFunctionCall","src":"7437:18:8"},"nodeType":"YulExpressionStatement","src":"7437:18:8"},{"nodeType":"YulAssignment","src":"7468:32:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:8","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:8"},"nodeType":"YulFunctionCall","src":"7479:21:8"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2354,"isOffset":false,"isSlot":false,"src":"7450:4:8","valueSize":1},{"declaration":2357,"isOffset":false,"isSlot":false,"src":"7468:7:8","valueSize":1}],"id":2359,"nodeType":"InlineAssembly","src":"7353:157:8"}]},"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"6836:279:8","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:8","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"hash","nameLocation":"7160:4:8","nodeType":"VariableDeclaration","scope":2361,"src":"7152:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:8"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"message","nameLocation":"7197:7:8","nodeType":"VariableDeclaration","scope":2361,"src":"7189:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:8"},"scope":2416,"src":"7120:396:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2382,"nodeType":"Block","src":"7881:116:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2375,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"7976:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:8","memberName":"length","nodeType":"MemberAccess","src":"7976:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2373,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7959:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2050_$","typeString":"type(library Strings)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1880,"src":"7959:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2378,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"7987:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2370,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2369,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2368,"id":2381,"nodeType":"Return","src":"7891:99:8"}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"7522:274:8","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:8","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"s","nameLocation":"7846:1:8","nodeType":"VariableDeclaration","scope":2383,"src":"7833:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2363,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:8"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2383,"src":"7872:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:8"},"scope":2416,"src":"7801:196:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"8443:290:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:8"},"nodeType":"YulFunctionCall","src":"8530:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:8"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:8","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:8"},"nodeType":"YulFunctionCall","src":"8554:23:8"},"nodeType":"YulExpressionStatement","src":"8554:23:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:8","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:8"},"nodeType":"YulFunctionCall","src":"8597:14:8"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:8"},"nodeType":"YulFunctionCall","src":"8590:39:8"},"nodeType":"YulExpressionStatement","src":"8590:39:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:8","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:8"},"nodeType":"YulFunctionCall","src":"8649:14:8"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:8"},"nodeType":"YulFunctionCall","src":"8642:34:8"},"nodeType":"YulExpressionStatement","src":"8642:34:8"},{"nodeType":"YulAssignment","src":"8689:28:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:8","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:8"},"nodeType":"YulFunctionCall","src":"8697:20:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2391,"isOffset":false,"isSlot":false,"src":"8689:4:8","valueSize":1},{"declaration":2386,"isOffset":false,"isSlot":false,"src":"8613:15:8","valueSize":1},{"declaration":2388,"isOffset":false,"isSlot":false,"src":"8665:10:8","valueSize":1}],"id":2393,"nodeType":"InlineAssembly","src":"8496:231:8"}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"8003:328:8","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:8","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:8","nodeType":"VariableDeclaration","scope":2395,"src":"8361:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:8","nodeType":"VariableDeclaration","scope":2395,"src":"8386:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:8"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"data","nameLocation":"8437:4:8","nodeType":"VariableDeclaration","scope":2395,"src":"8429:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:8"},"scope":2416,"src":"8336:397:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"9048:80:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2409,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"9104:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2410,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"9115:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2406,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2405,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2404,"id":2413,"nodeType":"Return","src":"9058:63:8"}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"8739:193:8","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:8","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"validator","nameLocation":"8986:9:8","nodeType":"VariableDeclaration","scope":2415,"src":"8978:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"data","nameLocation":"9010:4:8","nodeType":"VariableDeclaration","scope":2415,"src":"8997:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2399,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:8"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"9039:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:8"},"scope":2416,"src":"8937:191:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2417,"src":"369:8761:8","usedErrors":[]}],"src":"112:9019:8"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2440],"IERC165":[2452]},"id":2441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2418,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2441,"sourceUnit":2453,"src":"124:23:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2421,"name":"IERC165","nameLocations":["754:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"754:7:9"},"id":2422,"nodeType":"InheritanceSpecifier","src":"754:7:9"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"149:576:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2440,"linearizedBaseContracts":[2440,2452],"name":"ERC165","nameLocation":"744:6:9","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2451],"body":{"id":2438,"nodeType":"Block","src":"920:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"937:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2433,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"957:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2452_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2452_$","typeString":"type(contract IERC165)"}],"id":2432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2452","typeString":"type(contract IERC165)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2430,"id":2437,"nodeType":"Return","src":"930:47:9"}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"768:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:9","nodeType":"FunctionDefinition","overrides":{"id":2427,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:9"},"parameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:9","nodeType":"VariableDeclaration","scope":2439,"src":"856:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2424,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:9"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"914:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2428,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:9"},"scope":2440,"src":"829:155:9","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2441,"src":"726:260:9","usedErrors":[]}],"src":"99:888:9"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2452]},"id":2453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2442,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2452,"linearizedBaseContracts":[2452],"name":"IERC165","nameLocation":"415:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"429:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2451,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:10","nodeType":"FunctionDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:10","nodeType":"VariableDeclaration","scope":2451,"src":"801:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2445,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:10"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"844:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2448,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:10"},"scope":2452,"src":"774:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2453,"src":"405:447:10","usedErrors":[]}],"src":"100:753:10"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3318]},"id":3319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2454,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"128:73:11","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3318,"linearizedBaseContracts":[3318],"name":"Math","nameLocation":"210:4:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2459,"members":[{"id":2456,"name":"Down","nameLocation":"245:4:11","nodeType":"EnumValue","src":"245:4:11"},{"id":2457,"name":"Up","nameLocation":"287:2:11","nodeType":"EnumValue","src":"287:2:11"},{"id":2458,"name":"Zero","nameLocation":"318:4:11","nodeType":"EnumValue","src":"318:4:11"}],"name":"Rounding","nameLocation":"226:8:11","nodeType":"EnumDefinition","src":"221:122:11"},{"body":{"id":2476,"nodeType":"Block","src":"480:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"497:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"501:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"509:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:11","trueExpression":{"id":2472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"505:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2468,"id":2475,"nodeType":"Return","src":"490:20:11"}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"349:59:11","text":" @dev Returns the largest of two numbers."},"id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:11","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"a","nameLocation":"434:1:11","nodeType":"VariableDeclaration","scope":2477,"src":"426:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"b","nameLocation":"445:1:11","nodeType":"VariableDeclaration","scope":2477,"src":"437:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:11"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"471:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:11"},"scope":3318,"src":"413:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"655:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"672:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"676:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"684:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:11","trueExpression":{"id":2490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"680:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2486,"id":2493,"nodeType":"Return","src":"665:20:11"}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"523:60:11","text":" @dev Returns the smallest of two numbers."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:11","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"a","nameLocation":"609:1:11","nodeType":"VariableDeclaration","scope":2495,"src":"601:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"b","nameLocation":"620:1:11","nodeType":"VariableDeclaration","scope":2495,"src":"612:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:11"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"646:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:11"},"scope":3318,"src":"588:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"876:82:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"931:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"935:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"941:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"945:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2504,"id":2516,"nodeType":"Return","src":"923:28:11"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"698:102:11","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:11","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"a","nameLocation":"830:1:11","nodeType":"VariableDeclaration","scope":2518,"src":"822:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"b","nameLocation":"841:1:11","nodeType":"VariableDeclaration","scope":2518,"src":"833:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:11"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"867:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:11"},"scope":3318,"src":"805:153:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2542,"nodeType":"Block","src":"1228:123:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1316:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1330:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1339:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:11","trueExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2527,"id":2541,"nodeType":"Return","src":"1309:35:11"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"964:188:11","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:11","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"a","nameLocation":"1182:1:11","nodeType":"VariableDeclaration","scope":2543,"src":"1174:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"b","nameLocation":"1193:1:11","nodeType":"VariableDeclaration","scope":2543,"src":"1185:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:11"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2543,"src":"1219:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:11"},"scope":3318,"src":"1157:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"1765:4115:11","statements":[{"id":2664,"nodeType":"UncheckedBlock","src":"1775:4099:11","statements":[{"assignments":[2556],"declarations":[{"constant":false,"id":2556,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:11","nodeType":"VariableDeclaration","scope":2664,"src":"2096:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2557,"nodeType":"VariableDeclarationStatement","src":"2096:13:11"},{"assignments":[2559],"declarations":[{"constant":false,"id":2559,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:11","nodeType":"VariableDeclaration","scope":2664,"src":"2168:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2560,"nodeType":"VariableDeclarationStatement","src":"2168:13:11"},{"AST":{"nodeType":"YulBlock","src":"2248:157:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:11"},"nodeType":"YulFunctionCall","src":"2289:6:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:11"},"nodeType":"YulFunctionCall","src":"2276:20:11"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:11","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:11"},"nodeType":"YulFunctionCall","src":"2322:9:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:11"}]},{"nodeType":"YulAssignment","src":"2348:43:11","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:11"},"nodeType":"YulFunctionCall","src":"2361:14:11"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:11"},"nodeType":"YulFunctionCall","src":"2377:13:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:11"},"nodeType":"YulFunctionCall","src":"2357:34:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2556,"isOffset":false,"isSlot":false,"src":"2313:5:11","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"2369:5:11","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"2384:5:11","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"2348:5:11","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"2283:1:11","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"2326:1:11","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"2286:1:11","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"2329:1:11","valueSize":1}],"id":2561,"nodeType":"InlineAssembly","src":"2239:166:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"2486:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2570,"nodeType":"IfStatement","src":"2482:368:11","trueBody":{"id":2569,"nodeType":"Block","src":"2498:352:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2816:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2566,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"2824:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2554,"id":2568,"nodeType":"Return","src":"2809:26:11"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"2960:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2573,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"2974:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2577,"nodeType":"ExpressionStatement","src":"2952:53:11"},{"assignments":[2579],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:11","nodeType":"VariableDeclaration","scope":2664,"src":"3261:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2580,"nodeType":"VariableDeclarationStatement","src":"3261:17:11"},{"AST":{"nodeType":"YulBlock","src":"3301:291:11","statements":[{"nodeType":"YulAssignment","src":"3370:38:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:11"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:11"},"nodeType":"YulFunctionCall","src":"3383:25:11"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:11"}]},{"nodeType":"YulAssignment","src":"3490:41:11","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:11"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:11"},"nodeType":"YulFunctionCall","src":"3510:20:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:11"},"nodeType":"YulFunctionCall","src":"3499:32:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:11"}]},{"nodeType":"YulAssignment","src":"3548:30:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:11"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:11"},"nodeType":"YulFunctionCall","src":"3557:21:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2550,"isOffset":false,"isSlot":false,"src":"3396:11:11","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"3524:5:11","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"3548:5:11","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"3561:5:11","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"3490:5:11","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"3503:5:11","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"3370:9:11","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"3513:9:11","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"3568:9:11","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"3390:1:11","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"3393:1:11","valueSize":1}],"id":2581,"nodeType":"InlineAssembly","src":"3292:300:11"},{"assignments":[2583],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"twos","nameLocation":"3907:4:11","nodeType":"VariableDeclaration","scope":2664,"src":"3899:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2591,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3914:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:11","subExpression":{"id":2585,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3930:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:11"},{"AST":{"nodeType":"YulBlock","src":"3969:362:11","statements":[{"nodeType":"YulAssignment","src":"4034:37:11","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:11"},"nodeType":"YulFunctionCall","src":"4049:22:11"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:11"}]},{"nodeType":"YulAssignment","src":"4138:25:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:11"},"nodeType":"YulFunctionCall","src":"4147:16:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:11"}]},{"nodeType":"YulAssignment","src":"4278:39:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:11","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:11"},"nodeType":"YulFunctionCall","src":"4294:12:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:11"},"nodeType":"YulFunctionCall","src":"4290:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:11"},"nodeType":"YulFunctionCall","src":"4286:31:11"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2550,"isOffset":false,"isSlot":false,"src":"4034:11:11","valueSize":1},{"declaration":2550,"isOffset":false,"isSlot":false,"src":"4053:11:11","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"4138:5:11","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"4151:5:11","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4066:4:11","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4158:4:11","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4278:4:11","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4301:4:11","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4308:4:11","valueSize":1}],"id":2592,"nodeType":"InlineAssembly","src":"3960:371:11"},{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2593,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"4397:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"4406:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2595,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4414:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2598,"nodeType":"ExpressionStatement","src":"4397:21:11"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:11","nodeType":"VariableDeclaration","scope":2664,"src":"4736:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2607,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2602,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"4759:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:11"},{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2608,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4992:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5007:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2611,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5021:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2615,"nodeType":"ExpressionStatement","src":"4992:36:11"},{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2616,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5076:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2619,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5090:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ExpressionStatement","src":"5061:36:11"},{"expression":{"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5131:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5146:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2627,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5160:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"nodeType":"ExpressionStatement","src":"5131:36:11"},{"expression":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2632,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5201:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5216:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2635,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2639,"nodeType":"ExpressionStatement","src":"5201:36:11"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2640,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5286:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2643,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5300:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"5271:36:11"},{"expression":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2648,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5357:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2651,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5371:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ExpressionStatement","src":"5342:36:11"},{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"5812:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"5821:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2658,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5829:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"5812:24:11"},{"expression":{"id":2662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"5857:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2554,"id":2663,"nodeType":"Return","src":"5850:13:11"}]}]},"documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"1357:305:11","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:11","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"x","nameLocation":"1691:1:11","nodeType":"VariableDeclaration","scope":2666,"src":"1683:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"y","nameLocation":"1702:1:11","nodeType":"VariableDeclaration","scope":2666,"src":"1694:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:11","nodeType":"VariableDeclaration","scope":2666,"src":"1705:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:11"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"result","nameLocation":"1757:6:11","nodeType":"VariableDeclaration","scope":2666,"src":"1749:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:11"},"scope":3318,"src":"1667:4213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2709,"nodeType":"Block","src":"6122:189:11","statements":[{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"result","nameLocation":"6140:6:11","nodeType":"VariableDeclaration","scope":2709,"src":"6132:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2688,"initialValue":{"arguments":[{"id":2684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"6156:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2685,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6159:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2686,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"6162:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2683,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2666,2710],"referencedDeclaration":2666,"src":"6149:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"6188:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2690,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"6200:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum Math.Rounding)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"6200:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"src":"6188:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2694,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"6222:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2695,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6225:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"6228:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2693,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2706,"nodeType":"IfStatement","src":"6184:98:11","trueBody":{"id":2705,"nodeType":"Block","src":"6246:36:11","statements":[{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6260:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"6260:11:11"}]}},{"expression":{"id":2707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6298:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2680,"id":2708,"nodeType":"Return","src":"6291:13:11"}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"5886:121:11","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:11","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"x","nameLocation":"6036:1:11","nodeType":"VariableDeclaration","scope":2710,"src":"6028:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"y","nameLocation":"6047:1:11","nodeType":"VariableDeclaration","scope":2710,"src":"6039:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:11","nodeType":"VariableDeclaration","scope":2710,"src":"6050:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:11","nodeType":"VariableDeclaration","scope":2710,"src":"6071:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"typeName":{"id":2675,"nodeType":"UserDefinedTypeName","pathNode":{"id":2674,"name":"Rounding","nameLocations":["6071:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"6071:8:11"},"referencedDeclaration":2459,"src":"6071:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:11"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"6113:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:11"},"scope":3318,"src":"6012:299:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"6587:1585:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"6601:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2724,"nodeType":"IfStatement","src":"6597:45:11","trueBody":{"id":2723,"nodeType":"Block","src":"6609:33:11","statements":[{"expression":{"hexValue":"30","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2717,"id":2722,"nodeType":"Return","src":"6623:8:11"}]}},{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"result","nameLocation":"7329:6:11","nodeType":"VariableDeclaration","scope":2821,"src":"7321:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2735,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7349:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2728,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2990,3026],"referencedDeclaration":2990,"src":"7344:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:11"},{"id":2820,"nodeType":"UncheckedBlock","src":"7758:408:11","statements":[{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7782:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7792:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7801:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7805:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"7782:35:11"},{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7831:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7841:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7850:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7854:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2757,"nodeType":"ExpressionStatement","src":"7831:35:11"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7880:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7890:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7899:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7903:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"7880:35:11"},{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7929:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7939:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7948:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7952:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"7929:35:11"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7978:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7988:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7997:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8001:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"7978:35:11"},{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8027:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8037:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8046:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8050:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2801,"nodeType":"ExpressionStatement","src":"8027:35:11"},{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8076:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8086:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8095:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8099:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"8076:35:11"},{"expression":{"arguments":[{"id":2814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8136:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8144:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8148:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2813,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"8132:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2717,"id":2819,"nodeType":"Return","src":"8125:30:11"}]}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"6317:208:11","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:11","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"a","nameLocation":"6552:1:11","nodeType":"VariableDeclaration","scope":2822,"src":"6544:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:11"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2822,"src":"6578:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:11"},"scope":3318,"src":"6530:1642:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"8348:161:11","statements":[{"id":2856,"nodeType":"UncheckedBlock","src":"8358:145:11","statements":[{"assignments":[2834],"declarations":[{"constant":false,"id":2834,"mutability":"mutable","name":"result","nameLocation":"8390:6:11","nodeType":"VariableDeclaration","scope":2856,"src":"8382:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"initialValue":{"arguments":[{"id":2836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"8404:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2835,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2822,2858],"referencedDeclaration":2822,"src":"8399:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8427:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"8437:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2841,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"8449:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum Math.Rounding)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"8449:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"src":"8437:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8464:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8473:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"8482:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:11","trueExpression":{"hexValue":"31","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2832,"id":2855,"nodeType":"Return","src":"8420:72:11"}]}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"8178:89:11","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:11","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"a","nameLocation":"8294:1:11","nodeType":"VariableDeclaration","scope":2858,"src":"8286:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:11","nodeType":"VariableDeclaration","scope":2858,"src":"8297:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"typeName":{"id":2827,"nodeType":"UserDefinedTypeName","pathNode":{"id":2826,"name":"Rounding","nameLocations":["8297:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"8297:8:11"},"referencedDeclaration":2459,"src":"8297:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:11"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"8339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:11"},"scope":3318,"src":"8272:237:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"8694:922:11","statements":[{"assignments":[2867],"declarations":[{"constant":false,"id":2867,"mutability":"mutable","name":"result","nameLocation":"8712:6:11","nodeType":"VariableDeclaration","scope":2989,"src":"8704:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2869,"initialValue":{"hexValue":"30","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:11"},{"id":2986,"nodeType":"UncheckedBlock","src":"8732:855:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8760:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2884,"nodeType":"IfStatement","src":"8756:99:11","trueBody":{"id":2883,"nodeType":"Block","src":"8778:77:11","statements":[{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8796:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"8796:13:11"},{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"8827:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ExpressionStatement","src":"8827:13:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8872:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2899,"nodeType":"IfStatement","src":"8868:96:11","trueBody":{"id":2898,"nodeType":"Block","src":"8889:75:11","statements":[{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8907:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"8907:12:11"},{"expression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"8937:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2897,"nodeType":"ExpressionStatement","src":"8937:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8981:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2914,"nodeType":"IfStatement","src":"8977:96:11","trueBody":{"id":2913,"nodeType":"Block","src":"8998:75:11","statements":[{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9016:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"9016:12:11"},{"expression":{"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9046:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2912,"nodeType":"ExpressionStatement","src":"9046:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9090:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2929,"nodeType":"IfStatement","src":"9086:96:11","trueBody":{"id":2928,"nodeType":"Block","src":"9107:75:11","statements":[{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9125:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2923,"nodeType":"ExpressionStatement","src":"9125:12:11"},{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9155:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ExpressionStatement","src":"9155:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9199:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"nodeType":"IfStatement","src":"9195:93:11","trueBody":{"id":2943,"nodeType":"Block","src":"9215:73:11","statements":[{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9233:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ExpressionStatement","src":"9233:11:11"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2939,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9262:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2942,"nodeType":"ExpressionStatement","src":"9262:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9305:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2959,"nodeType":"IfStatement","src":"9301:93:11","trueBody":{"id":2958,"nodeType":"Block","src":"9321:73:11","statements":[{"expression":{"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9339:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2953,"nodeType":"ExpressionStatement","src":"9339:11:11"},{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9368:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2957,"nodeType":"ExpressionStatement","src":"9368:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9411:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"9407:93:11","trueBody":{"id":2973,"nodeType":"Block","src":"9427:73:11","statements":[{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9445:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"9445:11:11"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9474:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"9474:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9517:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"9513:64:11","trueBody":{"id":2984,"nodeType":"Block","src":"9533:44:11","statements":[{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9551:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ExpressionStatement","src":"9551:11:11"}]}}]},{"expression":{"id":2987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9603:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2865,"id":2988,"nodeType":"Return","src":"9596:13:11"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"8515:113:11","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:11","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"value","nameLocation":"8655:5:11","nodeType":"VariableDeclaration","scope":2990,"src":"8647:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:11"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"8685:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:11"},"scope":3318,"src":"8633:983:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3025,"nodeType":"Block","src":"9849:165:11","statements":[{"id":3024,"nodeType":"UncheckedBlock","src":"9859:149:11","statements":[{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"result","nameLocation":"9891:6:11","nodeType":"VariableDeclaration","scope":3024,"src":"9883:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3006,"initialValue":{"arguments":[{"id":3004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"9905:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2990,3026],"referencedDeclaration":2990,"src":"9900:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"9932:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"9942:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3009,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"9954:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum Math.Rounding)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"9954:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"src":"9942:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"9974:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"9983:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:11","trueExpression":{"hexValue":"31","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3000,"id":3023,"nodeType":"Return","src":"9925:72:11"}]}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"9622:142:11","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:11","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"value","nameLocation":"9791:5:11","nodeType":"VariableDeclaration","scope":3026,"src":"9783:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:11","nodeType":"VariableDeclaration","scope":3026,"src":"9798:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"typeName":{"id":2995,"nodeType":"UserDefinedTypeName","pathNode":{"id":2994,"name":"Rounding","nameLocations":["9798:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"9798:8:11"},"referencedDeclaration":2459,"src":"9798:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:11"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"9840:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:11"},"scope":3318,"src":"9769:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"10201:854:11","statements":[{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"result","nameLocation":"10219:6:11","nodeType":"VariableDeclaration","scope":3154,"src":"10211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3037,"initialValue":{"hexValue":"30","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:11"},{"id":3151,"nodeType":"UncheckedBlock","src":"10239:787:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10267:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"IfStatement","src":"10263:103:11","trueBody":{"id":3053,"nodeType":"Block","src":"10286:80:11","statements":[{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10304:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ExpressionStatement","src":"10304:17:11"},{"expression":{"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10339:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3052,"nodeType":"ExpressionStatement","src":"10339:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10383:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"IfStatement","src":"10379:103:11","trueBody":{"id":3070,"nodeType":"Block","src":"10402:80:11","statements":[{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10420:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"10420:17:11"},{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10455:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"10455:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10499:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3088,"nodeType":"IfStatement","src":"10495:103:11","trueBody":{"id":3087,"nodeType":"Block","src":"10518:80:11","statements":[{"expression":{"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10536:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3082,"nodeType":"ExpressionStatement","src":"10536:17:11"},{"expression":{"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10571:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3086,"nodeType":"ExpressionStatement","src":"10571:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10615:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3105,"nodeType":"IfStatement","src":"10611:100:11","trueBody":{"id":3104,"nodeType":"Block","src":"10633:78:11","statements":[{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10651:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3099,"nodeType":"ExpressionStatement","src":"10651:16:11"},{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10685:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3103,"nodeType":"ExpressionStatement","src":"10685:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10728:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"10724:100:11","trueBody":{"id":3121,"nodeType":"Block","src":"10746:78:11","statements":[{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10764:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ExpressionStatement","src":"10764:16:11"},{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10798:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"10798:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10841:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3139,"nodeType":"IfStatement","src":"10837:100:11","trueBody":{"id":3138,"nodeType":"Block","src":"10859:78:11","statements":[{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10877:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ExpressionStatement","src":"10877:16:11"},{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10911:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3137,"nodeType":"ExpressionStatement","src":"10911:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10954:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"10950:66:11","trueBody":{"id":3149,"nodeType":"Block","src":"10972:44:11","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10990:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ExpressionStatement","src":"10990:11:11"}]}}]},{"expression":{"id":3152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"11042:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3033,"id":3153,"nodeType":"Return","src":"11035:13:11"}]},"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"10020:114:11","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:11","nodeType":"FunctionDefinition","parameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"value","nameLocation":"10162:5:11","nodeType":"VariableDeclaration","scope":3155,"src":"10154:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:11"},"returnParameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"10192:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:11"},"scope":3318,"src":"10139:916:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3190,"nodeType":"Block","src":"11290:167:11","statements":[{"id":3189,"nodeType":"UncheckedBlock","src":"11300:151:11","statements":[{"assignments":[3167],"declarations":[{"constant":false,"id":3167,"mutability":"mutable","name":"result","nameLocation":"11332:6:11","nodeType":"VariableDeclaration","scope":3189,"src":"11324:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3171,"initialValue":{"arguments":[{"id":3169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"11347:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3155,3191],"referencedDeclaration":3155,"src":"11341:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"11374:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"11384:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3174,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"11396:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum Math.Rounding)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"11396:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"src":"11384:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"11417:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"11426:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:11","trueExpression":{"hexValue":"31","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3165,"id":3188,"nodeType":"Return","src":"11367:73:11"}]}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"11061:143:11","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:11","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"value","nameLocation":"11232:5:11","nodeType":"VariableDeclaration","scope":3191,"src":"11224:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:11","nodeType":"VariableDeclaration","scope":3191,"src":"11239:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"typeName":{"id":3160,"nodeType":"UserDefinedTypeName","pathNode":{"id":3159,"name":"Rounding","nameLocations":["11239:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"11239:8:11"},"referencedDeclaration":2459,"src":"11239:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:11"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"11281:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:11"},"scope":3318,"src":"11209:248:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3277,"nodeType":"Block","src":"11771:600:11","statements":[{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"result","nameLocation":"11789:6:11","nodeType":"VariableDeclaration","scope":3277,"src":"11781:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3202,"initialValue":{"hexValue":"30","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:11"},{"id":3274,"nodeType":"UncheckedBlock","src":"11809:533:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11837:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"IfStatement","src":"11833:98:11","trueBody":{"id":3216,"nodeType":"Block","src":"11855:76:11","statements":[{"expression":{"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11873:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3211,"nodeType":"ExpressionStatement","src":"11873:13:11"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"11904:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"11904:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11948:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3232,"nodeType":"IfStatement","src":"11944:95:11","trueBody":{"id":3231,"nodeType":"Block","src":"11965:74:11","statements":[{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11983:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ExpressionStatement","src":"11983:12:11"},{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12013:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"12013:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12056:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3247,"nodeType":"IfStatement","src":"12052:95:11","trueBody":{"id":3246,"nodeType":"Block","src":"12073:74:11","statements":[{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12091:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3241,"nodeType":"ExpressionStatement","src":"12091:12:11"},{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12121:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3245,"nodeType":"ExpressionStatement","src":"12121:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12164:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"12160:95:11","trueBody":{"id":3261,"nodeType":"Block","src":"12181:74:11","statements":[{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12199:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3256,"nodeType":"ExpressionStatement","src":"12199:12:11"},{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12229:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ExpressionStatement","src":"12229:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"nodeType":"IfStatement","src":"12268:64:11","trueBody":{"id":3272,"nodeType":"Block","src":"12288:44:11","statements":[{"expression":{"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12306:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3271,"nodeType":"ExpressionStatement","src":"12306:11:11"}]}}]},{"expression":{"id":3275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12358:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3198,"id":3276,"nodeType":"Return","src":"12351:13:11"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"11463:240:11","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:11","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"11732:5:11","nodeType":"VariableDeclaration","scope":3278,"src":"11724:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:11"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"11762:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:11"},"scope":3318,"src":"11708:663:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"12608:174:11","statements":[{"id":3315,"nodeType":"UncheckedBlock","src":"12618:158:11","statements":[{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"result","nameLocation":"12650:6:11","nodeType":"VariableDeclaration","scope":3315,"src":"12642:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3294,"initialValue":{"arguments":[{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"12666:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3291,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3278,3317],"referencedDeclaration":3278,"src":"12659:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"12693:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3296,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"12703:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3297,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"12715:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum Math.Rounding)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"12715:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"src":"12703:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"12736:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"12751:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:11","trueExpression":{"hexValue":"31","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3288,"id":3314,"nodeType":"Return","src":"12686:79:11"}]}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"12377:144:11","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:11","nodeType":"FunctionDefinition","parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"value","nameLocation":"12550:5:11","nodeType":"VariableDeclaration","scope":3317,"src":"12542:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:11","nodeType":"VariableDeclaration","scope":3317,"src":"12557:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"},"typeName":{"id":3283,"nodeType":"UserDefinedTypeName","pathNode":{"id":3282,"name":"Rounding","nameLocations":["12557:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"12557:8:11"},"referencedDeclaration":2459,"src":"12557:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:11"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"12599:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:11"},"scope":3318,"src":"12526:256:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3319,"src":"202:12582:11","usedErrors":[]}],"src":"103:12682:11"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3423]},"id":3424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"134:80:12","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3423,"linearizedBaseContracts":[3423],"name":"SignedMath","nameLocation":"223:10:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":3338,"nodeType":"Block","src":"375:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"392:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3332,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"396:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"404:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:12","trueExpression":{"id":3334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"400:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3330,"id":3337,"nodeType":"Return","src":"385:20:12"}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"240:66:12","text":" @dev Returns the largest of two signed numbers."},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:12","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"a","nameLocation":"331:1:12","nodeType":"VariableDeclaration","scope":3339,"src":"324:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3323,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"b","nameLocation":"341:1:12","nodeType":"VariableDeclaration","scope":3339,"src":"334:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3325,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:12"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"367:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3328,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:12"},"scope":3423,"src":"311:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3356,"nodeType":"Block","src":"554:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"571:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"575:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"583:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:12","trueExpression":{"id":3352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"579:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3348,"id":3355,"nodeType":"Return","src":"564:20:12"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"418:67:12","text":" @dev Returns the smallest of two signed numbers."},"id":3357,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:12","nodeType":"FunctionDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"a","nameLocation":"510:1:12","nodeType":"VariableDeclaration","scope":3357,"src":"503:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3341,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"b","nameLocation":"520:1:12","nodeType":"VariableDeclaration","scope":3357,"src":"513:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3343,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:12"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3357,"src":"546:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3346,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:12"},"scope":3423,"src":"490:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3400,"nodeType":"Block","src":"796:162:12","statements":[{"assignments":[3368],"declarations":[{"constant":false,"id":3368,"mutability":"mutable","name":"x","nameLocation":"865:1:12","nodeType":"VariableDeclaration","scope":3400,"src":"858:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3367,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3381,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"870:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"874:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"881:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"885:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:12"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"910:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3387,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"930:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:12","typeDescriptions":{}}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3383,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:12","typeDescriptions":{}}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"944:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"948:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3366,"id":3399,"nodeType":"Return","src":"903:48:12"}]},"documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"597:126:12","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:12","nodeType":"FunctionDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"a","nameLocation":"752:1:12","nodeType":"VariableDeclaration","scope":3401,"src":"745:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3359,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3362,"mutability":"mutable","name":"b","nameLocation":"762:1:12","nodeType":"VariableDeclaration","scope":3401,"src":"755:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3361,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:12"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3401,"src":"788:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3364,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:12"},"scope":3423,"src":"728:230:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3421,"nodeType":"Block","src":"1102:158:12","statements":[{"id":3420,"nodeType":"UncheckedBlock","src":"1112:142:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3411,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1227:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:12","subExpression":{"id":3415,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1241:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:12","trueExpression":{"id":3414,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1236:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:12","typeDescriptions":{}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3408,"id":3419,"nodeType":"Return","src":"1212:31:12"}]}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"964:78:12","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3422,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:12","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"n","nameLocation":"1067:1:12","nodeType":"VariableDeclaration","scope":3422,"src":"1060:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3403,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:12"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3422,"src":"1093:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:12"},"scope":3423,"src":"1047:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3424,"src":"215:1047:12","usedErrors":[]}],"src":"109:1154:12"}},"contracts/AiYueNFTExchange.sol":{"id":13,"ast":{"absolutePath":"contracts/AiYueNFTExchange.sol","exportedSymbols":{"Address":[1799],"AiYueNFTExchange":[4272],"Context":[1821],"ECDSA":[2416],"ERC1155":[1222],"ERC1155Burnable":[1454],"ERC165":[2440],"IERC1155":[1344],"IERC1155MetadataURI":[1469],"IERC1155Receiver":[1385],"IERC165":[2452],"Math":[3318],"SignedMath":[3423],"Strings":[2050]},"id":4273,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3425,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":3426,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4273,"sourceUnit":1223,"src":"61:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":3427,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4273,"sourceUnit":1455,"src":"122:78:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4273,"sourceUnit":2417,"src":"202:62:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3429,"name":"ERC1155","nameLocations":["297:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"297:7:13"},"id":3430,"nodeType":"InheritanceSpecifier","src":"297:7:13"},{"baseName":{"id":3431,"name":"ERC1155Burnable","nameLocations":["306:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":1454,"src":"306:15:13"},"id":3432,"nodeType":"InheritanceSpecifier","src":"306:15:13"}],"canonicalName":"AiYueNFTExchange","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4272,"linearizedBaseContracts":[4272,1454,1222,1469,1344,2440,2452,1821],"name":"AiYueNFTExchange","nameLocation":"277:16:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AiYueNFTExchange.InitialOwner","id":3437,"members":[{"constant":false,"id":3434,"mutability":"mutable","name":"owner","nameLocation":"370:5:13","nodeType":"VariableDeclaration","scope":3437,"src":"362:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3433,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"amount","nameLocation":"394:6:13","nodeType":"VariableDeclaration","scope":3437,"src":"386:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"386:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"InitialOwner","nameLocation":"338:12:13","nodeType":"StructDefinition","scope":4272,"src":"331:77:13","visibility":"public"},{"canonicalName":"AiYueNFTExchange.CurrentOwner","id":3442,"members":[{"constant":false,"id":3439,"mutability":"mutable","name":"owner","nameLocation":"455:5:13","nodeType":"VariableDeclaration","scope":3442,"src":"447:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3438,"name":"address","nodeType":"ElementaryTypeName","src":"447:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"amount","nameLocation":"479:6:13","nodeType":"VariableDeclaration","scope":3442,"src":"471:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CurrentOwner","nameLocation":"423:12:13","nodeType":"StructDefinition","scope":4272,"src":"416:77:13","visibility":"public"},{"canonicalName":"AiYueNFTExchange.Vote","id":3447,"members":[{"constant":false,"id":3444,"mutability":"mutable","name":"voter","nameLocation":"532:5:13","nodeType":"VariableDeclaration","scope":3447,"src":"524:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3443,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"number","nameLocation":"556:6:13","nodeType":"VariableDeclaration","scope":3447,"src":"548:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"548:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Vote","nameLocation":"508:4:13","nodeType":"StructDefinition","scope":4272,"src":"501:69:13","visibility":"public"},{"global":false,"id":3450,"libraryName":{"id":3448,"name":"ECDSA","nameLocations":["582:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"582:5:13"},"nodeType":"UsingForDirective","src":"576:24:13","typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"592:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"64d19025","id":3455,"mutability":"mutable","name":"initialOwners","nameLocation":"646:13:13","nodeType":"VariableDeclaration","scope":4272,"src":"606:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3437_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner)"},"typeName":{"id":3454,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"606:32:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3437_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3453,"nodeType":"UserDefinedTypeName","pathNode":{"id":3452,"name":"InitialOwner","nameLocations":["625:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3437,"src":"625:12:13"},"referencedDeclaration":3437,"src":"625:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_storage_ptr","typeString":"struct AiYueNFTExchange.InitialOwner"}}},"visibility":"public"},{"constant":false,"functionSelector":"88a99f02","id":3461,"mutability":"mutable","name":"tokenIdCurrentOwner","nameLocation":"708:19:13","nodeType":"VariableDeclaration","scope":4272,"src":"666:61:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner[])"},"typeName":{"id":3460,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"666:34:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3458,"nodeType":"UserDefinedTypeName","pathNode":{"id":3457,"name":"CurrentOwner","nameLocations":["685:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"685:12:13"},"referencedDeclaration":3442,"src":"685:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":3459,"nodeType":"ArrayTypeName","src":"685:14:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"9eb79a75","id":3467,"mutability":"mutable","name":"voteInfo","nameLocation":"768:8:13","nodeType":"VariableDeclaration","scope":4272,"src":"734:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote[])"},"typeName":{"id":3466,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"734:26:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3464,"nodeType":"UserDefinedTypeName","pathNode":{"id":3463,"name":"Vote","nameLocations":["753:4:13"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"753:4:13"},"referencedDeclaration":3447,"src":"753:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":3465,"nodeType":"ArrayTypeName","src":"753:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}}},"visibility":"public"},{"constant":false,"id":3471,"mutability":"mutable","name":"executed","nameLocation":"809:8:13","nodeType":"VariableDeclaration","scope":4272,"src":"783:34:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":3470,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"791:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"783:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3469,"name":"bool","nodeType":"ElementaryTypeName","src":"802:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"operatorApprovals","nameLocation":"877:17:13","nodeType":"VariableDeclaration","scope":4272,"src":"824:70:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":3476,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3472,"name":"address","nodeType":"ElementaryTypeName","src":"832:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"824:44:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3475,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3473,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"843:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3474,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":3481,"mutability":"mutable","name":"_uris","nameLocation":"936:5:13","nodeType":"VariableDeclaration","scope":4272,"src":"901:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3480,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"901:26:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3479,"name":"string","nodeType":"ElementaryTypeName","src":"920:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"constant":false,"functionSelector":"06fdde03","id":3483,"mutability":"mutable","name":"name","nameLocation":"962:4:13","nodeType":"VariableDeclaration","scope":4272,"src":"948:18:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3482,"name":"string","nodeType":"ElementaryTypeName","src":"948:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":3485,"mutability":"mutable","name":"symbol","nameLocation":"987:6:13","nodeType":"VariableDeclaration","scope":4272,"src":"973:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3484,"name":"string","nodeType":"ElementaryTypeName","src":"973:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":3503,"nodeType":"Block","src":"1275:58:13","statements":[{"expression":{"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3495,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"1286:4:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3496,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"1293:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1286:12:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3498,"nodeType":"ExpressionStatement","src":"1286:12:13"},{"expression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3499,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"1309:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3500,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"1318:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1309:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3502,"nodeType":"ExpressionStatement","src":"1309:16:13"}]},"id":3504,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"68747470733a2f2f677261792d6e6f7461626c652d7068656173616e742d3932372e6d7970696e6174612e636c6f75642f697066732f516d5938554347615542767452477854577a58715a456257504d3861374d74766b57614a727473327a78525145793f5f676c3d312a31766476656d312a5f67612a4d6a63794f5441334e5449754d5459344f546b774e6a45334e412e2e2a5f67615f35524d505847313454452a4d5459354d5441794e7a45354d6934784d4334784c6a45324f5445774d6a63794d4455754e4463754d433477","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1064:209:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb8d595d61496ead1f8653c831b50d0ed120ae77abb9fd412ead621db4dd9b32","typeString":"literal_string \"https://gray-notable-pheasant-927.mypinata.cloud/ipfs/QmY8UCGaUBvtRGxTWzXqZEbWPM8a7MtvkWaJrts2zxRQEy?_gl=1*1vdvem1*_ga*MjcyOTA3NTIuMTY4OTkwNjE3NA..*_ga_5RMPXG14TE*MTY5MTAyNzE5Mi4xMC4xLjE2OTEwMjcyMDUuNDcuMC4w\""},"value":"https://gray-notable-pheasant-927.mypinata.cloud/ipfs/QmY8UCGaUBvtRGxTWzXqZEbWPM8a7MtvkWaJrts2zxRQEy?_gl=1*1vdvem1*_ga*MjcyOTA3NTIuMTY4OTkwNjE3NA..*_ga_5RMPXG14TE*MTY5MTAyNzE5Mi4xMC4xLjE2OTEwMjcyMDUuNDcuMC4w"}],"id":3493,"kind":"baseConstructorSpecifier","modifierName":{"id":3491,"name":"ERC1155","nameLocations":["1056:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1056:7:13"},"nodeType":"ModifierInvocation","src":"1056:218:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"_name","nameLocation":"1026:5:13","nodeType":"VariableDeclaration","scope":3504,"src":"1012:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3486,"name":"string","nodeType":"ElementaryTypeName","src":"1012:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"_symbol","nameLocation":"1047:7:13","nodeType":"VariableDeclaration","scope":3504,"src":"1033:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3488,"name":"string","nodeType":"ElementaryTypeName","src":"1033:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1011:44:13"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[],"src":"1275:0:13"},"scope":4272,"src":"1000:333:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3513,"nodeType":"Block","src":"1384:34:13","statements":[{"expression":{"arguments":[{"id":3510,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"1403:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3509,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1395:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1395:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3512,"nodeType":"ExpressionStatement","src":"1395:15:13"}]},"functionSelector":"02fe5305","id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"setURI","nameLocation":"1348:6:13","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"newuri","nameLocation":"1369:6:13","nodeType":"VariableDeclaration","scope":3514,"src":"1355:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3505,"name":"string","nodeType":"ElementaryTypeName","src":"1355:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1354:22:13"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[],"src":"1384:0:13"},"scope":4272,"src":"1339:79:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[87],"body":{"id":3527,"nodeType":"Block","src":"1500:42:13","statements":[{"expression":{"components":[{"baseExpression":{"id":3522,"name":"_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"1519:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3524,"indexExpression":{"id":3523,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"1525:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1519:14:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":3525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1518:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3521,"id":3526,"nodeType":"Return","src":"1511:23:13"}]},"functionSelector":"0e89341c","id":3528,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1435:3:13","nodeType":"FunctionDefinition","overrides":{"id":3518,"nodeType":"OverrideSpecifier","overrides":[],"src":"1456:8:13"},"parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"tokenId","nameLocation":"1447:7:13","nodeType":"VariableDeclaration","scope":3528,"src":"1439:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1439:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1438:17:13"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3528,"src":"1486:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3519,"name":"string","nodeType":"ElementaryTypeName","src":"1486:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1485:15:13"},"scope":4272,"src":"1426:116:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3541,"nodeType":"Block","src":"1614:39:13","statements":[{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3535,"name":"_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"1625:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3537,"indexExpression":{"id":3536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"1631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1625:14:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3538,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1642:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1625:20:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3540,"nodeType":"ExpressionStatement","src":"1625:20:13"}]},"functionSelector":"57f7789e","id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"setTokenUri","nameLocation":"1559:11:13","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"tokenId","nameLocation":"1579:7:13","nodeType":"VariableDeclaration","scope":3542,"src":"1571:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"uri","nameLocation":"1602:3:13","nodeType":"VariableDeclaration","scope":3542,"src":"1588:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3531,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1570:36:13"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[],"src":"1614:0:13"},"scope":4272,"src":"1550:103:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3580,"nodeType":"Block","src":"1770:172:13","statements":[{"expression":{"arguments":[{"id":3556,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"1787:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3557,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"1796:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3558,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1800:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3559,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"1808:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3555,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"1781:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1781:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3561,"nodeType":"ExpressionStatement","src":"1781:32:13"},{"expression":{"arguments":[{"id":3563,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"1840:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3564,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"1849:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1853:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3562,"name":"initOwnerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"1824:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3567,"nodeType":"ExpressionStatement","src":"1824:36:13"},{"expression":{"arguments":[{"id":3569,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"1888:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3570,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"1897:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1901:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3568,"name":"initCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1871:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1871:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3573,"nodeType":"ExpressionStatement","src":"1871:37:13"},{"expression":{"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3574,"name":"_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"1919:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3576,"indexExpression":{"id":3575,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"1925:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1919:9:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3577,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"1931:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1919:15:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3579,"nodeType":"ExpressionStatement","src":"1919:15:13"}]},"functionSelector":"a4b645eb","id":3581,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1670:4:13","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"account","nameLocation":"1683:7:13","nodeType":"VariableDeclaration","scope":3581,"src":"1675:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"1675:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"id","nameLocation":"1700:2:13","nodeType":"VariableDeclaration","scope":3581,"src":"1692:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"amount","nameLocation":"1712:6:13","nodeType":"VariableDeclaration","scope":3581,"src":"1704:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"uri","nameLocation":"1734:3:13","nodeType":"VariableDeclaration","scope":3581,"src":"1720:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3549,"name":"string","nodeType":"ElementaryTypeName","src":"1720:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"data","nameLocation":"1752:4:13","nodeType":"VariableDeclaration","scope":3581,"src":"1739:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3551,"name":"bytes","nodeType":"ElementaryTypeName","src":"1739:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1674:83:13"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[],"src":"1770:0:13"},"scope":4272,"src":"1661:281:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3609,"nodeType":"Block","src":"2054:115:13","statements":[{"expression":{"arguments":[{"id":3595,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"2082:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3596,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"2088:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3597,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"2092:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3598,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"2096:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3599,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"2104:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3594,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2065:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2065:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3601,"nodeType":"ExpressionStatement","src":"2065:44:13"},{"expression":{"arguments":[{"id":3603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"2140:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3604,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"2146:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3605,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"2150:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3606,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"2154:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3602,"name":"changeTokenIdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"2120:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2120:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3608,"nodeType":"ExpressionStatement","src":"2120:41:13"}]},"functionSelector":"605105f0","id":3610,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1961:12:13","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"from","nameLocation":"1982:4:13","nodeType":"VariableDeclaration","scope":3610,"src":"1974:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"to","nameLocation":"1996:2:13","nodeType":"VariableDeclaration","scope":3610,"src":"1988:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"1988:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3587,"mutability":"mutable","name":"id","nameLocation":"2008:2:13","nodeType":"VariableDeclaration","scope":3610,"src":"2000:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3589,"mutability":"mutable","name":"amount","nameLocation":"2020:6:13","nodeType":"VariableDeclaration","scope":3610,"src":"2012:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"data","nameLocation":"2041:4:13","nodeType":"VariableDeclaration","scope":3610,"src":"2028:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3590,"name":"bytes","nodeType":"ElementaryTypeName","src":"2028:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1973:73:13"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[],"src":"2054:0:13"},"scope":4272,"src":"1952:217:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3630,"nodeType":"Block","src":"2287:53:13","statements":[{"expression":{"arguments":[{"id":3624,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2309:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3625,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"2313:3:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3626,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"2318:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3627,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"2327:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3623,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2298:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3629,"nodeType":"ExpressionStatement","src":"2298:34:13"}]},"functionSelector":"1f7fdffa","id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"mintBatch","nameLocation":"2186:9:13","nodeType":"FunctionDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"to","nameLocation":"2204:2:13","nodeType":"VariableDeclaration","scope":3631,"src":"2196:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3615,"mutability":"mutable","name":"ids","nameLocation":"2225:3:13","nodeType":"VariableDeclaration","scope":3631,"src":"2208:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ArrayTypeName","src":"2208:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"amounts","nameLocation":"2247:7:13","nodeType":"VariableDeclaration","scope":3631,"src":"2230:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ArrayTypeName","src":"2230:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"data","nameLocation":"2269:4:13","nodeType":"VariableDeclaration","scope":3631,"src":"2256:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3619,"name":"bytes","nodeType":"ElementaryTypeName","src":"2256:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2195:79:13"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[],"src":"2287:0:13"},"scope":4272,"src":"2177:163:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3654,"nodeType":"Block","src":"2432:191:13","statements":[{"assignments":[3642],"declarations":[{"constant":false,"id":3642,"mutability":"mutable","name":"initialOwner","nameLocation":"2463:12:13","nodeType":"VariableDeclaration","scope":3654,"src":"2443:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_memory_ptr","typeString":"struct AiYueNFTExchange.InitialOwner"},"typeName":{"id":3641,"nodeType":"UserDefinedTypeName","pathNode":{"id":3640,"name":"InitialOwner","nameLocations":["2443:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3437,"src":"2443:12:13"},"referencedDeclaration":3437,"src":"2443:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_storage_ptr","typeString":"struct AiYueNFTExchange.InitialOwner"}},"visibility":"internal"}],"id":3647,"initialValue":{"arguments":[{"id":3644,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2514:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3645,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"2544:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3643,"name":"InitialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"2478:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_InitialOwner_$3437_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.InitialOwner storage pointer)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2506:5:13","2535:6:13"],"names":["owner","amount"],"nodeType":"FunctionCall","src":"2478:89:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_memory_ptr","typeString":"struct AiYueNFTExchange.InitialOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"2443:124:13"},{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3648,"name":"initialOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"2578:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3437_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner storage ref)"}},"id":3650,"indexExpression":{"id":3649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"2592:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2578:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3651,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"2603:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_memory_ptr","typeString":"struct AiYueNFTExchange.InitialOwner memory"}},"src":"2578:37:13","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"id":3653,"nodeType":"ExpressionStatement","src":"2578:37:13"}]},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"initOwnerAmount","nameLocation":"2357:15:13","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"_owner","nameLocation":"2381:6:13","nodeType":"VariableDeclaration","scope":3655,"src":"2373:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3632,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"tokenId","nameLocation":"2397:7:13","nodeType":"VariableDeclaration","scope":3655,"src":"2389:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"_amount","nameLocation":"2414:7:13","nodeType":"VariableDeclaration","scope":3655,"src":"2406:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:50:13"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[],"src":"2432:0:13"},"scope":4272,"src":"2348:275:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3679,"nodeType":"Block","src":"2716:201:13","statements":[{"assignments":[3666],"declarations":[{"constant":false,"id":3666,"mutability":"mutable","name":"currentOwner","nameLocation":"2747:12:13","nodeType":"VariableDeclaration","scope":3679,"src":"2727:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":3665,"nodeType":"UserDefinedTypeName","pathNode":{"id":3664,"name":"CurrentOwner","nameLocations":["2727:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"2727:12:13"},"referencedDeclaration":3442,"src":"2727:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":3671,"initialValue":{"arguments":[{"id":3668,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"2798:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3669,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"2828:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3667,"name":"CurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"2762:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CurrentOwner_$3442_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.CurrentOwner storage pointer)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2790:5:13","2819:6:13"],"names":["owner","amount"],"nodeType":"FunctionCall","src":"2762:89:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"2727:124:13"},{"expression":{"arguments":[{"id":3676,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"2896:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}],"expression":{"baseExpression":{"id":3672,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"2862:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":3674,"indexExpression":{"id":3673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"2882:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2862:28:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2891:4:13","memberName":"push","nodeType":"MemberAccess","src":"2862:33:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr_$_t_struct$_CurrentOwner_$3442_storage_$returns$__$attached_to$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr_$","typeString":"function (struct AiYueNFTExchange.CurrentOwner storage ref[] storage pointer,struct AiYueNFTExchange.CurrentOwner storage ref)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3678,"nodeType":"ExpressionStatement","src":"2862:47:13"}]},"id":3680,"implemented":true,"kind":"function","modifiers":[],"name":"initCurrentOwner","nameLocation":"2640:16:13","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"_owner","nameLocation":"2665:6:13","nodeType":"VariableDeclaration","scope":3680,"src":"2657:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3656,"name":"address","nodeType":"ElementaryTypeName","src":"2657:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"tokenId","nameLocation":"2681:7:13","nodeType":"VariableDeclaration","scope":3680,"src":"2673:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2673:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"_amount","nameLocation":"2698:7:13","nodeType":"VariableDeclaration","scope":3680,"src":"2690:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2690:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2656:50:13"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[],"src":"2716:0:13"},"scope":4272,"src":"2631:286:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3774,"nodeType":"Block","src":"3026:821:13","statements":[{"condition":{"arguments":[{"id":3692,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3054:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3693,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3064:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3691,"name":"getShareExit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"3041:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3041:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3740,"nodeType":"Block","src":"3354:223:13","statements":[{"assignments":[3727],"declarations":[{"constant":false,"id":3727,"mutability":"mutable","name":"currentOwner","nameLocation":"3389:12:13","nodeType":"VariableDeclaration","scope":3740,"src":"3369:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":3726,"nodeType":"UserDefinedTypeName","pathNode":{"id":3725,"name":"CurrentOwner","nameLocations":["3369:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"3369:12:13"},"referencedDeclaration":3442,"src":"3369:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":3732,"initialValue":{"arguments":[{"id":3729,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3444:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3730,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"3475:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"name":"CurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"3404:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CurrentOwner_$3442_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.CurrentOwner storage pointer)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3436:5:13","3466:6:13"],"names":["owner","amount"],"nodeType":"FunctionCall","src":"3404:98:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"3369:133:13"},{"expression":{"arguments":[{"id":3737,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"3552:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}],"expression":{"baseExpression":{"id":3733,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"3517:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":3735,"indexExpression":{"id":3734,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3537:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3517:29:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3547:4:13","memberName":"push","nodeType":"MemberAccess","src":"3517:34:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr_$_t_struct$_CurrentOwner_$3442_storage_$returns$__$attached_to$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr_$","typeString":"function (struct AiYueNFTExchange.CurrentOwner storage ref[] storage pointer,struct AiYueNFTExchange.CurrentOwner storage ref)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3517:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3739,"nodeType":"ExpressionStatement","src":"3517:48:13"}]},"id":3741,"nodeType":"IfStatement","src":"3037:540:13","trueBody":{"id":3724,"nodeType":"Block","src":"3070:278:13","statements":[{"assignments":[3697],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"currentOwner","nameLocation":"3105:12:13","nodeType":"VariableDeclaration","scope":3724,"src":"3085:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":3696,"nodeType":"UserDefinedTypeName","pathNode":{"id":3695,"name":"CurrentOwner","nameLocations":["3085:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"3085:12:13"},"referencedDeclaration":3442,"src":"3085:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":3702,"initialValue":{"arguments":[{"id":3699,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3135:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3700,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3145:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3698,"name":"getShareEntity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3120:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_struct$_CurrentOwner_$3442_memory_ptr_$","typeString":"function (uint256,address) view returns (struct AiYueNFTExchange.CurrentOwner memory)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3120:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"3085:64:13"},{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3703,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"3164:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":3705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3177:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3441,"src":"3164:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3706,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"3187:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3164:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3708,"nodeType":"ExpressionStatement","src":"3164:30:13"},{"assignments":[3710],"declarations":[{"constant":false,"id":3710,"mutability":"mutable","name":"shareIndex","nameLocation":"3219:10:13","nodeType":"VariableDeclaration","scope":3724,"src":"3211:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3715,"initialValue":{"arguments":[{"id":3712,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3251:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3713,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"3261:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3711,"name":"getShareArrayIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"3232:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3211:54:13"},{"expression":{"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3716,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"3280:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":3719,"indexExpression":{"id":3717,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3300:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3280:29:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":3720,"indexExpression":{"id":3718,"name":"shareIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"3310:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3280:41:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3721,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"3324:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"src":"3280:56:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"id":3723,"nodeType":"ExpressionStatement","src":"3280:56:13"}]}},{"assignments":[3744],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"current","nameLocation":"3609:7:13","nodeType":"VariableDeclaration","scope":3774,"src":"3589:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":3743,"nodeType":"UserDefinedTypeName","pathNode":{"id":3742,"name":"CurrentOwner","nameLocations":["3589:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"3589:12:13"},"referencedDeclaration":3442,"src":"3589:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":3749,"initialValue":{"arguments":[{"id":3746,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3634:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3747,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"3644:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3745,"name":"getShareEntity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3619:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_struct$_CurrentOwner_$3442_memory_ptr_$","typeString":"function (uint256,address) view returns (struct AiYueNFTExchange.CurrentOwner memory)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"VariableDeclarationStatement","src":"3589:61:13"},{"expression":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3750,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"3661:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":3752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3669:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3441,"src":"3661:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3753,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"3678:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":3754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3686:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3441,"src":"3678:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3755,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"3695:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3678:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3661:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3758,"nodeType":"ExpressionStatement","src":"3661:41:13"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"shareOneIndex","nameLocation":"3723:13:13","nodeType":"VariableDeclaration","scope":3774,"src":"3715:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3715:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3765,"initialValue":{"arguments":[{"id":3762,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3758:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3763,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"3768:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3761,"name":"getShareArrayIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"3739:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3715:59:13"},{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3766,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"3785:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":3769,"indexExpression":{"id":3767,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"3805:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3785:29:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"id":3770,"indexExpression":{"id":3768,"name":"shareOneIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3815:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3785:44:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3771,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"3832:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"src":"3785:54:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref"}},"id":3773,"nodeType":"ExpressionStatement","src":"3785:54:13"}]},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"changeTokenIdAmount","nameLocation":"2934:19:13","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"_from","nameLocation":"2962:5:13","nodeType":"VariableDeclaration","scope":3775,"src":"2954:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3681,"name":"address","nodeType":"ElementaryTypeName","src":"2954:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3684,"mutability":"mutable","name":"_to","nameLocation":"2977:3:13","nodeType":"VariableDeclaration","scope":3775,"src":"2969:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3683,"name":"address","nodeType":"ElementaryTypeName","src":"2969:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"_tokenId","nameLocation":"2990:8:13","nodeType":"VariableDeclaration","scope":3775,"src":"2982:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"_amount","nameLocation":"3008:7:13","nodeType":"VariableDeclaration","scope":3775,"src":"3000:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3000:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2953:63:13"},"returnParameters":{"id":3690,"nodeType":"ParameterList","parameters":[],"src":"3026:0:13"},"scope":4272,"src":"2925:922:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3818,"nodeType":"Block","src":"3938:255:13","statements":[{"assignments":[3788],"declarations":[{"constant":false,"id":3788,"mutability":"mutable","name":"shares","nameLocation":"3971:6:13","nodeType":"VariableDeclaration","scope":3818,"src":"3949:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"},"typeName":{"baseType":{"id":3786,"nodeType":"UserDefinedTypeName","pathNode":{"id":3785,"name":"CurrentOwner","nameLocations":["3949:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"3949:12:13"},"referencedDeclaration":3442,"src":"3949:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":3787,"nodeType":"ArrayTypeName","src":"3949:14:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}},"visibility":"internal"}],"id":3792,"initialValue":{"baseExpression":{"id":3789,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"3980:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":3791,"indexExpression":{"id":3790,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"4000:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3980:29:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3949:60:13"},{"body":{"id":3814,"nodeType":"Block","src":"4061:102:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3804,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"4080:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":3806,"indexExpression":{"id":3805,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"4087:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4080:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":3807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4090:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3439,"src":"4080:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3808,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"4099:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4080:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3813,"nodeType":"IfStatement","src":"4076:76:13","trueBody":{"id":3812,"nodeType":"Block","src":"4106:46:13","statements":[{"expression":{"hexValue":"74727565","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4132:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3783,"id":3811,"nodeType":"Return","src":"4125:11:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3797,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"4037:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3798,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"4041:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4048:6:13","memberName":"length","nodeType":"MemberAccess","src":"4041:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4037:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3815,"initializationExpression":{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"i","nameLocation":"4030:1:13","nodeType":"VariableDeclaration","scope":3815,"src":"4025:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint","nodeType":"ElementaryTypeName","src":"4025:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3796,"initialValue":{"hexValue":"30","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4034:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4025:10:13"},"loopExpression":{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4056:3:13","subExpression":{"id":3801,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"4056:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3803,"nodeType":"ExpressionStatement","src":"4056:3:13"},"nodeType":"ForStatement","src":"4020:143:13"},{"expression":{"hexValue":"66616c7365","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4180:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3783,"id":3817,"nodeType":"Return","src":"4173:12:13"}]},"id":3819,"implemented":true,"kind":"function","modifiers":[],"name":"getShareExit","nameLocation":"3864:12:13","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"_tokenId","nameLocation":"3885:8:13","nodeType":"VariableDeclaration","scope":3819,"src":"3877:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3877:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"owner","nameLocation":"3903:5:13","nodeType":"VariableDeclaration","scope":3819,"src":"3895:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3778,"name":"address","nodeType":"ElementaryTypeName","src":"3895:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3876:33:13"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3819,"src":"3933:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3781,"name":"bool","nodeType":"ElementaryTypeName","src":"3933:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3932:6:13"},"scope":4272,"src":"3855:338:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3873,"nodeType":"Block","src":"4301:341:13","statements":[{"assignments":[3831],"declarations":[{"constant":false,"id":3831,"mutability":"mutable","name":"share","nameLocation":"4333:5:13","nodeType":"VariableDeclaration","scope":3873,"src":"4312:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":3830,"nodeType":"UserDefinedTypeName","pathNode":{"id":3829,"name":"CurrentOwner","nameLocations":["4312:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"4312:12:13"},"referencedDeclaration":3442,"src":"4312:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"id":3832,"nodeType":"VariableDeclarationStatement","src":"4312:26:13"},{"assignments":[3837],"declarations":[{"constant":false,"id":3837,"mutability":"mutable","name":"shareList","nameLocation":"4371:9:13","nodeType":"VariableDeclaration","scope":3873,"src":"4349:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"},"typeName":{"baseType":{"id":3835,"nodeType":"UserDefinedTypeName","pathNode":{"id":3834,"name":"CurrentOwner","nameLocations":["4349:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"4349:12:13"},"referencedDeclaration":3442,"src":"4349:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":3836,"nodeType":"ArrayTypeName","src":"4349:14:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}},"visibility":"internal"}],"id":3841,"initialValue":{"baseExpression":{"id":3838,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"4383:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":3840,"indexExpression":{"id":3839,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"4403:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4383:29:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4349:63:13"},{"body":{"id":3869,"nodeType":"Block","src":"4467:145:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3853,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"4486:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":3855,"indexExpression":{"id":3854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"4496:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4486:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":3856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4499:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3439,"src":"4486:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3857,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"4508:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4486:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3868,"nodeType":"IfStatement","src":"4482:119:13","trueBody":{"id":3867,"nodeType":"Block","src":"4515:86:13","statements":[{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3859,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"4534:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3860,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"4542:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":3862,"indexExpression":{"id":3861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"4552:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4542:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"src":"4534:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":3864,"nodeType":"ExpressionStatement","src":"4534:20:13"},{"expression":{"id":3865,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"4580:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"functionReturnParameters":3828,"id":3866,"nodeType":"Return","src":"4573:12:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"4440:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3847,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"4444:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4454:6:13","memberName":"length","nodeType":"MemberAccess","src":"4444:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4440:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3870,"initializationExpression":{"assignments":[3843],"declarations":[{"constant":false,"id":3843,"mutability":"mutable","name":"i","nameLocation":"4433:1:13","nodeType":"VariableDeclaration","scope":3870,"src":"4428:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint","nodeType":"ElementaryTypeName","src":"4428:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"initialValue":{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4437:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4428:10:13"},"loopExpression":{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4462:3:13","subExpression":{"id":3850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"4462:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"4462:3:13"},"nodeType":"ForStatement","src":"4423:189:13"},{"expression":{"id":3871,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"4629:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"functionReturnParameters":3828,"id":3872,"nodeType":"Return","src":"4622:12:13"}]},"id":3874,"implemented":true,"kind":"function","modifiers":[],"name":"getShareEntity","nameLocation":"4210:14:13","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"_tokenId","nameLocation":"4233:8:13","nodeType":"VariableDeclaration","scope":3874,"src":"4225:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"4225:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"owner","nameLocation":"4251:5:13","nodeType":"VariableDeclaration","scope":3874,"src":"4243:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3822,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4224:33:13"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3874,"src":"4281:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"},"typeName":{"id":3826,"nodeType":"UserDefinedTypeName","pathNode":{"id":3825,"name":"CurrentOwner","nameLocations":["4281:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"4281:12:13"},"referencedDeclaration":3442,"src":"4281:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"visibility":"internal"}],"src":"4280:21:13"},"scope":4272,"src":"4201:441:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3924,"nodeType":"Block","src":"4742:317:13","statements":[{"assignments":[3884],"declarations":[{"constant":false,"id":3884,"mutability":"mutable","name":"index","nameLocation":"4761:5:13","nodeType":"VariableDeclaration","scope":3924,"src":"4753:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"4753:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3885,"nodeType":"VariableDeclarationStatement","src":"4753:13:13"},{"assignments":[3890],"declarations":[{"constant":false,"id":3890,"mutability":"mutable","name":"shareList","nameLocation":"4799:9:13","nodeType":"VariableDeclaration","scope":3924,"src":"4777:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"},"typeName":{"baseType":{"id":3888,"nodeType":"UserDefinedTypeName","pathNode":{"id":3887,"name":"CurrentOwner","nameLocations":["4777:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"4777:12:13"},"referencedDeclaration":3442,"src":"4777:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner"}},"id":3889,"nodeType":"ArrayTypeName","src":"4777:14:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner[]"}},"visibility":"internal"}],"id":3894,"initialValue":{"baseExpression":{"id":3891,"name":"tokenIdCurrentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"4811:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref)"}},"id":3893,"indexExpression":{"id":3892,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4831:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4811:29:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.CurrentOwner storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4777:63:13"},{"body":{"id":3920,"nodeType":"Block","src":"4895:134:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3906,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"4914:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":3908,"indexExpression":{"id":3907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"4924:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4914:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_CurrentOwner_$3442_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory"}},"id":3909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4927:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3439,"src":"4914:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3910,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"4936:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4914:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3919,"nodeType":"IfStatement","src":"4910:108:13","trueBody":{"id":3918,"nodeType":"Block","src":"4943:75:13","statements":[{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4962:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"4970:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4962:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ExpressionStatement","src":"4962:9:13"},{"expression":{"id":3916,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4997:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3882,"id":3917,"nodeType":"Return","src":"4990:12:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"4868:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3900,"name":"shareList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"4872:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CurrentOwner_$3442_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.CurrentOwner memory[] memory"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4882:6:13","memberName":"length","nodeType":"MemberAccess","src":"4872:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4868:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3921,"initializationExpression":{"assignments":[3896],"declarations":[{"constant":false,"id":3896,"mutability":"mutable","name":"i","nameLocation":"4861:1:13","nodeType":"VariableDeclaration","scope":3921,"src":"4856:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint","nodeType":"ElementaryTypeName","src":"4856:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"initialValue":{"hexValue":"30","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4865:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4856:10:13"},"loopExpression":{"expression":{"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4890:3:13","subExpression":{"id":3903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"4890:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3905,"nodeType":"ExpressionStatement","src":"4890:3:13"},"nodeType":"ForStatement","src":"4851:178:13"},{"expression":{"id":3922,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"5046:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3882,"id":3923,"nodeType":"Return","src":"5039:12:13"}]},"id":3925,"implemented":true,"kind":"function","modifiers":[],"name":"getShareArrayIndex","nameLocation":"4659:18:13","nodeType":"FunctionDefinition","parameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"_tokenId","nameLocation":"4686:8:13","nodeType":"VariableDeclaration","scope":3925,"src":"4678:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"owner","nameLocation":"4704:5:13","nodeType":"VariableDeclaration","scope":3925,"src":"4696:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"4696:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4677:33:13"},"returnParameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3925,"src":"4734:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"4734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4733:9:13"},"scope":4272,"src":"4650:409:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"5141:262:13","statements":[{"assignments":[3935],"declarations":[{"constant":false,"id":3935,"mutability":"mutable","name":"_number","nameLocation":"5160:7:13","nodeType":"VariableDeclaration","scope":3962,"src":"5152:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"5152:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3940,"initialValue":{"arguments":[{"id":3937,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"5180:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3938,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"5188:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3936,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"5170:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5170:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5152:39:13"},{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"newVote","nameLocation":"5214:7:13","nodeType":"VariableDeclaration","scope":3962,"src":"5202:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_memory_ptr","typeString":"struct AiYueNFTExchange.Vote"},"typeName":{"id":3942,"nodeType":"UserDefinedTypeName","pathNode":{"id":3941,"name":"Vote","nameLocations":["5202:4:13"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"5202:4:13"},"referencedDeclaration":3447,"src":"5202:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"visibility":"internal"}],"id":3948,"initialValue":{"arguments":[{"id":3945,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"5252:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3946,"name":"_number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"5282:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3944,"name":"Vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"5224:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Vote_$3447_storage_ptr_$","typeString":"type(struct AiYueNFTExchange.Vote storage pointer)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5244:5:13","5273:6:13"],"names":["voter","number"],"nodeType":"FunctionCall","src":"5224:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"nodeType":"VariableDeclarationStatement","src":"5202:103:13"},{"expression":{"arguments":[{"id":3953,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"5334:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vote_$3447_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}],"expression":{"baseExpression":{"id":3949,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"5316:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":3951,"indexExpression":{"id":3950,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"5325:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5316:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5329:4:13","memberName":"push","nodeType":"MemberAccess","src":"5316:17:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_ptr_$_t_struct$_Vote_$3447_storage_$returns$__$attached_to$_t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_ptr_$","typeString":"function (struct AiYueNFTExchange.Vote storage ref[] storage pointer,struct AiYueNFTExchange.Vote storage ref)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3955,"nodeType":"ExpressionStatement","src":"5316:26:13"},{"expression":{"arguments":[{"id":3957,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"5372:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3958,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"5380:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5390:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3956,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"5353:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3961,"nodeType":"ExpressionStatement","src":"5353:42:13"}]},"functionSelector":"c2f1eafd","id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"addVoteInfo","nameLocation":"5076:11:13","nodeType":"FunctionDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"_voter","nameLocation":"5096:6:13","nodeType":"VariableDeclaration","scope":3963,"src":"5088:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3926,"name":"address","nodeType":"ElementaryTypeName","src":"5088:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"operator","nameLocation":"5112:8:13","nodeType":"VariableDeclaration","scope":3963,"src":"5104:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3928,"name":"address","nodeType":"ElementaryTypeName","src":"5104:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"id","nameLocation":"5130:2:13","nodeType":"VariableDeclaration","scope":3963,"src":"5122:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"5122:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:46:13"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[],"src":"5141:0:13"},"scope":4272,"src":"5067:336:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3976,"nodeType":"Block","src":"5483:193:13","statements":[{"expression":{"arguments":[{"id":3971,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"5646:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3972,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"5653:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5663:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3970,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"5627:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5627:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3975,"nodeType":"ExpressionStatement","src":"5627:41:13"}]},"functionSelector":"c18dfec3","id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"approvalForAll","nameLocation":"5420:14:13","nodeType":"FunctionDefinition","parameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"owner","nameLocation":"5443:5:13","nodeType":"VariableDeclaration","scope":3977,"src":"5435:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"5435:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"operator","nameLocation":"5458:8:13","nodeType":"VariableDeclaration","scope":3977,"src":"5450:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3966,"name":"address","nodeType":"ElementaryTypeName","src":"5450:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5434:33:13"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[],"src":"5483:0:13"},"scope":4272,"src":"5411:265:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3991,"nodeType":"Block","src":"5778:117:13","statements":[{"expression":{"arguments":[{"id":3987,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"5869:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3988,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5878:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3986,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"5852:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5852:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3985,"id":3990,"nodeType":"Return","src":"5845:42:13"}]},"functionSelector":"0b1714fd","id":3992,"implemented":true,"kind":"function","modifiers":[],"name":"approvedForAll","nameLocation":"5693:14:13","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"account","nameLocation":"5716:7:13","nodeType":"VariableDeclaration","scope":3992,"src":"5708:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"5708:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"operator","nameLocation":"5733:8:13","nodeType":"VariableDeclaration","scope":3992,"src":"5725:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3980,"name":"address","nodeType":"ElementaryTypeName","src":"5725:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5707:35:13"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3992,"src":"5772:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3983,"name":"bool","nodeType":"ElementaryTypeName","src":"5772:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5771:6:13"},"scope":4272,"src":"5684:211:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4045,"nodeType":"Block","src":"5974:297:13","statements":[{"assignments":[4002],"declarations":[{"constant":false,"id":4002,"mutability":"mutable","name":"all","nameLocation":"5993:3:13","nodeType":"VariableDeclaration","scope":4045,"src":"5985:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4007,"initialValue":{"expression":{"baseExpression":{"id":4003,"name":"initialOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"5999:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3437_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner storage ref)"}},"id":4005,"indexExpression":{"id":4004,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"6013:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5999:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"id":4006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6017:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3436,"src":"5999:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5985:38:13"},{"assignments":[4009],"declarations":[{"constant":false,"id":4009,"mutability":"mutable","name":"realVoteNumber","nameLocation":"6042:14:13","nodeType":"VariableDeclaration","scope":4045,"src":"6034:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"6034:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4011,"initialValue":{"hexValue":"30","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6059:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6034:26:13"},{"assignments":[4016],"declarations":[{"constant":false,"id":4016,"mutability":"mutable","name":"voteList","nameLocation":"6085:8:13","nodeType":"VariableDeclaration","scope":4045,"src":"6071:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote[]"},"typeName":{"baseType":{"id":4014,"nodeType":"UserDefinedTypeName","pathNode":{"id":4013,"name":"Vote","nameLocations":["6071:4:13"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"6071:4:13"},"referencedDeclaration":3447,"src":"6071:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":4015,"nodeType":"ArrayTypeName","src":"6071:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}},"visibility":"internal"}],"id":4020,"initialValue":{"baseExpression":{"id":4017,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"6096:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":4019,"indexExpression":{"id":4018,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"6105:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6096:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6071:37:13"},{"body":{"id":4039,"nodeType":"Block","src":"6162:63:13","statements":[{"expression":{"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4032,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"6177:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":4033,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"6195:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4035,"indexExpression":{"id":4034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6204:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6195:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"id":4036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6207:6:13","memberName":"number","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"6195:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4038,"nodeType":"ExpressionStatement","src":"6177:36:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6136:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4026,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"6140:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6149:6:13","memberName":"length","nodeType":"MemberAccess","src":"6140:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6136:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4040,"initializationExpression":{"assignments":[4022],"declarations":[{"constant":false,"id":4022,"mutability":"mutable","name":"i","nameLocation":"6129:1:13","nodeType":"VariableDeclaration","scope":4040,"src":"6124:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint","nodeType":"ElementaryTypeName","src":"6124:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4024,"initialValue":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6133:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6124:10:13"},"loopExpression":{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6157:3:13","subExpression":{"id":4029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6157:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4031,"nodeType":"ExpressionStatement","src":"6157:3:13"},"nodeType":"ForStatement","src":"6119:106:13"},{"expression":{"components":[{"id":4041,"name":"all","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"6243:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4042,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"6248:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6242:21:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4000,"id":4044,"nodeType":"Return","src":"6235:28:13"}]},"functionSelector":"8d824273","id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteInfo","nameLocation":"5912:11:13","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"id","nameLocation":"5932:2:13","nodeType":"VariableDeclaration","scope":4046,"src":"5924:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"5924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5923:12:13"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"5957:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"5957:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"5966:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5966:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5956:18:13"},"scope":4272,"src":"5903:368:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4131,"nodeType":"Block","src":"6344:574:13","statements":[{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"all","nameLocation":"6363:3:13","nodeType":"VariableDeclaration","scope":4131,"src":"6355:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"6355:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4059,"initialValue":{"expression":{"baseExpression":{"id":4055,"name":"initialOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6369:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_InitialOwner_$3437_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.InitialOwner storage ref)"}},"id":4057,"indexExpression":{"id":4056,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"6383:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6369:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_InitialOwner_$3437_storage","typeString":"struct AiYueNFTExchange.InitialOwner storage ref"}},"id":4058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6387:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3436,"src":"6369:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6355:38:13"},{"assignments":[4061],"declarations":[{"constant":false,"id":4061,"mutability":"mutable","name":"realVoteNumber","nameLocation":"6412:14:13","nodeType":"VariableDeclaration","scope":4131,"src":"6404:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4060,"name":"uint256","nodeType":"ElementaryTypeName","src":"6404:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4063,"initialValue":{"hexValue":"30","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6429:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6404:26:13"},{"assignments":[4065],"declarations":[{"constant":false,"id":4065,"mutability":"mutable","name":"result","nameLocation":"6446:6:13","nodeType":"VariableDeclaration","scope":4131,"src":"6441:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4064,"name":"bool","nodeType":"ElementaryTypeName","src":"6441:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4067,"initialValue":{"hexValue":"66616c7365","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6455:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"6441:19:13"},{"assignments":[4072],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"voteList","nameLocation":"6485:8:13","nodeType":"VariableDeclaration","scope":4131,"src":"6471:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote[]"},"typeName":{"baseType":{"id":4070,"nodeType":"UserDefinedTypeName","pathNode":{"id":4069,"name":"Vote","nameLocations":["6471:4:13"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"6471:4:13"},"referencedDeclaration":3447,"src":"6471:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_storage_ptr","typeString":"struct AiYueNFTExchange.Vote"}},"id":4071,"nodeType":"ArrayTypeName","src":"6471:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_ptr","typeString":"struct AiYueNFTExchange.Vote[]"}},"visibility":"internal"}],"id":4076,"initialValue":{"baseExpression":{"id":4073,"name":"voteInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"6496:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3447_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AiYueNFTExchange.Vote storage ref[] storage ref)"}},"id":4075,"indexExpression":{"id":4074,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"6505:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6496:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_storage_$dyn_storage","typeString":"struct AiYueNFTExchange.Vote storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6471:37:13"},{"body":{"id":4095,"nodeType":"Block","src":"6562:63:13","statements":[{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4088,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"6577:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":4089,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"6595:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4091,"indexExpression":{"id":4090,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"6604:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6595:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3447_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory"}},"id":4092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6607:6:13","memberName":"number","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"6595:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6577:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"6577:36:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"6536:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4082,"name":"voteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"6540:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3447_memory_ptr_$dyn_memory_ptr","typeString":"struct AiYueNFTExchange.Vote memory[] memory"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6549:6:13","memberName":"length","nodeType":"MemberAccess","src":"6540:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6536:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4096,"initializationExpression":{"assignments":[4078],"declarations":[{"constant":false,"id":4078,"mutability":"mutable","name":"i","nameLocation":"6529:1:13","nodeType":"VariableDeclaration","scope":4096,"src":"6524:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint","nodeType":"ElementaryTypeName","src":"6524:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4080,"initialValue":{"hexValue":"30","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6524:10:13"},"loopExpression":{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6557:3:13","subExpression":{"id":4085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"6557:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"6557:3:13"},"nodeType":"ForStatement","src":"6519:106:13"},{"assignments":[4098],"declarations":[{"constant":false,"id":4098,"mutability":"mutable","name":"per","nameLocation":"6643:3:13","nodeType":"VariableDeclaration","scope":4131,"src":"6635:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"6635:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4103,"initialValue":{"arguments":[{"id":4100,"name":"realVoteNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"6669:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4101,"name":"all","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"6685:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4099,"name":"calculatePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"6649:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6635:54:13"},{"assignments":[4105],"declarations":[{"constant":false,"id":4105,"mutability":"mutable","name":"standard","nameLocation":"6708:8:13","nodeType":"VariableDeclaration","scope":4131,"src":"6700:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"6700:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4110,"initialValue":{"arguments":[{"hexValue":"32","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6739:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"33","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6742:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":4106,"name":"calculatePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"6719:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6719:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6700:44:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"per","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"6759:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4112,"name":"standard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"6765:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6759:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4119,"nodeType":"IfStatement","src":"6755:60:13","trueBody":{"id":4118,"nodeType":"Block","src":"6775:40:13","statements":[{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"6790:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6799:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6790:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"ExpressionStatement","src":"6790:13:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4120,"name":"per","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"6829:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4121,"name":"standard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"6836:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6829:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4128,"nodeType":"IfStatement","src":"6825:62:13","trueBody":{"id":4127,"nodeType":"Block","src":"6846:41:13","statements":[{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"6861:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6870:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6861:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4126,"nodeType":"ExpressionStatement","src":"6861:14:13"}]}},{"expression":{"id":4129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"6904:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4052,"id":4130,"nodeType":"Return","src":"6897:13:13"}]},"functionSelector":"daddb9c8","id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteInfoResult","nameLocation":"6288:17:13","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"id","nameLocation":"6314:2:13","nodeType":"VariableDeclaration","scope":4132,"src":"6306:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"6306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6305:12:13"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4132,"src":"6339:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4050,"name":"bool","nodeType":"ElementaryTypeName","src":"6339:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6338:6:13"},"scope":4272,"src":"6279:639:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4159,"nodeType":"Block","src":"7025:175:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"7044:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7059:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7044:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656e6f6d696e61746f72206d7573742062652061206e6f6e2d7a65726f2076616c7565","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7062:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_38a60e5000aba6e2a4ece2bcc86838d1bc291fdffd503ef9e0838f7a0bec4b48","typeString":"literal_string \"Denominator must be a non-zero value\""},"value":"Denominator must be a non-zero value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38a60e5000aba6e2a4ece2bcc86838d1bc291fdffd503ef9e0838f7a0bec4b48","typeString":"literal_string \"Denominator must be a non-zero value\""}],"id":4141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7036:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7036:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4147,"nodeType":"ExpressionStatement","src":"7036:65:13"},{"assignments":[4149],"declarations":[{"constant":false,"id":4149,"mutability":"mutable","name":"percentage","nameLocation":"7120:10:13","nodeType":"VariableDeclaration","scope":4159,"src":"7112:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"7112:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4156,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4150,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"7134:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7146:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7134:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7133:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4154,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"7153:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7133:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7112:52:13"},{"expression":{"id":4157,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"7182:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4140,"id":4158,"nodeType":"Return","src":"7175:17:13"}]},"functionSelector":"2133e3b9","id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePercentage","nameLocation":"6935:19:13","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"numerator","nameLocation":"6963:9:13","nodeType":"VariableDeclaration","scope":4160,"src":"6955:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"6955:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"denominator","nameLocation":"6982:11:13","nodeType":"VariableDeclaration","scope":4160,"src":"6974:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"6974:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6954:40:13"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4160,"src":"7016:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"7016:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7015:9:13"},"scope":4272,"src":"6926:274:13","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4163,"nodeType":"Block","src":"7244:8:13","statements":[]},"functionSelector":"d0e30db0","id":4164,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"7219:7:13","nodeType":"FunctionDefinition","parameters":{"id":4161,"nodeType":"ParameterList","parameters":[],"src":"7226:2:13"},"returnParameters":{"id":4162,"nodeType":"ParameterList","parameters":[],"src":"7244:0:13"},"scope":4272,"src":"7210:42:13","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4192,"nodeType":"Block","src":"7322:168:13","statements":[{"assignments":[4172],"declarations":[{"constant":false,"id":4172,"mutability":"mutable","name":"contractAddress","nameLocation":"7341:15:13","nodeType":"VariableDeclaration","scope":4192,"src":"7333:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4171,"name":"address","nodeType":"ElementaryTypeName","src":"7333:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4177,"initialValue":{"arguments":[{"id":4175,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7367:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4272","typeString":"contract AiYueNFTExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4272","typeString":"contract AiYueNFTExchange"}],"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7359:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4173,"name":"address","nodeType":"ElementaryTypeName","src":"7359:7:13","typeDescriptions":{}}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7359:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7333:39:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4179,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"7391:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7407:7:13","memberName":"balance","nodeType":"MemberAccess","src":"7391:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7417:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7391:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c65737320616d6f756e7420746f207769746864726177","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7425:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f75de9036d0596be9b861bb12895cf0da60c9c3c7cb43108721d2b264039ce2","typeString":"literal_string \"less amount to withdraw\""},"value":"less amount to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f75de9036d0596be9b861bb12895cf0da60c9c3c7cb43108721d2b264039ce2","typeString":"literal_string \"less amount to withdraw\""}],"id":4178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7383:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7383:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4185,"nodeType":"ExpressionStatement","src":"7383:68:13"},{"expression":{"arguments":[{"id":4189,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7475:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4186,"name":"rec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"7462:3:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7466:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"7462:12:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4191,"nodeType":"ExpressionStatement","src":"7462:20:13"}]},"functionSelector":"f3fef3a3","id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"7269:8:13","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"rec","nameLocation":"7294:3:13","nodeType":"VariableDeclaration","scope":4193,"src":"7278:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"7278:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"amount","nameLocation":"7307:6:13","nodeType":"VariableDeclaration","scope":4193,"src":"7299:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7277:37:13"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[],"src":"7322:0:13"},"scope":4272,"src":"7260:230:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4204,"nodeType":"Block","src":"7550:47:13","statements":[{"expression":{"expression":{"arguments":[{"id":4200,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7576:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4272","typeString":"contract AiYueNFTExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AiYueNFTExchange_$4272","typeString":"contract AiYueNFTExchange"}],"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7568:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4198,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:13","typeDescriptions":{}}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7568:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7582:7:13","memberName":"balance","nodeType":"MemberAccess","src":"7568:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4197,"id":4203,"nodeType":"Return","src":"7561:28:13"}]},"functionSelector":"12065fe0","id":4205,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"7507:10:13","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[],"src":"7517:2:13"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4205,"src":"7541:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"7541:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7540:9:13"},"scope":4272,"src":"7498:99:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4249,"nodeType":"Block","src":"7728:371:13","statements":[{"assignments":[4219],"declarations":[{"constant":false,"id":4219,"mutability":"mutable","name":"messageHash","nameLocation":"7747:11:13","nodeType":"VariableDeclaration","scope":4249,"src":"7739:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7739:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4225,"initialValue":{"arguments":[{"id":4221,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"7769:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4222,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"7777:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4223,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"7784:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4220,"name":"getHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"7761:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (address,uint256,bytes calldata) pure returns (bytes32)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7761:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7739:51:13"},{"assignments":[4227],"declarations":[{"constant":false,"id":4227,"mutability":"mutable","name":"signedMessageHash","nameLocation":"7809:17:13","nodeType":"VariableDeclaration","scope":4249,"src":"7801:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7801:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4231,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4228,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"7829:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7841:22:13","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2361,"src":"7829:34:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7801:64:13"},{"expression":{"arguments":[{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7953:28:13","subExpression":{"baseExpression":{"id":4233,"name":"executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"7954:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4235,"indexExpression":{"id":4234,"name":"signedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"7963:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7954:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920657865637574656421","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7983:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fa0ab99c1e051bcae3482c85a3a2111a1bbe4fa6b052769183af13842ee71b2","typeString":"literal_string \"Already executed!\""},"value":"Already executed!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fa0ab99c1e051bcae3482c85a3a2111a1bbe4fa6b052769183af13842ee71b2","typeString":"literal_string \"Already executed!\""}],"id":4232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7945:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7945:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4239,"nodeType":"ExpressionStatement","src":"7945:58:13"},{"assignments":[4241],"declarations":[{"constant":false,"id":4241,"mutability":"mutable","name":"signer","nameLocation":"8022:6:13","nodeType":"VariableDeclaration","scope":4249,"src":"8014:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4240,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4246,"initialValue":{"arguments":[{"id":4244,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"8057:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4242,"name":"signedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"8031:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8049:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"8031:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8031:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8014:53:13"},{"expression":{"id":4247,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"8085:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4217,"id":4248,"nodeType":"Return","src":"8078:13:13"}]},"functionSelector":"b50fd9f7","id":4250,"implemented":true,"kind":"function","modifiers":[],"name":"getSigner","nameLocation":"7614:9:13","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"sender","nameLocation":"7632:6:13","nodeType":"VariableDeclaration","scope":4250,"src":"7624:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4206,"name":"address","nodeType":"ElementaryTypeName","src":"7624:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"nonce","nameLocation":"7645:5:13","nodeType":"VariableDeclaration","scope":4250,"src":"7640:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint","nodeType":"ElementaryTypeName","src":"7640:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"_data","nameLocation":"7667:5:13","nodeType":"VariableDeclaration","scope":4250,"src":"7652:20:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4210,"name":"bytes","nodeType":"ElementaryTypeName","src":"7652:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"signature","nameLocation":"7687:9:13","nodeType":"VariableDeclaration","scope":4250,"src":"7674:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4212,"name":"bytes","nodeType":"ElementaryTypeName","src":"7674:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7623:74:13"},"returnParameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4250,"src":"7719:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"7719:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7718:9:13"},"scope":4272,"src":"7605:494:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4270,"nodeType":"Block","src":"8204:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":4264,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"8249:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4265,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"8257:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4266,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"8264:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4262,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8232:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8236:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"8232:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8232:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4261,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8222:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8222:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4260,"id":4269,"nodeType":"Return","src":"8215:56:13"}]},"functionSelector":"e2314541","id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"getHash","nameLocation":"8116:7:13","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"sender","nameLocation":"8132:6:13","nodeType":"VariableDeclaration","scope":4271,"src":"8124:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4251,"name":"address","nodeType":"ElementaryTypeName","src":"8124:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"nonce","nameLocation":"8145:5:13","nodeType":"VariableDeclaration","scope":4271,"src":"8140:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint","nodeType":"ElementaryTypeName","src":"8140:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"_data","nameLocation":"8167:5:13","nodeType":"VariableDeclaration","scope":4271,"src":"8152:20:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4255,"name":"bytes","nodeType":"ElementaryTypeName","src":"8152:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8123:50:13"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"8195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8195:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8194:9:13"},"scope":4272,"src":"8107:172:13","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":4273,"src":"268:8018:13","usedErrors":[]}],"src":"33:8255:13"}}},"contracts":{"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC1155.sol:ERC1155\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tnear_call\tr0, @__runtime, @DEFAULT_UNWIND\n.BB0_1:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t31, r1, r2\n\tsub.s\t32, r0, r9\n\tand\tr2, r9, r4\n\tld.1\t64, r2\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB0_41\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_41:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t32, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r1, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr2, r4\n\tsub.s!\t@CPI0_1[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r1, r3\n\tadd\tr4, r2, r1\n\tadd\t31, r1, r2\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r2, r2\n\tand\t@CPI0_2[0], r3, r6\n\tsub!\tr2, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr2, r6, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tadd\tr5, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_1[0], r2, r4\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tadd\t63, r2, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1.inc\tr7, r2, r6\n\tadd\tr1, r2, r4\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.le\t@.BB0_17\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r3\n.BB0_19:\n\tadd\tr3, r6, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r1, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr6, r2, r1\n\tst.1\tr1, r0\n\tld.1\tr7, r5\n\tsub.s!\t@CPI0_1[0], r5, r1\n\tjump.gt\t@.BB0_5\n\tadd\t2, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_23\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_27\n\tadd\tr3, r0, stack-[1]\n\tadd\tr5, r0, stack-[3]\n\tadd\tr4, r0, stack-[4]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr9, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr6, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[5], r0, r7\n\tadd\tstack-[6], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[4], r0, r4\n\tjump.ge\t@.BB0_27\n.BB0_28:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_28\n.BB0_27:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_37\n\tadd\tr5, r0, stack-[3]\n\tadd\tr4, r0, stack-[4]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr9, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r7\n\tand!\tr7, r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_34\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_33:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_33\n.BB0_34:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_36\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_36:\n\tadd\t1, r0, r1\n\tshl.s\t1, r7, r2\n\tadd\tstack-[4], r0, r4\n\tjump\t@.BB0_29\n.BB0_37:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_39\n\tld.1\tr6, r1\n.BB0_39:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r5, r1\n.BB0_29:\n\tor\tr2, r1, r1\n\tsstore\tr4, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__runtime:\n.func_begin2:\n\tnop\tstack+=[17]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.gt\t@.BB2_7\n\tsub.s!\t@CPI2_6[0], r1, r2\n\tjump.gt\t@.BB2_5\n\tsub.s!\t@CPI2_9[0], r1, r2\n\tjump.eq\t@.BB2_13\n\tsub.s!\t@CPI2_10[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI2_22[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_12\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI2_49[0], r1, r3\n\tjump.eq\t@.BB2_23\n\tsub.s!\t@CPI2_50[0], r1, r3\n\tjump.eq\t@.BB2_23\n\tsub.s!\t@CPI2_51[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB2_23:\n\tand\t1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_7:\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_10\n\tsub.s!\t@CPI2_4[0], r1, r2\n\tjump.eq\t@.BB2_139\n\tsub.s!\t@CPI2_5[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r2, r2\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub.s!\t0, r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[12]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.caller\tr2\n\tadd\tstack-[13], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB2_186\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_5:\n\tsub.s!\t@CPI2_7[0], r1, r2\n\tjump.eq\t@.BB2_24\n\tsub.s!\t@CPI2_8[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI2_11[0], r0, r3\n\tsub.s!\t160, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_12[0], r1, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r4, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r3, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_13[0], r3, r5\n\tjump.gt\t@.BB2_12\n\tadd\t35, r3, r5\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r2, r8\n\tand\t@CPI2_11[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI2_11[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_12\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_34[0], r4, r5\n\tjump.ge\t@.BB2_41\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI2_13[0], r6, r8\n\tjump.gt\t@.BB2_41\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB2_41\n\tadd\tr9, r0, stack-[3]\n\tst.1\t64, r6\n\tadd\tr10, r0, stack-[6]\n\tst.1\tr10, r4\n\tadd\t36, r3, r3\n\tadd\tr5, r3, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB2_48\n\tadd\tstack-[6], r0, r2\n.BB2_47:\n\tptr.add\tstack[@ptr_calldata], r3, r4\n\tld\tr4, r4\n\tadd\t32, r2, r2\n\tst.1\tr2, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB2_47\n.BB2_48:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t100, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r5, r5\n\tand\t@CPI2_11[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI2_11[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_12\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_13[0], r4, r5\n\tadd\tstack-[3], r0, r7\n\tjump.gt\t@.BB2_41\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\tr6, r7, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[5]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI2_13[0], r6, r8\n\tjump.gt\t@.BB2_41\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r6\n\tadd\tstack-[5], r0, r6\n\tst.1\tr6, r4\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB2_57\n\tadd\tstack-[5], r0, r3\n.BB2_56:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB2_56\n.BB2_57:\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI2_13[0], r4, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r4, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr3, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r3, r3\n\tand\t@CPI2_11[0], r5, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI2_11[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr6, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_12\n\tadd\t4, r4, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tadd\tstack-[3], r0, r6\n\tjump.gt\t@.BB2_41\n\tadd\t63, r2, r3\n\tand\tr3, r6, r3\n\tld.1\t64, r6\n\tadd\tr6, r3, r3\n\tadd\tr6, r0, stack-[2]\n\tsub!\tr3, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI2_13[0], r3, r7\n\tjump.gt\t@.BB2_41\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r3\n\tadd\tstack-[2], r0, r3\n\tst.1.inc\tr3, r2, r3\n\tadd\t36, r4, r6\n\tadd\tr2, r6, r4\n\tsub!\tr4, r5, r4\n\tjump.gt\t@.BB2_12\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r6, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB2_268\n\tadd\tr0, r0, r7\n.BB2_65:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_65\n.BB2_268:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB2_67\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB2_67:\n\tadd\tr3, r2, r2\n\tst.1\tr2, r0\n\tand\t@CPI2_12[0], r1, r2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[10]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB2_68\n.BB2_72:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_73\n\tadd\tstack-[13], r0, r2\n\tand!\t@CPI2_12[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tjump.eq\t@.BB2_77\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[5], r0, r4\n\tjump.ne\t@.BB2_76\n.BB2_78:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB2_81\n\tadd\tr0, r0, r5\n\tadd\tstack-[6], r0, r6\n.BB2_80:\n\tadd\t32, r6, r6\n\tld.1\tr6, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r7\n\tjump.lt\t@.BB2_80\n.BB2_81:\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB2_84\n\tadd\tr0, r0, r3\n\tadd\tstack-[5], r0, r5\n.BB2_83:\n\tadd\t32, r5, r5\n\tld.1\tr5, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB2_83\n.BB2_84:\n\tsub\tr2, r1, r2\n\tadd\t@CPI2_14[0], r0, r3\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI2_14[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI2_43[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI2_44[0], r0, r4\n\tadd\tr3, r0, stack-[12]\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_12\n\tadd\t@CPI2_18[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_19[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_110\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_45[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[6], r0, r5\n\tld.1\tr5, r2\n\tadd\t164, r3, r1\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[13]\n\tadd\t196, r3, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB2_103\n\tadd\tr0, r0, r3\n.BB2_102:\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB2_102\n.BB2_103:\n\tsub.s\t4, r0, r2\n\tadd\tstack-[13], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t100, r3, r3\n\tadd\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[5], r0, r6\n\tld.1\tr6, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB2_106\n\tadd\tr0, r0, r4\n.BB2_105:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_105\n.BB2_106:\n\tadd\tr2, r1, r2\n\tadd\tstack-[13], r0, r3\n\tadd\t132, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r6\n\tld.1\tr6, r2\n\tst.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB2_109\n\tadd\tr0, r0, r3\n.BB2_108:\n\tadd\tr3, r1, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB2_108\n.BB2_109:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.ne\t@.BB2_112\n\tcontext.sp\tr4\n\tsub.s\t17, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\t0, r0, stack-[17]\n\tjump\t@.BB2_117\n.BB2_10:\n\tsub.s!\t@CPI2_2[0], r1, r2\n\tjump.eq\t@.BB2_189\n\tsub.s!\t@CPI2_3[0], r1, r1\n\tjump.ne\t@.BB2_12\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tsub.s!\t160, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_11[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_11[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r3, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI2_12[0], r3, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t100, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[10]\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[11]\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI2_13[0], r4, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r4, r3\n\tadd\t@CPI2_11[0], r0, r5\n\tsub!\tr3, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_11[0], r1, r7\n\tand\t@CPI2_11[0], r3, r3\n\tsub!\tr3, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI2_11[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB2_12\n\tadd\t4, r4, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_41\n\tadd\t63, r2, r3\n\tsub.s\t32, r0, r7\n\tand\tr3, r7, r3\n\tld.1\t64, r8\n\tadd\tr8, r3, r3\n\tsub!\tr3, r8, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI2_13[0], r3, r6\n\tjump.gt\t@.BB2_41\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB2_41\n\tadd\tr7, r0, stack-[8]\n\tst.1\t64, r3\n\tadd\tr8, r0, stack-[9]\n\tst.1.inc\tr8, r2, r3\n\tadd\t36, r4, r4\n\tadd\tr2, r4, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB2_12\n\tand\t31, r2, r1\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB2_265\n\tadd\tr0, r0, r6\n.BB2_206:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_206\n.BB2_265:\n\tsub.s!\t0, r1, r6\n\tjump.eq\t@.BB2_208\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r5\n\tshl.s\t3, r1, r1\n\tld.1\tr5, r6\n\tshl\tr6, r1, r6\n\tshr\tr6, r1, r6\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB2_208:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tcontext.caller\tr2\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB2_209\n.BB2_212:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_213\n.BB2_77:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_13:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_12[0], r1, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_139:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI2_11[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI2_11[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r4\n\tjump.gt\t@.BB2_12\n\tadd\t35, r2, r4\n\tadd\t@CPI2_11[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI2_11[0], r1, r1\n\tand\t@CPI2_11[0], r4, r4\n\tsub!\tr4, r1, r7\n\tadd.ge\t0, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\t4, r2, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI2_13[0], r3, r1\n\tjump.le\t@.BB2_144\n.BB2_41:\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_24:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tadd\t2, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r7\n\tadd.eq\tr2, r0, r7\n\tsub.s!\t31, r7, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tand\t1, r2, r2\n\tsub!\tr5, r2, r2\n\tjump.eq\t@.BB2_28\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_189:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI2_11[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI2_11[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI2_11[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_12\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_12[0], r1, r3\n\tjump.gt\t@.BB2_12\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI2_12[0], r2, r2\n\tjump.le\t@.BB2_193\n.BB2_12:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_28:\n\tld.1\t64, r1\n\tst.1.inc\tr1, r7, r2\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_31\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub.s!\t0, r7, r2\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n\tjump\t@.BB2_29\n.BB2_193:\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_31:\n\tst.1\t0, r4\n\tsub.s!\t0, r7, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB2_29\n\tadd\t@CPI2_48[0], r0, r4\n\tadd\tr0, r0, r3\n.BB2_33:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r7, r5\n\tjump.lt\t@.BB2_33\n.BB2_29:\n\tadd\t32, r3, r2\n\tadd\tr1, r0, stack-[13]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_144:\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tsub.s\t32, r0, r1\n\tand\tr5, r1, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[9]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI2_13[0], r5, r7\n\tjump.gt\t@.BB2_41\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r5\n\tst.1.inc\tr5, r3, r5\n\tadd\tr5, r0, stack-[8]\n\tadd\t36, r2, r2\n\tadd\tr2, r4, r4\n\tadd\tstack[@calldatasize], r0, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB2_150\n\tadd\tstack-[8], r0, r3\n.BB2_149:\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI2_12[0], r5, r6\n\tjump.gt\t@.BB2_12\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB2_149\n.BB2_150:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_12\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI2_11[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI2_11[0], r5, r5\n\tand\t@CPI2_11[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI2_11[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB2_12\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_13[0], r4, r5\n\tjump.gt\t@.BB2_41\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\tr6, r1, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[7]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI2_13[0], r6, r8\n\tjump.gt\t@.BB2_41\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r6\n\tadd\tstack-[7], r0, r6\n\tst.1.inc\tr6, r4, r6\n\tadd\tr6, r0, stack-[6]\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB2_12\n\tsub.s!\t0, r4, r3\n\tjump.ne\t@.BB2_158\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB2_164\n\tjump\t@.BB2_162\n.BB2_186:\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[12], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_14[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_25[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_26[0], r0, r4\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[13], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_12\n.BB2_110:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_209:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB2_212\n.BB2_71:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_36[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_213:\n\tld.1\t64, r2\n\tsub.s!\t@CPI2_16[0], r2, r1\n\tjump.gt\t@.BB2_41\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1.inc\tr2, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB2_215:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB2_215\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB2_86\n\tadd\tstack-[11], r0, r2\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI2_16[0], r2, r3\n\tjump.gt\t@.BB2_41\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB2_219:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r4, r4\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB2_219\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB2_221\n.BB2_86:\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_158:\n\tadd\tstack-[7], r0, r3\n.BB2_159:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB2_159\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[9], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB2_162\n\tsub.s!\t@CPI2_13[0], r2, r3\n\tjump.gt\t@.BB2_41\n.BB2_164:\n\tshl.s\t5, r2, r3\n\tadd\t63, r3, r4\n\tand\tr4, r1, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r1\n\tadd\tr4, r0, stack-[5]\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI2_13[0], r1, r5\n\tjump.gt\t@.BB2_41\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r1\n\tadd\tstack-[5], r0, r1\n\tst.1.inc\tr1, r2, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB2_269\n\tadd\tr0, r0, r4\n.BB2_168:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_168\n.BB2_269:\n\tadd\tr7, r0, stack-[4]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB2_170\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[4], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB2_170:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB2_171\n.BB2_172:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t32, r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[5], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB2_162:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_31[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_221:\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB2_224\n.BB2_90:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_42[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_171:\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tr0, r0, r3\n.BB2_173:\n\tshl.s\t5, r3, r4\n\tadd\tstack-[8], r0, r1\n\tadd\tr4, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_12[0], r1, r2\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB2_86\n\tadd\tr3, r0, stack-[11]\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t0, r2, r1\n\tadd\tstack-[13], r0, r2\n\tjump.eq\t@.BB2_175\n\tadd\tstack-[6], r0, r1\n\tadd\tr4, r0, stack-[10]\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[11], r0, r3\n\tsub!\tr2, r3, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[10], r0, r4\n\tjump.le\t@.BB2_86\n\tadd\tr4, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB2_173\n\tjump\t@.BB2_172\n.BB2_224:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[6], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[10], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB2_229\n.BB2_96:\n\tadd\t@CPI2_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_175:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_32[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_68:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB2_72\n\tjump\t@.BB2_71\n.BB2_73:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_37[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_38[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_229:\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_14[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_14[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI2_17[0], r0, r4\n\tadd\tr3, r0, stack-[6]\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[12], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_12\n\tadd\t@CPI2_18[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_19[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_110\n\tld.1\t64, r3\n\tadd\t132, r3, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI2_20[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[9], r0, r6\n\tld.1\tr6, r1\n\tadd\t164, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[5]\n\tadd\t196, r3, r2\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB2_235\n\tadd\tr0, r0, r3\n.BB2_234:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB2_234\n.BB2_235:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB2_237\n\tcontext.sp\tr5\n\tsub.s\t15, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[15]\n\tjump\t@.BB2_242\n.BB2_76:\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, r2\n.BB2_85:\n\tld.1\tr4, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB2_86\n\tadd\tr2, r0, stack-[7]\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r2\n\tld.1\tr2, r2\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB2_90\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[8], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI2_14[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_14[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_12\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB2_96\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r1\n\tsub!\tr2, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump.lt\t@.BB2_85\n\tjump\t@.BB2_78\n.BB2_112:\n\tadd\t31, r2, r2\n\tadd\tstack-[3], r0, r4\n\tand\tr2, r4, r2\n\tadd\tstack-[13], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_14[0], r5, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_14[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_14[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB2_267\n\tadd\tr0, r0, r6\n.BB2_114:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_114\n.BB2_267:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB2_116\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB2_116:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr4\n\tsub.s\t16, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\t0, r0, stack-[16]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_123\n.BB2_117:\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r1\n\tadd.lt\tr3, r0, r1\n\tadd\t31, r1, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r5\n\tsub.s!\t@CPI2_13[0], r2, r2\n\tjump.gt\t@.BB2_41\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB2_12\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_22[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_12\n\tdiv.s\t32, r4, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI2_45[0], r1, r1\n\tjump.eq\t@.BB2_110\n\tadd\t@CPI2_23[0], r0, r1\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_237:\n\tadd\t31, r1, r1\n\tadd\tstack-[8], r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI2_14[0], r0, r3\n\tadd\tstack-[5], r0, r5\n\tsub.s!\t@CPI2_14[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI2_14[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_14[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_14[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB2_264\n\tadd\tr0, r0, r7\n.BB2_239:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_239\n.BB2_264:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB2_241\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r0, r8\n\tadd\tr8, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB2_241:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t14, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[14]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_248\n.BB2_242:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r4\n\tsub.s!\t@CPI2_13[0], r2, r2\n\tjump.gt\t@.BB2_41\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB2_12\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI2_22[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB2_12\n\tdiv.s\t32, r5, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI2_20[0], r1, r1\n\tjump.eq\t@.BB2_110\n\tadd\t@CPI2_23[0], r0, r1\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_123:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB2_138\n\tld.1\t0, r2\n\tand\t@CPI2_21[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI2_22[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI2_22[0], r1, r1\n\tsub.s!\t@CPI2_23[0], r1, r1\n\tjump.ne\t@.BB2_138\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB2_138\n\tld.1\t64, r2\n\tadd\tstack-[12], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_266\n\tadd\tr0, r0, r5\n.BB2_128:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_128\n.BB2_266:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_130\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB2_130:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI2_13[0], r3, r1\n\tjump.gt\t@.BB2_138\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI2_13[0], r5, r6\n\tjump.gt\t@.BB2_138\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[3], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI2_13[0], r5, r3\n\tjump.gt\t@.BB2_41\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB2_138\n\tadd\t@CPI2_23[0], r0, r2\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_248:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB2_138\n\tld.1\t0, r2\n\tand\t@CPI2_21[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI2_22[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI2_22[0], r1, r1\n\tsub.s!\t@CPI2_23[0], r1, r1\n\tjump.ne\t@.BB2_138\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB2_138\n\tld.1\t64, r2\n\tadd\tstack-[6], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_263\n\tadd\tr0, r0, r5\n.BB2_253:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_253\n.BB2_263:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB2_255\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB2_255:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI2_13[0], r3, r1\n\tjump.gt\t@.BB2_138\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI2_13[0], r5, r6\n\tjump.gt\t@.BB2_138\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB2_138\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[8], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI2_13[0], r5, r3\n\tjump.gt\t@.BB2_41\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_41\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.ne\t@.BB2_262\n.BB2_138:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI2_23[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_f591, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_262:\n\tadd\t@CPI2_23[0], r0, r2\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tsub.s!\t@CPI2_14[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI2_14[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_array_uint256_dyn:\n.func_begin5:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB5_3\n\tadd\tr0, r0, r2\n.BB5_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB5_2\n.BB5_3:\n\tret\n.func_end5:\n\nfun_balanceOf:\n.func_begin6:\n\tnop\tstack+=[1]\n\tand!\t@CPI6_0[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tjump.eq\t@.BB6_1\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB6_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI6_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_encode_stringliteral:\n.func_begin7:\n\tadd\t96, r1, r2\n\tadd\t@CPI7_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI7_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end7:\n\nabi_encode_stringliteral_f591:\n.func_begin8:\n\tadd\t96, r1, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI8_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t52, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_14:\nCPI6_1:\n\t.cell 4294967295\nCPI0_1:\nCPI2_13:\nCPI4_0:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI2_11:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI2_25:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI2_39:\nCPI4_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI2_40:\nCPI4_2:\n\t.cell 2852213850513516153367582212096\nCPI1_1:\nCPI2_43:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_0:\n\t.cell 1309832179\nCPI2_1:\n\t.cell 3917867460\nCPI2_2:\n\t.cell 3917867461\nCPI2_3:\n\t.cell 4064428842\nCPI2_4:\n\t.cell 1309832180\nCPI2_5:\n\t.cell 2720838757\nCPI2_6:\n\t.cell 243872795\nCPI2_7:\n\t.cell 243872796\nCPI2_8:\n\t.cell 783467222\nCPI2_9:\n\t.cell 16635278\nCPI2_10:\n\t.cell 33540519\nCPI2_12:\nCPI6_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI2_15:\nCPI6_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI2_16:\n\t.cell 18446744073709551551\nCPI2_17:\n\t.cell -27213852188849977806687151827570343143753748252864080105821182213072209768606\nCPI2_18:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI2_19:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI2_20:\n\t.cell -6229140943195609470482029081774216773103763255593484717380184921042965233664\nCPI2_21:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI2_22:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI2_23:\nCPI6_5:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI2_24:\n\t.cell 2535301200456458802993406410752\nCPI2_26:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI2_27:\n\t.cell 14654998725967798007904516271620013939489654481799787699370567012326353928192\nCPI2_28:\n\t.cell 31354931754782020730668050510087396086141667671140429186647036696488985261427\nCPI2_29:\nCPI6_6:\n\t.cell 10458117451882892562347801444352\nCPI2_30:\n\t.cell 14667325280004778357576260612488761262665225460782578448745097612516640423936\nCPI2_31:\n\t.cell 31354931754782020730666325679441278472750292860769655833395308424203898156136\nCPI2_32:\nCPI6_3:\n\t.cell 44065893178349832907524482763744232223715160598588722440363827218073792806912\nCPI2_33:\nCPI6_4:\n\t.cell 31354931754782020730666326055063969862292926624116462988355266888658445213814\nCPI2_34:\n\t.cell 18446744073709551616\nCPI2_35:\n\t.cell 45885242132750740256497420374811629444014390564921468556415905440447347032064\nCPI2_36:\n\t.cell 31354931754782020730666516506231079667030334057162060953243838907012487280494\nCPI2_37:\n\t.cell 49488416087105005985251196519109831937658208659842033616102300551039800049664\nCPI2_38:\n\t.cell 31354931754782020730667092324288700479831505799192396736967425796212700506144\nCPI2_41:\n\t.cell 51621007530836153441481177699373232841556542147537778994550402007698799329280\nCPI2_42:\n\t.cell 31354931754782020730667096066218267071081219445577361327006864227958802900591\nCPI2_44:\n\t.cell 33573379646215597789982475826324625834727175556203253221976374124330619566075\nCPI2_45:\n\t.cell -30712243232662532708804285033642283983940691742684704713361190381700136304640\nCPI2_46:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_47:\n\t.cell 31354931754782020730668151127133586497509920762368500730803146263088741769572\nCPI2_48:\n\t.cell 29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI2_49:\n\t.cell -17317791891425441398069102864720316188289832523668724183806499875177766060032\nCPI2_50:\n\t.cell 6574797573728907879914310858245660639267253899780774834407394597170562727936\nCPI2_51:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI7_0:\n\t.cell 45288627570839996578658988666401425582779806902220172383983149423179807588352\nCPI7_1:\n\t.cell 31354931754782020730663637404666106243223600773764328557126259806947099505765\nCPI8_0:\n\t.cell 37268791144319902338696353323952642643930904521079424936828708519168845021184\nCPI8_1:\n\t.cell 31354931754782020730668151127133586497509920762368493510471736461519699916085\n","bytecode":{"object":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 1:\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\", 4:\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\", 6:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 10:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\"\nobject \"ERC1155_1222\" {\n    code {\n        {\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC1155_1222\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            let _2 := 32\n            if slt(sub(_1, memoryDataOffset), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let offset := mload(memoryDataOffset)\n            let _3 := sub(shl(64, 1), 1)\n            if gt(offset, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let _4 := add(memoryDataOffset, offset)\n            let _5 := 0x1f\n            if iszero(slt(add(_4, _5), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let _6 := mload(_4)\n            if gt(_6, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n            }\n            let _7 := not(31)\n            let array := allocate_memory(add(and(add(_6, _5), _7), _2))\n            mstore(array, _6)\n            if gt(add(add(_4, _6), _2), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            for { } lt(i, _6) { i := add(i, _2) }\n            {\n                mstore(add(add(array, i), _2), mload(add(add(_4, i), _2)))\n            }\n            mstore(add(add(array, _6), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let newLen := mload(array)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n            }\n            let _8 := sload(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let _9 := 1\n            length := shr(_9, _8)\n            let outOfPlaceEncoding := and(_8, _9)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _2))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n            }\n            if gt(length, _5)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)\n                let deleteStart := add(data, shr(5, add(newLen, _5)))\n                if lt(newLen, _2) { deleteStart := data }\n                let _10 := add(data, shr(5, add(length, _5)))\n                let start := deleteStart\n                for { } lt(start, _10) { start := add(start, _9) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n            srcOffset := _2\n            switch gt(newLen, _5)\n            case 1 {\n                let loopEnd := and(newLen, _7)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                for { } lt(i_1, loopEnd) { i_1 := add(i_1, _2) }\n                {\n                    sstore(dstPtr, mload(add(array, srcOffset)))\n                    dstPtr := add(dstPtr, _9)\n                    srcOffset := add(srcOffset, _2)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(array, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ add(shl(_9, newLen), _9))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                if newLen\n                {\n                    value := mload(add(array, srcOffset))\n                }\n                sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_9, newLen)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"ERC1155_1222_deployed\")\n            codecopy(_11, dataoffset(\"ERC1155_1222_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 5:\"@openzeppelin/contracts/utils/Address.sol\", 6:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\"\n    object \"ERC1155_1222_deployed\" {\n        code {\n            {\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x00fdd58e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0 := abi_decode_address_9318()\n                        let ret := fun_balanceOf(value0, calldataload(36))\n                        let memPos := mload(_1)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _4 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _4)) { revert(_3, _3) }\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr := /** @src 0:1373:1414  \"interfaceId == type(IERC1155).interfaceId\" */ eq(_4, /** @src 0:1388:1414  \"type(IERC1155).interfaceId\" */ shl(225, 0x6cdb3d13))\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 0:1430:1482  \"interfaceId == type(IERC1155MetadataURI).interfaceId\" */ eq(_4, /** @src 0:1445:1482  \"type(IERC1155MetadataURI).interfaceId\" */ shl(226, 0x03a24d07))\n                        }\n                        /// @src 0:1373:1534  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 9:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_4, /** @src 9:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, iszero(iszero(expr_1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x0e89341c {\n                        if callvalue() { revert(_3, _3) }\n                        let _5 := 32\n                        if slt(add(calldatasize(), not(3)), _5) { revert(_3, _3) }\n                        let memPtr := mload(_1)\n                        let ret_1 := _3\n                        let slotValue := sload(/** @src 0:2032:2036  \"_uri\" */ 0x02)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let length := _3\n                        let _6 := 1\n                        length := shr(_6, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _6)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, _5))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x22)\n                            revert(_3, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _5), and(slotValue, not(255)))\n                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length)))), _5)\n                        }\n                        case 1 {\n                            mstore(_3, /** @src 0:2032:2036  \"_uri\" */ 0x02)\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let dataPos := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                            let i := _3\n                            for { } lt(i, length) { i := add(i, _5) }\n                            {\n                                mstore(add(add(memPtr, i), _5), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret_1 := add(add(memPtr, i), _5)\n                        }\n                        finalize_allocation(memPtr, sub(ret_1, memPtr))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _5)\n                        return(memPos_2, sub(abi_encode_string(memPtr, add(memPos_2, _5)), memPos_2))\n                    }\n                    case 0x2eb2c2d6 {\n                        if callvalue() { revert(_3, _3) }\n                        let _7 := not(3)\n                        if slt(add(calldatasize(), _7), 160) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address_9318()\n                        let value1 := abi_decode_address()\n                        let offset := calldataload(68)\n                        let _8 := 0xffffffffffffffff\n                        if gt(offset, _8) { revert(_3, _3) }\n                        let value2 := abi_decode_array_uint256_dyn(add(_2, offset), calldatasize())\n                        let offset_1 := calldataload(100)\n                        if gt(offset_1, _8) { revert(_3, _3) }\n                        let value3 := abi_decode_array_uint256_dyn(add(_2, offset_1), calldatasize())\n                        let offset_2 := calldataload(132)\n                        if gt(offset_2, _8) { revert(_3, _3) }\n                        let value4 := abi_decode_bytes(add(_2, offset_2), calldatasize())\n                        let _9 := sub(shl(160, 1), 1)\n                        let _10 := and(/** @src 0:4267:4287  \"from == _msgSender()\" */ value0_1, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _9)\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        let expr_2 := /** @src 0:4267:4287  \"from == _msgSender()\" */ eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _10, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _10)\n                            mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let _11 := keccak256(_3, _1)\n                            mstore(_3, /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(32, _11)\n                            /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                            expr_2 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 0:4246:4399  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_2)\n                        /// @src 0:6417:6427  \"ids.length\"\n                        let expr_3 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:6417:6427  \"ids.length\" */ value2)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        if iszero(/** @src 0:6417:6445  \"ids.length == amounts.length\" */ eq(expr_3, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:6431:6445  \"amounts.length\" */ value3)))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        {\n                            let memPtr_1 := mload(_1)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _2), 32)\n                            mstore(add(memPtr_1, 36), 40)\n                            mstore(add(memPtr_1, 68), \"ERC1155: ids and amounts length \")\n                            mstore(add(memPtr_1, 100), \"mismatch\")\n                            revert(memPtr_1, 132)\n                        }\n                        let _12 := and(/** @src 0:6508:6524  \"to != address(0)\" */ value1, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _9)\n                        /// @src 0:6500:6566  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                        require_helper_stringliteral_6faf(/** @src 0:6508:6524  \"to != address(0)\" */ iszero(iszero(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _12)))\n                        /// @src 0:6695:6708  \"uint256 i = 0\"\n                        let var_i := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                        /// @src 0:6690:7101  \"for (uint256 i = 0; i < ids.length; ++i) {...\"\n                        for { }\n                        /** @src 0:6695:6708  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:6726:6729  \"++i\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            if iszero(lt(var_i, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:6714:6724  \"ids.length\" */ value2)))\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            { break }\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let _13 := mload(/** @src 0:6758:6764  \"ids[i]\" */ memory_array_index_access_address_dyn(value2, var_i))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let _14 := mload(/** @src 0:6795:6805  \"amounts[i]\" */ memory_array_index_access_address_dyn(value3, var_i))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _13)\n                            let _15 := 32\n                            mstore(_15, _3)\n                            let _16 := keccak256(_3, _1)\n                            mstore(_3, _10)\n                            mstore(_15, _16)\n                            let _17 := sload(keccak256(_3, _1))\n                            /// @src 0:6875:6951  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                            require_helper_stringliteral_8ac7(/** @src 0:6883:6904  \"fromBalance >= amount\" */ iszero(lt(_17, _14)))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _13)\n                            mstore(_15, _3)\n                            let _18 := keccak256(_3, _1)\n                            mstore(_3, _10)\n                            mstore(_15, _18)\n                            sstore(keccak256(_3, _1), sub(/** @src 0:7015:7035  \"fromBalance - amount\" */ _17, _14))\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _13)\n                            mstore(_15, _3)\n                            let _19 := keccak256(_3, _1)\n                            mstore(_3, _12)\n                            mstore(_15, _19)\n                            let dataSlot := keccak256(_3, _1)\n                            sstore(dataSlot, /** @src 0:7063:7090  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sload(/** @src 0:7063:7090  \"_balances[id][to] += amount\" */ dataSlot), _14))\n                        }\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        let _20 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                        mstore(_20, _1)\n                        let tail := abi_encode_array_uint256_dyn(value2, add(_20, _1))\n                        mstore(add(_20, 32), sub(tail, _20))\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        log4(_20, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_array_uint256_dyn(value3, tail), /** @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\" */ _20), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\" */ _10, _12)\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        if /** @src 5:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 5:1702:1721  \"account.code.length\" */ extcodesize(value1)))\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let _21 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                            let _22 := shl(224, 0xbc197c81)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            mstore(_21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _22)\n                            mstore(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ add(_21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36), _10)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 68), 160)\n                            let tail_1 := abi_encode_array_uint256_dyn(value2, add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 164))\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 100), add(sub(tail_1, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _7))\n                            let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 132), add(sub(tail_2, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _7))\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let trySuccessCondition := call(gas(), _12, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(value4, tail_2), /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _21), _21, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 32)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let expr_4 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            if trySuccessCondition\n                            {\n                                let _23 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 32\n                                /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                                if gt(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _23, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ returndatasize()) { _23 := returndatasize() }\n                                finalize_allocation(_21, _23)\n                                expr_4 := abi_decode_bytes4_fromMemory(_21, add(_21, _23))\n                            }\n                            /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                if /** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ iszero(eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(/** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ expr_4, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0xffffffff)), _22))\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                {\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _24 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_24, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_24, sub(abi_encode_stringliteral(add(_24, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _24))\n                                }\n                            }\n                            default /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            {\n                                let _25 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:16709:16790  \"catch Error(string memory reason) {...\"\n                                    let _26 := try_decode_error_message()\n                                    if _26\n                                    {\n                                        _25 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        let _27 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        mstore(_27, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                        mstore(/** @src 0:16761:16775  \"revert(reason)\" */ add(_27, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), 32)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        revert(_27, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(_26, add(/** @src 0:16761:16775  \"revert(reason)\" */ _27, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36)), /** @src 0:16761:16775  \"revert(reason)\" */ _27))\n                                    }\n                                }\n                                /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                                if _25\n                                {\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _28 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_28, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_28, sub(abi_encode_stringliteral_f591(add(_28, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _28))\n                                }\n                            }\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4e1273f4 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset_3 := calldataload(_2)\n                        let _29 := 0xffffffffffffffff\n                        if gt(offset_3, _29) { revert(_3, _3) }\n                        if iszero(slt(add(offset_3, 35), calldatasize())) { revert(_3, _3) }\n                        let _30 := calldataload(add(_2, offset_3))\n                        let _31 := array_allocation_size_array_uint256_dyn(_30)\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation(memPtr_2, _31)\n                        let dst := memPtr_2\n                        mstore(memPtr_2, _30)\n                        let _32 := 0x20\n                        dst := add(memPtr_2, _32)\n                        let srcEnd := add(add(offset_3, shl(5, _30)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset_3, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _32) }\n                        {\n                            let value_1 := calldataload(src)\n                            if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                            mstore(dst, value_1)\n                            dst := add(dst, _32)\n                        }\n                        let offset_4 := calldataload(36)\n                        if gt(offset_4, _29) { revert(_3, _3) }\n                        let value1_1 := abi_decode_array_uint256_dyn(add(_2, offset_4), calldatasize())\n                        /// @src 0:2738:2753  \"accounts.length\"\n                        let expr_5 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:2738:2753  \"accounts.length\" */ memPtr_2)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        if iszero(/** @src 0:2738:2767  \"accounts.length == ids.length\" */ eq(expr_5, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:2757:2767  \"ids.length\" */ value1_1)))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        {\n                            let memPtr_3 := mload(_1)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _2), _32)\n                            mstore(add(memPtr_3, 36), 41)\n                            mstore(add(memPtr_3, 68), \"ERC1155: accounts and ids length\")\n                            mstore(add(memPtr_3, 100), \" mismatch\")\n                            revert(memPtr_3, 132)\n                        }\n                        let _33 := mload(/** @src 0:2871:2886  \"accounts.length\" */ memPtr_2)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _34 := array_allocation_size_array_uint256_dyn(_33)\n                        let memPtr_4 := mload(_1)\n                        finalize_allocation(memPtr_4, _34)\n                        mstore(memPtr_4, _33)\n                        calldatacopy(add(memPtr_4, _32), calldatasize(), add(array_allocation_size_array_uint256_dyn(_33), not(31)))\n                        /// @src 0:2903:2916  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                        /// @src 0:2898:3018  \"for (uint256 i = 0; i < accounts.length; ++i) {...\"\n                        for { }\n                        /** @src 0:2903:2916  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:2939:2942  \"++i\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            if iszero(lt(var_i_1, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:2922:2937  \"accounts.length\" */ memPtr_2)))\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            { break }\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            let cleaned := and(mload(/** @src 0:2987:2998  \"accounts[i]\" */ memory_array_index_access_address_dyn(memPtr_2, var_i_1)), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sub(shl(160, 1), 1))\n                            mstore(/** @src 0:2958:3007  \"batchBalances[i] = balanceOf(accounts[i], ids[i])\" */ memory_array_index_access_address_dyn(memPtr_4, var_i_1), /** @src 0:2977:3007  \"balanceOf(accounts[i], ids[i])\" */ fun_balanceOf(cleaned, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(/** @src 0:3000:3006  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_1, var_i_1))))\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, _32)\n                        return(memPos_3, sub(abi_encode_array_uint256_dyn(memPtr_4, add(memPos_3, _32)), memPos_3))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address_9318()\n                        let value_2 := calldataload(36)\n                        let _35 := iszero(iszero(value_2))\n                        if iszero(eq(value_2, _35)) { revert(_3, _3) }\n                        let _36 := and(/** @src 0:12901:12918  \"owner != operator\" */ value0_2, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 0:12901:12918  \"owner != operator\" */ eq(/** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _36)\n                        {\n                            let memPtr_5 := mload(_1)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _2), 32)\n                            mstore(add(memPtr_5, 36), 41)\n                            mstore(add(memPtr_5, 68), \"ERC1155: setting approval status\")\n                            mstore(add(memPtr_5, 100), \" for self\")\n                            revert(memPtr_5, 132)\n                        }\n                        mstore(_3, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(32, /** @src 0:12974:12992  \"_operatorApprovals\" */ 0x01)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _37 := keccak256(_3, _1)\n                        mstore(_3, _36)\n                        mstore(32, _37)\n                        let dataSlot_1 := keccak256(_3, _1)\n                        let value_3 := and(sload(dataSlot_1), not(255))\n                        sstore(dataSlot_1, or(value_3, and(_35, 255)))\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        let _38 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                        mstore(_38, _35)\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_38, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 32, /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ _36)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        return(_3, _3)\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_3 := abi_decode_address_9318()\n                        let value1_2 := abi_decode_address()\n                        let _39 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_3, _39))\n                        mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _40 := keccak256(_3, _1)\n                        mstore(_3, and(value1_2, _39))\n                        mstore(32, _40)\n                        let value_4 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, iszero(iszero(value_4)))\n                        return(memPos_4, 32)\n                    }\n                    case 0xf242432a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_3, _3) }\n                        let value0_4 := abi_decode_address_9318()\n                        let value1_3 := abi_decode_address()\n                        let value_5 := calldataload(68)\n                        let value_6 := calldataload(100)\n                        let offset_5 := calldataload(132)\n                        if gt(offset_5, 0xffffffffffffffff) { revert(_3, _3) }\n                        let value4_1 := abi_decode_bytes(add(_2, offset_5), calldatasize())\n                        let _41 := sub(shl(160, 1), 1)\n                        let _42 := and(/** @src 0:3776:3796  \"from == _msgSender()\" */ value0_4, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _41)\n                        /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        let expr_6 := /** @src 0:3776:3796  \"from == _msgSender()\" */ eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _42, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        if iszero(expr_6)\n                        {\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(_3, _42)\n                            mstore(32, 1)\n                            let _43 := keccak256(_3, _1)\n                            mstore(_3, /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(32, _43)\n                            /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                            expr_6 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 0:3755:3908  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_6)\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        let _44 := and(/** @src 0:5099:5115  \"to != address(0)\" */ value1_3, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _41)\n                        /// @src 0:5091:5157  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                        require_helper_stringliteral_6faf(/** @src 0:5099:5115  \"to != address(0)\" */ iszero(iszero(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _44)))\n                        /// @src 0:5232:5253  \"_asSingletonArray(id)\"\n                        pop(fun_asSingletonArray(value_5))\n                        /// @src 0:5290:5315  \"_asSingletonArray(amount)\"\n                        pop(fun_asSingletonArray(value_6))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(_3, value_5)\n                        let _45 := 32\n                        mstore(_45, _3)\n                        let _46 := keccak256(_3, _1)\n                        mstore(_3, _42)\n                        mstore(_45, _46)\n                        let _47 := sload(keccak256(_3, _1))\n                        /// @src 0:5448:5524  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                        require_helper_stringliteral_8ac7(/** @src 0:5456:5477  \"fromBalance >= amount\" */ iszero(lt(_47, value_6)))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(_3, value_5)\n                        mstore(_45, _3)\n                        let _48 := keccak256(_3, _1)\n                        mstore(_3, _42)\n                        mstore(_45, _48)\n                        sstore(keccak256(_3, _1), sub(/** @src 0:5580:5600  \"fromBalance - amount\" */ _47, value_6))\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        mstore(_3, value_5)\n                        mstore(_45, _3)\n                        let _49 := keccak256(_3, _1)\n                        mstore(_3, _44)\n                        mstore(_45, _49)\n                        let dataSlot_2 := keccak256(_3, _1)\n                        sstore(dataSlot_2, /** @src 0:5620:5647  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sload(/** @src 0:5620:5647  \"_balances[id][to] += amount\" */ dataSlot_2), value_6))\n                        /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                        let _50 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                        mstore(_50, value_5)\n                        mstore(add(_50, _45), value_6)\n                        /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                        log4(_50, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _1, /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ _42, _44)\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        if /** @src 5:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 5:1702:1721  \"account.code.length\" */ extcodesize(value1_3)))\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let _51 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                            let _52 := shl(224, 0xf23a6e61)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            mstore(_51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _52)\n                            mstore(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ add(_51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36), _42)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 68), value_5)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 100), value_6)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 132), 160)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let trySuccessCondition_1 := call(gas(), _44, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(value4_1, add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 164)), /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _51), _51, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _45)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let expr_7 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            if trySuccessCondition_1\n                            {\n                                let _53 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _45\n                                /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                                if gt(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _45, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ returndatasize()) { _53 := returndatasize() }\n                                finalize_allocation(_51, _53)\n                                expr_7 := abi_decode_bytes4_fromMemory(_51, add(_51, _53))\n                            }\n                            /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                if /** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ iszero(eq(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ and(/** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ expr_7, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0xffffffff)), _52))\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                {\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _54 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_54, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_54, sub(abi_encode_stringliteral(add(_54, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _54))\n                                }\n                            }\n                            default /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            {\n                                let _55 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 1\n                                /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:15911:15992  \"catch Error(string memory reason) {...\"\n                                    let _56 := try_decode_error_message()\n                                    if _56\n                                    {\n                                        _55 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _3\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        let _57 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        mstore(_57, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                        mstore(/** @src 0:15963:15977  \"revert(reason)\" */ add(_57, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2), _45)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        revert(_57, sub(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ abi_encode_string(_56, add(/** @src 0:15963:15977  \"revert(reason)\" */ _57, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 36)), /** @src 0:15963:15977  \"revert(reason)\" */ _57))\n                                    }\n                                }\n                                /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                                if _55\n                                {\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _58 := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ mload(_1)\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_58, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(229, 4594637))\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_58, sub(abi_encode_stringliteral_f591(add(_58, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _2)), /** @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _58))\n                                }\n                            }\n                        }\n                        /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_9318() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_uint256_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_uint256_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function abi_decode_bytes(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                array := memPtr\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            /// @ast-id 115 @src 0:2185:2412  \"function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account, var_id) -> var\n            {\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let _1 := and(/** @src 0:2298:2319  \"account != address(0)\" */ var_account, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sub(shl(160, 1), 1))\n                if /** @src 0:2298:2319  \"account != address(0)\" */ iszero(/** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: address zero is not a v\")\n                    mstore(add(memPtr, 100), \"alid owner\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ var_id)\n                mstore(0x20, /** @src 0:2317:2318  \"0\" */ 0x00)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let _2 := keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x40)\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ _1)\n                mstore(0x20, _2)\n                /// @src 0:2376:2405  \"return _balances[id][account]\"\n                var := /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ sload(keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x40))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function require_helper_stringliteral_47c7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC1155: caller is not token own\")\n                    mstore(add(memPtr, 100), \"er or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_6faf(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC1155: transfer to the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_8ac7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: insufficient balance fo\")\n                    mstore(add(memPtr, 100), \"r transfer\")\n                    revert(memPtr, 132)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                value0 := value\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 40)\n                mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n                mstore(add(headStart, 96), \"d tokens\")\n                tail := add(headStart, 128)\n            }\n            function return_data_selector() -> sig\n            {\n                if gt(returndatasize(), 3)\n                {\n                    returndatacopy(0, 0, 4)\n                    sig := shr(224, mload(0))\n                }\n            }\n            function try_decode_error_message() -> ret\n            {\n                if lt(returndatasize(), 0x44) { leave }\n                let data := mload(64)\n                let _1 := not(3)\n                returndatacopy(data, 4, add(returndatasize(), _1))\n                let offset := mload(data)\n                let _2 := returndatasize()\n                let _3 := 0xffffffffffffffff\n                if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n                let msg := add(data, offset)\n                let length := mload(msg)\n                if gt(length, _3) { leave }\n                if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n                finalize_allocation(data, add(add(offset, length), 0x20))\n                ret := msg\n            }\n            function abi_encode_stringliteral_f591(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 52)\n                mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n                mstore(add(headStart, 96), \"Receiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1221 @src 0:16914:17107  \"function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {...\"\n            function fun_asSingletonArray(var_element) -> var_mpos\n            {\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                mstore(memPtr, /** @src 0:17047:17048  \"1\" */ 0x01)\n                /// @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\"\n                let dataStart := add(memPtr, 32)\n                calldatacopy(dataStart, calldatasize(), 32)\n                if iszero(mload(memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ 0x24)\n                }\n                mstore(/** @src 0:17059:17077  \"array[0] = element\" */ dataStart, /** @src 0:570:17109  \"contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {...\" */ var_element)\n                /// @src 0:17088:17100  \"return array\"\n                var_mpos := memPtr\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f1341ed5e11063dbfc373343fef5102d541da65a55d6b0fe4db3bfc9ced303a264736f6c63430008120033\"\n    }\n}\n","hash":"010002b93237b8ec7298d26720b9bda548c1d89f053e177027011681a9c064ec","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f07344858992165efa674db005a804953f74882b4bb3f9089813f8a0c6586734\",\"dweb:/ipfs/QmZaAEqBENBkDQa4nuPeNiBWt4Yc1VpTynEadb3o6i8Mek\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000008857d7db8f0113a6febcbfcb947d69d14386b32c61ad471dddba9cfe1309c90c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 5:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1799\" {\n    code {\n        {\n            /// @src 5:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_1799_deployed\")\n            codecopy(_1, dataoffset(\"Address_1799_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1799_deployed\" {\n        code {\n            {\n                /// @src 5:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205a43d92843c97b37a50338dd3478b0cac8fd774aabdf0647f037877016590d8164736f6c63430008120033\"\n    }\n}\n","hash":"01000007f488efd756c90f3ad68d4d2d4f670acaa9287c7747aea2aa0a805e82","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000001aca1ca7a7a6b84548a62656a8ec61f28c43b53b1ffdd55848c615448f84fcaa"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 7:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2050\" {\n    code {\n        {\n            /// @src 7:220:2779  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_2050_deployed\")\n            codecopy(_1, dataoffset(\"Strings_2050_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 7:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2050_deployed\" {\n        code {\n            {\n                /// @src 7:220:2779  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e5622d6027cf0f1273bbfe504a1890a9116ccbfc2e71312f1ba921e425e0788564736f6c63430008120033\"\n    }\n}\n","hash":"010000070cbc0404c2b124dc1e476dc20f0a6e988f6d736d9f59de441cea18ef","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000002f5f6d36a1a908580106b1a7f805f0f134a82f8216a1c3f4a986157095237ca1"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 8:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_2416\" {\n    code {\n        {\n            /// @src 8:369:9130  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_2416_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_2416_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_2416_deployed\" {\n        code {\n            {\n                /// @src 8:369:9130  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122058c3caf29de2cead89f559f501fa4f84f162f43627feb0e8efb7daeb1830c3b864736f6c63430008120033\"\n    }\n}\n","hash":"01000007cc74828b718a7b247b5698e1a6b03b9026706f40a6aad9ba2a38769d","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e7a797eb8bd25aac03d1f92de412455f376feb5e88da2123b170b2fc85a510e3"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_3318\" {\n    code {\n        {\n            /// @src 11:202:12784  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_3318_deployed\")\n            codecopy(_1, dataoffset(\"Math_3318_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_3318_deployed\" {\n        code {\n            {\n                /// @src 11:202:12784  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209638d3cfa2e77349effe581dbfb73b43688cfd40394770445077709cfaa88eef64736f6c63430008120033\"\n    }\n}\n","hash":"010000071396839c6f0de2055e9793f86e586fd44021863e8b8333327da2baec","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000006078adbd026d3fce113e607b8d82f97b369a80995791c7eb959579af6e00e259"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 12:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_3423\" {\n    code {\n        {\n            /// @src 12:215:1262  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_3423_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_3423_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 12:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_3423_deployed\" {\n        code {\n            {\n                /// @src 12:215:1262  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220dbe5d785a375d7df71b26e0d40ca27941b49ab97e5f852d342e1c3d6730adee664736f6c63430008120033\"\n    }\n}\n","hash":"010000078884e13e70178c4bde7a8b88ba2e309eee8037f6f2fb33b02340591f","factoryDependencies":{}}},"contracts/AiYueNFTExchange.sol":{"AiYueNFTExchange":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"_voter","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"addVoteInfo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"approvalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"approvedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"calculatePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"getHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"getSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getVoteInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getVoteInfoResult","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"initialOwners","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"setTokenUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenIdCurrentOwner","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voteInfo","outputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"number","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"rec","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"addVoteInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"approvalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"approvedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"getSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getVoteInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getVoteInfoResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initialOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setTokenUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdCurrentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"rec\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AiYueNFTExchange.sol\":\"AiYueNFTExchange\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f07344858992165efa674db005a804953f74882b4bb3f9089813f8a0c6586734\",\"dweb:/ipfs/QmZaAEqBENBkDQa4nuPeNiBWt4Yc1VpTynEadb3o6i8Mek\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/AiYueNFTExchange.sol\":{\"keccak256\":\"0x27721b8ea347ae4f0ce576ad3aa200f554e00f53dcbe14150a071ad1a796f520\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aaad9a5ec95134d3bbd00958c1202cdb3c2475bf782ddd7672643c66869d51\",\"dweb:/ipfs/QmafdWLfg8LPk1srH1zmM6H5YShgHRHK7oDDw59ampZj8Q\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"AiYueNFTExchange.sol:AiYueNFTExchange\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[14]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tnear_call\tr0, @__runtime, @DEFAULT_UNWIND\n.BB0_1:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_76\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_76:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.gt\t@.BB0_5\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.le\t@.BB0_23\n.BB0_5:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1.inc\tr7, r3, r4\n\tadd\tr4, r0, stack-[14]\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_26\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_26:\n\tadd\tr12, r0, stack-[11]\n\tadd\tr11, r0, stack-[13]\n\tadd\tr10, r0, stack-[12]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r2\n.BB0_28:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t256, r1, r2\n\tst.1\t64, r2\n\tadd\t224, r1, r3\n\tadd\t@CPI0_4[0], r0, r2\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr3, r2\n\tadd\t192, r1, r3\n\tadd\t@CPI0_5[0], r0, r2\n\tadd\tr3, r0, stack-[7]\n\tst.1\tr3, r2\n\tadd\t160, r1, r3\n\tadd\t@CPI0_6[0], r0, r2\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r2\n\tadd\t128, r1, r3\n\tadd\t@CPI0_7[0], r0, r2\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr3, r2\n\tadd\t96, r1, r3\n\tadd\t@CPI0_8[0], r0, r2\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr3, r2\n\tadd\t64, r1, r3\n\tadd\t@CPI0_9[0], r0, r2\n\tadd\tr3, r0, stack-[3]\n\tst.1\tr3, r2\n\tadd\t207, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t@CPI0_10[0], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_32\n.BB0_31:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_32:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr2, r1, r1\n\tadd\t7, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_38:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_38\n.BB0_36:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[13], r0, r4\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\tstack-[4], r0, r2\n\tld.1\tr2, r2\n\tadd\t2, r1, r3\n\tsstore\tr3, r2\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\t3, r1, r3\n\tsstore\tr3, r2\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\t4, r1, r3\n\tsstore\tr3, r2\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\t5, r1, r3\n\tsstore\tr3, r2\n\tadd\t6, r1, r1\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_12[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t415, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tld.1\tr4, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_44\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_44\n.BB0_45:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_45\n.BB0_44:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_54\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[13], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_51\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_50:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_50\n.BB0_51:\n\tadd\tstack-[10], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_53\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_53:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_46\n.BB0_54:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_56\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n.BB0_56:\n\tadd\tstack-[10], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_46:\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\t10, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_62\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[10], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_62\n.BB0_63:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_63\n.BB0_62:\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_72\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_69\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_68:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_68\n.BB0_69:\n\tadd\tstack-[13], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_71\n\tadd\tstack-[13], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_71:\n\tadd\t1, r0, r1\n\tadd\tstack-[13], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_64\n.BB0_72:\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_74\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n.BB0_74:\n\tadd\tstack-[13], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_64:\n\tor\tr2, r1, r1\n\tadd\tstack-[11], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_13[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r2\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__runtime:\n.func_begin3:\n\tnop\tstack+=[21]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB3_46\n\tadd\t0, r0, stack-[21]\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tjump.le\t@.BB3_2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_35\n\tsub.s!\t@CPI3_13[0], r1, r2\n\tjump.gt\t@.BB3_30\n\tsub.s!\t@CPI3_19[0], r1, r2\n\tjump.gt\t@.BB3_28\n\tsub.s!\t@CPI3_22[0], r1, r2\n\tjump.eq\t@.BB3_477\n\tsub.s!\t@CPI3_23[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI3_61[0], r5, r2\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[13]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_61[0], r2, r4\n\tjump.gt\t@.BB3_63\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r2\n\tadd\tstack-[13], r0, r2\n\tadd\tr5, r0, stack-[11]\n\tst.1\tr2, r5\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[12]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r8\n\tsub!\tr7, r8, r2\n\tjump.ge\t@.BB3_494\n\tld\tr1, r1\n\tadd\tr7, r0, r2\n\tadd\tstack-[13], r0, r3\n.BB3_492:\n\tld.1\t64, r4\n\tsub.s!\t@CPI3_49[0], r4, r5\n\tjump.gt\t@.BB3_63\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI3_46[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r8, r4\n\tjump.lt\t@.BB3_492\n.BB3_494:\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r1\n\tsub!\tr7, r1, r2\n\tadd\tr0, r0, r2\n\tjump.ge\t@.BB3_496\n\tadd\tr0, r0, r3\n.BB3_497:\n\tshl.s\t5, r7, r2\n\tadd\tr2, r4, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_173\n\tadd\t1, r7, r7\n\tsub!\tr7, r1, r3\n\tadd\tr2, r0, r3\n\tjump.lt\t@.BB3_497\n.BB3_496:\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_80[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_2:\n\tsub.s!\t@CPI3_24[0], r1, r2\n\tjump.le\t@.BB3_3\n\tsub.s!\t@CPI3_25[0], r1, r2\n\tjump.gt\t@.BB3_18\n\tsub.s!\t@CPI3_31[0], r1, r2\n\tjump.gt\t@.BB3_16\n\tsub.s!\t@CPI3_34[0], r1, r2\n\tjump.eq\t@.BB3_118\n\tsub.s!\t@CPI3_35[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_calculatePercentage, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_35:\n\tsub.s!\t@CPI3_2[0], r1, r3\n\tjump.gt\t@.BB3_41\n\tsub.s!\t@CPI3_8[0], r1, r3\n\tjump.gt\t@.BB3_39\n\tsub.s!\t@CPI3_11[0], r1, r3\n\tjump.eq\t@.BB3_658\n\tsub.s!\t@CPI3_12[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n.BB3_523:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_3:\n\tsub.s!\t@CPI3_36[0], r1, r2\n\tjump.le\t@.BB3_4\n\tsub.s!\t@CPI3_37[0], r1, r2\n\tjump.gt\t@.BB3_10\n\tsub.s!\t@CPI3_40[0], r1, r2\n\tjump.eq\t@.BB3_90\n\tsub.s!\t@CPI3_41[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_46[0], r1, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_30:\n\tsub.s!\t@CPI3_14[0], r1, r2\n\tjump.gt\t@.BB3_33\n\tsub.s!\t@CPI3_17[0], r1, r2\n\tjump.eq\t@.BB3_514\n\tsub.s!\t@CPI3_18[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_45[0], r0, r3\n\tsub.s!\t160, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_45[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_45[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r3, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tptr.add.s\t100, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_61[0], r3, r4\n\tjump.gt\t@.BB3_46\n\tadd\t35, r3, r4\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r1, r7\n\tand\t@CPI3_45[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_45[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_46\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_61[0], r2, r4\n\tjump.gt\t@.BB3_63\n\tadd\t63, r2, r4\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[10]\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[11]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_61[0], r4, r6\n\tjump.gt\t@.BB3_63\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r4\n\tadd\tstack-[11], r0, r4\n\tst.1.inc\tr4, r2, r4\n\tadd\tr4, r0, stack-[9]\n\tadd\t36, r3, r3\n\tadd\tr2, r3, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB3_46\n\tand\t31, r2, r1\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r2, r4\n\tadd\tstack-[9], r0, r8\n\tjump.eq\t@.BB3_752\n\tadd\tr0, r0, r5\n.BB3_535:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_535\n.BB3_752:\n\tsub.s!\t0, r1, r5\n\tjump.eq\t@.BB3_537\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr8, r4, r4\n\tshl.s\t3, r1, r1\n\tld.1\tr4, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_537:\n\tadd\tr8, r2, r1\n\tst.1\tr1, r0\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t132, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI3_61[0], r3, r2\n\tjump.gt\t@.BB3_46\n\tadd\t35, r3, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr2, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r2, r2\n\tand\t@CPI3_45[0], r4, r7\n\tsub!\tr2, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI3_45[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_46\n\tadd\t4, r3, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_61[0], r1, r2\n\tjump.gt\t@.BB3_63\n\tadd\t63, r1, r2\n\tadd\tstack-[10], r0, r5\n\tand\tr2, r5, r2\n\tld.1\t64, r5\n\tadd\tr5, r2, r2\n\tadd\tr5, r0, stack-[8]\n\tsub!\tr2, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_61[0], r2, r6\n\tjump.gt\t@.BB3_63\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r2\n\tadd\tstack-[8], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\t36, r3, r5\n\tadd\tr1, r5, r3\n\tsub!\tr3, r4, r3\n\tjump.gt\t@.BB3_46\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r5, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB3_751\n\tadd\tr0, r0, r6\n.BB3_545:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_545\n.BB3_751:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB3_547\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB3_547:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_548\n.BB3_151:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_100[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_101[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_41:\n\tsub.s!\t@CPI3_3[0], r1, r2\n\tjump.gt\t@.BB3_44\n\tsub.s!\t@CPI3_6[0], r1, r2\n\tjump.eq\t@.BB3_698\n\tsub.s!\t@CPI3_7[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256t_uint256t_bytes, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_18:\n\tsub.s!\t@CPI3_26[0], r1, r2\n\tjump.gt\t@.BB3_21\n\tsub.s!\t@CPI3_29[0], r1, r2\n\tjump.eq\t@.BB3_365\n\tsub.s!\t@CPI3_30[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_45[0], r0, r3\n\tsub.s!\t160, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_45[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_45[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r3, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI3_46[0], r3, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_61[0], r3, r4\n\tjump.gt\t@.BB3_46\n\tadd\t35, r3, r4\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r1, r7\n\tand\t@CPI3_45[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_45[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tptr.add.s\t68, r2, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[12]\n\tptr.add.s\t100, r2, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[11]\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_46\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_61[0], r2, r4\n\tjump.gt\t@.BB3_63\n\tadd\t63, r2, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tsub!\tr4, r5, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_61[0], r4, r7\n\tjump.gt\t@.BB3_63\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r4\n\tst.1.inc\tr5, r2, r4\n\tadd\t36, r3, r3\n\tadd\tr2, r3, r6\n\tsub!\tr6, r1, r1\n\tjump.gt\t@.BB3_46\n\tand\t31, r2, r1\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB3_753\n\tadd\tr0, r0, r7\n.BB3_410:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr3, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB3_410\n.BB3_753:\n\tsub.s!\t0, r1, r7\n\tjump.eq\t@.BB3_412\n\tshl.s\t5, r6, r6\n\tptr.add\tr3, r6, r3\n\tadd\tr4, r6, r6\n\tshl.s\t3, r1, r1\n\tld.1\tr6, r7\n\tshl\tr7, r1, r7\n\tshr\tr7, r1, r7\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r7, r1\n\tst.1\tr6, r1\n.BB3_412:\n\tadd\tr4, r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[12], r0, r3\n\tadd\tstack-[11], r0, r4\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @fun_getShareExit, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_420\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI3_49[0], r1, r1\n\tjump.gt\t@.BB3_63\n\tadd\tstack-[10], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[12], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI3_61[0], r2, r2\n\tjump.gt\t@.BB3_63\n\tadd\tstack-[8], r0, r3\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_169\n\tst.1\t0, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[8], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tjump\t@.BB3_413\n.BB3_4:\n\tsub.s!\t@CPI3_42[0], r1, r2\n\tjump.eq\t@.BB3_47\n\tsub.s!\t@CPI3_43[0], r1, r2\n\tjump.eq\t@.BB3_51\n\tsub.s!\t@CPI3_44[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t32, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r6\n\tsub.s!\t@CPI3_61[0], r6, r2\n\tjump.gt\t@.BB3_46\n\tadd\t35, r6, r2\n\tadd\t@CPI3_45[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI3_45[0], r3, r7\n\tand\t@CPI3_45[0], r2, r2\n\tsub!\tr2, r7, r8\n\tadd.ge\t0, r0, r4\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI3_45[0], r2, r2\n\tadd\tr5, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_46\n\tadd\t4, r6, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI3_66[0], r2, r1\n\tjump.ge\t@.BB3_63\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_61[0], r5, r8\n\tjump.gt\t@.BB3_63\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\t36, r6, r6\n\tadd\tr2, r6, r7\n\tsub!\tr7, r3, r3\n\tjump.gt\t@.BB3_46\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tshr.s!\t5, r2, r7\n\tjump.eq\t@.BB3_759\n\tadd\tr0, r0, r8\n.BB3_69:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB3_69\n.BB3_759:\n\tsub.s!\t0, r3, r8\n\tjump.eq\t@.BB3_71\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r3, r3\n\tld.1\tr7, r8\n\tshl\tr8, r3, r8\n\tshr\tr8, r3, r8\n\tld\tr6, r6\n\tsub\t256, r3, r3\n\tshr\tr6, r3, r6\n\tshl\tr6, r3, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB3_71:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tld.1\tr1, r3\n\tsub.s!\t@CPI3_66[0], r3, r2\n\tjump.lt\t@.BB3_73\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_67[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t65, r0, r2\n\tst.1\t4, r2\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_10:\n\tsub.s!\t@CPI3_38[0], r1, r2\n\tjump.eq\t@.BB3_104\n\tsub.s!\t@CPI3_39[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t@CPI3_53[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t32778, r0, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_28:\n\tsub.s!\t@CPI3_20[0], r1, r2\n\tjump.eq\t@.BB3_499\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB3_46\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_CurrentOwner__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI3_46[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_80[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_39:\n\tsub.s!\t@CPI3_9[0], r1, r2\n\tjump.eq\t@.BB3_671\n\tsub.s!\t@CPI3_10[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_45[0], r0, r3\n\tsub.s!\t96, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r3, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_61[0], r1, r3\n\tjump.gt\t@.BB3_46\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t36, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n\tadd\tstack-[14], r0, r1\n\tadd\tr3, r0, r2\n\tadd\tr4, r0, r3\n\tadd\tr5, r0, r4\n\tnear_call\tr0, @fun_getHash, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_33:\n\tsub.s!\t@CPI3_15[0], r1, r2\n\tjump.eq\t@.BB3_624\n\tsub.s!\t@CPI3_16[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_46[0], r1, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_46[0], r2, r3\n\tjump.gt\t@.BB3_46\n\tnear_call\tr0, @fun_setApprovalForAll, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_44:\n\tsub.s!\t@CPI3_4[0], r1, r2\n\tjump.eq\t@.BB3_705\n\tsub.s!\t@CPI3_5[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tcontext.caller\tr1\n\tadd\tstack-[14], r0, r2\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_725\n.BB3_728:\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB3_729\n.BB3_456:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_85[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_86[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_16:\n\tsub.s!\t@CPI3_32[0], r1, r2\n\tjump.eq\t@.BB3_221\n\tsub.s!\t@CPI3_33[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_45[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_45[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_45[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_61[0], r2, r4\n\tjump.gt\t@.BB3_46\n\tadd\t35, r2, r4\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r1, r1\n\tand\t@CPI3_45[0], r4, r4\n\tsub!\tr4, r1, r7\n\tadd.ge\t0, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t4, r2, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI3_61[0], r3, r1\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tsub.s\t32, r0, r1\n\tand\tr5, r1, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[10]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_61[0], r5, r7\n\tjump.gt\t@.BB3_63\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r5\n\tadd\tstack-[10], r0, r5\n\tst.1.inc\tr5, r3, r5\n\tadd\tr5, r0, stack-[9]\n\tadd\t36, r2, r2\n\tadd\tr2, r4, r4\n\tadd\tstack[@calldatasize], r0, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB3_335\n\tadd\tstack-[9], r0, r3\n.BB3_334:\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI3_46[0], r5, r6\n\tjump.gt\t@.BB3_46\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB3_334\n.BB3_335:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_61[0], r2, r3\n\tjump.gt\t@.BB3_46\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_45[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_45[0], r5, r5\n\tand\t@CPI3_45[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_45[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_46\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_61[0], r4, r5\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\tr6, r1, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[8]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_61[0], r6, r8\n\tjump.gt\t@.BB3_63\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r6\n\tadd\tstack-[8], r0, r6\n\tst.1.inc\tr6, r4, r6\n\tadd\tr6, r0, stack-[7]\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r4, r3\n\tjump.ne\t@.BB3_343\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB3_349\n\tjump\t@.BB3_347\n.BB3_21:\n\tsub.s!\t@CPI3_27[0], r1, r2\n\tjump.eq\t@.BB3_427\n\tsub.s!\t@CPI3_28[0], r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t96, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_46[0], r1, r4\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r2, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_61[0], r4, r5\n\tjump.gt\t@.BB3_46\n\tadd\t35, r4, r5\n\tadd\t@CPI3_45[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_45[0], r3, r8\n\tand\t@CPI3_45[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_45[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_46\n\tadd\t4, r4, r5\n\tptr.add\tr2, r5, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI3_61[0], r5, r2\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r5, r6\n\tadd\t63, r6, r7\n\tsub.s\t32, r0, r2\n\tand\tr7, r2, r7\n\tld.1\t64, r8\n\tadd\tr8, r7, r7\n\tadd\tr8, r0, stack-[7]\n\tsub!\tr7, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI3_61[0], r7, r9\n\tjump.gt\t@.BB3_63\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r7\n\tadd\tstack-[7], r0, r7\n\tst.1\tr7, r5\n\tadd\t36, r4, r4\n\tadd\tr6, r4, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r5, r3\n\tjump.eq\t@.BB3_442\n\tadd\tstack-[7], r0, r3\n.BB3_441:\n\tptr.add\tstack[@ptr_calldata], r4, r5\n\tld\tr5, r5\n\tadd\t32, r3, r3\n\tst.1\tr3, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB3_441\n.BB3_442:\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add.s\t68, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_61[0], r3, r4\n\tjump.gt\t@.BB3_46\n\tadd\t35, r3, r6\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\t@CPI3_45[0], r0, r7\n\tsub!\tr6, r4, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI3_45[0], r6, r6\n\tand\t@CPI3_45[0], r4, r9\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI3_45[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB3_46\n\tadd\t4, r3, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI3_61[0], r5, r6\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r5, r6\n\tadd\t63, r6, r7\n\tand\tr7, r2, r2\n\tld.1\t64, r7\n\tadd\tr7, r2, r2\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr2, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_61[0], r2, r8\n\tjump.gt\t@.BB3_63\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r2\n\tadd\tstack-[6], r0, r2\n\tst.1.inc\tr2, r5, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\t36, r3, r2\n\tadd\tr6, r2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r5, r4\n\tjump.eq\t@.BB3_451\n\tadd\tstack-[6], r0, r4\n.BB3_450:\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tadd\t32, r4, r4\n\tst.1\tr4, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB3_450\n.BB3_451:\n\tand\t@CPI3_46[0], r1, r1\n\tcontext.caller\tr2\n\tadd\tr1, r0, stack-[11]\n\tadd\tr2, r0, stack-[4]\n\tsub!\tr1, r2, r1\n\tadd\tr0, r0, stack-[14]\n\tjump.ne\t@.BB3_452\n.BB3_455:\n\tadd\tstack-[11], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_456\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_153\n\tld.1\t64, r1\n\tsub.s!\t@CPI3_50[0], r1, r2\n\tjump.gt\t@.BB3_63\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[7], r0, r7\n\tld.1\tr7, r2\n\tadd\tstack-[21], r0, r1\n\tsub!\tr1, r2, r2\n\tadd\tr1, r0, r8\n\tjump.ge\t@.BB3_462\n\tadd\t@CPI3_47[0], r0, r2\n\tadd\tstack-[21], r0, r8\n\tsub.s!\t@CPI3_47[0], r8, r3\n\tadd.lt\tr8, r0, r2\n\tshl.s\t64, r2, r2\n\tor\t@CPI3_80[0], r2, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, r3\n\tadd\tr8, r0, stack-[14]\n.BB3_469:\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_169\n\tadd\tr3, r0, stack-[9]\n\tshl.s\t5, r3, r2\n\tadd\tr2, r7, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r4\n\tadd\tstack-[5], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr1, r4\n\tst.1\t32, r8\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[14], r0, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r0, r1\n\tadd\tr3, r0, stack-[8]\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB3_473\n\tadd\tstack-[10], r0, r1\n\tst.1\tr2, r1\n\tst.1\t32, r2\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[8], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[7], r0, r7\n\tld.1\tr7, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[14], r0, r8\n\tadd\tr8, r0, r1\n\tjump.lt\t@.BB3_469\n.BB3_462:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr7, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB3_465\n\tadd\tr0, r0, r5\n.BB3_464:\n\tadd\t32, r7, r7\n\tld.1\tr7, r6\n\tst.1.inc\tr3, r6, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_464\n.BB3_465:\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[6], r0, r6\n\tld.1\tr6, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_468\n\tadd\tr0, r0, r3\n.BB3_467:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r5\n\tjump.lt\t@.BB3_467\n.BB3_468:\n\tsub\tr2, r1, r2\n\tadd\t@CPI3_47[0], r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_82[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[11], r0, r6\n\tadd\tr8, r0, r7\n\tadd\tr7, r0, stack-[14]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_46\n\tld.1\t64, r1\n\tnear_call\tr0, @finalize_allocation_32936, @DEFAULT_UNWIND\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_90:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t9, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r7\n\tadd.eq\tr2, r0, r7\n\tsub.s!\t31, r7, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_74\n\tld.1\t64, r1\n\tst.1.inc\tr1, r7, r2\n\tsub.s!\t0, r5, r5\n\tjump.eq\t@.BB3_95\n\tadd\tstack-[21], r0, r3\n\tst.1\tr3, r4\n\tsub!\tr3, r7, r4\n\tjump.ge\t@.BB3_94\n\tadd\t@CPI3_102[0], r0, r4\n.BB3_98:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r7, r5\n\tjump.lt\t@.BB3_98\n\tjump\t@.BB3_94\n.BB3_104:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_74\n\tld.1\t64, r4\n\tst.1.inc\tr4, r5, r6\n\tsub.s!\t0, r3, r3\n\tadd\tr4, r0, stack-[14]\n\tjump.eq\t@.BB3_110\n\tadd\tr6, r0, stack-[12]\n\tadd\tr5, r0, stack-[13]\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[11], r0, r7\n\tsub!\tr7, r5, r2\n\tadd\tstack-[14], r0, r4\n\tadd\tstack-[12], r0, r6\n\tjump.ge\t@.BB3_109\n\tld\tr1, r1\n.BB3_114:\n\tadd\tr6, r7, r2\n\tsload\tr1, r3\n\tst.1\tr2, r3\n\tadd\t1, r1, r1\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r2\n\tjump.lt\t@.BB3_114\n\tjump\t@.BB3_109\n.BB3_477:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB3_46\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_CurrentOwner__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI3_46[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_80[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_658:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_663\n.BB3_360:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_89[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_90[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_514:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub.s!\t0, r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[13]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_46\n\tcontext.caller\tr2\n\tadd\tstack-[14], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB3_520\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_78[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_79[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_698:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_46[0], r1, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_499:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t10, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r6\n\tadd.eq\tr2, r0, r6\n\tsub.s!\t31, r6, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_502\n.BB3_74:\n\tadd\t@CPI3_67[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_68[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_671:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI3_61[0], r5, r2\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[13]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_61[0], r2, r4\n\tjump.gt\t@.BB3_63\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r2\n\tadd\tstack-[13], r0, r2\n\tadd\tr5, r0, stack-[11]\n\tst.1\tr2, r5\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[12]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[11], r0, r8\n\tsub!\tr7, r8, r2\n\tjump.ge\t@.BB3_683\n\tld\tr1, r1\n\tadd\tr7, r0, r2\n\tadd\tstack-[13], r0, r3\n.BB3_681:\n\tld.1\t64, r4\n\tsub.s!\t@CPI3_49[0], r4, r5\n\tjump.gt\t@.BB3_63\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI3_46[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r8, r4\n\tjump.lt\t@.BB3_681\n.BB3_683:\n\tadd\tstack-[13], r0, r5\n\tld.1\tr5, r1\n\tsub!\tr7, r1, r2\n\tjump.ge\t@.BB3_686\n\tadd\tr0, r0, r4\n\tadd\tr7, r0, r3\n.BB3_691:\n\tshl.s\t5, r3, r2\n\tadd\tr2, r5, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\tr4, r2, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_173\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r4\n\tadd\tr2, r0, r4\n\tjump.lt\t@.BB3_691\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_687\n\tsub.s!\t0, r2, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB3_690\n\tmul\t100, r2, r1, r3\n\tdiv\tr1, r2, r2, r3\n\tsub.s!\t100, r2, r2\n\tjump.ne\t@.BB3_173\n\tjump\t@.BB3_690\n.BB3_624:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r5\n\tsub.s\t4, r5, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t128, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI3_46[0], r2, r1\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t68, r3, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI3_61[0], r4, r1\n\tjump.gt\t@.BB3_46\n\tadd\t35, r4, r1\n\tadd\t@CPI3_45[0], r0, r6\n\tsub!\tr1, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_45[0], r5, r8\n\tand\t@CPI3_45[0], r1, r1\n\tsub!\tr1, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr1, r8, r1\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr7, r0, r1\n\tadd.eq\tr6, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t4, r4, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_61[0], r1, r6\n\tjump.gt\t@.BB3_46\n\tadd\t36, r4, r4\n\tadd\tr1, r4, r6\n\tsub!\tr6, r5, r6\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t100, r3, r6\n\tld\tr6, r8\n\tsub.s!\t@CPI3_61[0], r8, r6\n\tjump.gt\t@.BB3_46\n\tadd\t35, r8, r6\n\tadd\t@CPI3_45[0], r0, r7\n\tsub!\tr6, r5, r9\n\tadd\t0, r0, r9\n\tadd.ge\tr7, r0, r9\n\tand\t@CPI3_45[0], r5, r10\n\tand\t@CPI3_45[0], r6, r6\n\tsub!\tr6, r10, r11\n\tadd.ge\t0, r0, r7\n\txor\tr6, r10, r6\n\tsub.s!\t@CPI3_45[0], r6, r6\n\tadd\tr9, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB3_46\n\tadd\t4, r8, r6\n\tptr.add\tr3, r6, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI3_61[0], r6, r3\n\tjump.gt\t@.BB3_63\n\tadd\t63, r6, r7\n\tsub.s\t32, r0, r3\n\tand\tr7, r3, r7\n\tld.1\t64, r9\n\tadd\tr9, r7, r7\n\tadd\tr9, r0, stack-[14]\n\tsub!\tr7, r9, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI3_61[0], r7, r10\n\tjump.gt\t@.BB3_63\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r7\n\tadd\tstack-[14], r0, r7\n\tst.1.inc\tr7, r6, r7\n\tadd\t36, r8, r8\n\tadd\tr6, r8, r9\n\tsub!\tr9, r5, r5\n\tjump.gt\t@.BB3_46\n\tand\t31, r6, r5\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r6, r9\n\tjump.eq\t@.BB3_749\n\tadd\tr0, r0, r10\n.BB3_639:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB3_639\n.BB3_749:\n\tsub.s!\t0, r5, r10\n\tjump.eq\t@.BB3_641\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r9\n\tshl.s\t3, r5, r5\n\tld.1\tr9, r10\n\tshl\tr10, r5, r10\n\tshr\tr10, r5, r10\n\tld\tr8, r8\n\tsub\t256, r5, r5\n\tshr\tr8, r5, r8\n\tshl\tr8, r5, r5\n\tor\tr5, r10, r5\n\tst.1\tr9, r5\n.BB3_641:\n\tadd\tr7, r6, r5\n\tst.1\tr5, r0\n\tadd\t36, r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r6\n\tshl.s\t96, r2, r7\n\tld.1\t64, r2\n\tadd\t32, r2, r5\n\tst.1\tr5, r7\n\tadd\t52, r2, r7\n\tst.1\tr7, r6\n\tand\t31, r1, r7\n\tadd\t84, r2, r6\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r8\n\tjump.eq\t@.BB3_748\n\tadd\tr0, r0, r9\n.BB3_643:\n\tshl.s\t5, r9, r10\n\tadd\tr6, r10, r11\n\tptr.add\tr4, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB3_643\n.BB3_748:\n\tsub.s!\t0, r7, r9\n\tjump.eq\t@.BB3_645\n\tshl.s\t5, r8, r8\n\tptr.add\tr4, r8, r4\n\tadd\tr6, r8, r8\n\tshl.s\t3, r7, r7\n\tld.1\tr8, r9\n\tshl\tr9, r7, r9\n\tshr\tr9, r7, r9\n\tld\tr4, r4\n\tsub\t256, r7, r7\n\tshr\tr4, r7, r4\n\tshl\tr4, r7, r4\n\tor\tr4, r9, r4\n\tst.1\tr8, r4\n.BB3_645:\n\tadd\tr6, r1, r4\n\tst.1\tr4, r0\n\tadd\t52, r1, r4\n\tst.1\tr2, r4\n\tadd\t115, r1, r1\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_61[0], r1, r4\n\tjump.gt\t@.BB3_63\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r5, r3\n\tadd\tr1, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\t@CPI3_69[0], r0, r2\n\tst.1\t0, r2\n\tst.1\t28, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_70[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[13], r0, r2\n\tst.1\tr2, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB3_651\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @fun_tryRecover_2150, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[14]\n\tadd\tr2, r0, r1\n\tnear_call\tr0, @fun_throwError, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tand\t@CPI3_46[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_705:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tand\t@CPI3_46[0], r2, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI3_53[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_54[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_710\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.eq\t@.BB3_523\n\tadd\t@CPI3_58[0], r0, r1\n\tadd\tstack-[13], r0, r3\n\tsub.s!\t0, r3, r2\n\tadd.ne\t0, r0, r1\n\tjump.ne\t@.BB3_715\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_713\n.BB3_118:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_45[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_45[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_45[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_46[0], r2, r2\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_61[0], r2, r4\n\tjump.gt\t@.BB3_46\n\tadd\t35, r2, r4\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r1, r7\n\tand\t@CPI3_45[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_45[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_46\n\tadd\t4, r2, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_61[0], r3, r4\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tsub.s\t32, r0, r6\n\tadd\tr6, r0, stack-[12]\n\tand\tr5, r6, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[13]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_61[0], r5, r7\n\tjump.gt\t@.BB3_63\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r5\n\tadd\tstack-[13], r0, r5\n\tst.1\tr5, r3\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB3_130\n\tadd\tstack-[13], r0, r1\n.BB3_129:\n\tptr.add\tstack[@ptr_calldata], r2, r3\n\tld\tr3, r3\n\tadd\t32, r1, r1\n\tst.1\tr1, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB3_129\n.BB3_130:\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t68, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_66[0], r1, r2\n\tjump.lt\t@.BB3_132\n.BB3_131:\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_365:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_45[0], r0, r3\n\tsub.s!\t64, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_61[0], r3, r4\n\tjump.gt\t@.BB3_46\n\tadd\t35, r3, r4\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r2, r7\n\tand\t@CPI3_45[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_45[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_46\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_61[0], r1, r4\n\tjump.gt\t@.BB3_63\n\tadd\t63, r1, r4\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[13]\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[14]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_61[0], r4, r6\n\tjump.gt\t@.BB3_63\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r4\n\tst.1.inc\tr4, r1, r4\n\tadd\tr4, r0, stack-[12]\n\tadd\t36, r3, r3\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB3_46\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r1, r4\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB3_754\n\tadd\tr0, r0, r5\n.BB3_375:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_375\n.BB3_754:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB3_377\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr8, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB3_377:\n\tadd\tr8, r1, r1\n\tst.1\tr1, r0\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI3_66[0], r1, r1\n\tjump.lt\t@.BB3_380\n\tadd\t@CPI3_67[0], r0, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr2, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_221:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_45[0], r0, r3\n\tsub.s!\t160, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_46[0], r1, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t36, r4, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI3_46[0], r3, r3\n\tjump.gt\t@.BB3_46\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_61[0], r3, r5\n\tjump.gt\t@.BB3_46\n\tadd\t35, r3, r5\n\tadd\t@CPI3_45[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_45[0], r2, r8\n\tand\t@CPI3_45[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_45[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_46\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_61[0], r4, r5\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tsub.s\t32, r0, r7\n\tadd\tr7, r0, stack-[3]\n\tand\tr6, r7, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_61[0], r6, r8\n\tjump.gt\t@.BB3_63\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r6\n\tadd\tstack-[6], r0, r6\n\tst.1\tr6, r4\n\tadd\t36, r3, r3\n\tadd\tr5, r3, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB3_234\n\tadd\tstack-[6], r0, r2\n.BB3_233:\n\tptr.add\tstack[@ptr_calldata], r3, r4\n\tld\tr4, r4\n\tadd\t32, r2, r2\n\tst.1\tr2, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB3_233\n.BB3_234:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t100, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_61[0], r2, r3\n\tjump.gt\t@.BB3_46\n\tadd\t35, r2, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_45[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_45[0], r5, r5\n\tand\t@CPI3_45[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_45[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_46\n\tadd\t4, r2, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_61[0], r4, r5\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tadd\tstack-[3], r0, r7\n\tand\tr6, r7, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[5]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI3_61[0], r6, r8\n\tjump.gt\t@.BB3_63\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r6\n\tadd\tstack-[5], r0, r6\n\tst.1\tr6, r4\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_243\n\tadd\tstack-[5], r0, r3\n.BB3_242:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB3_242\n.BB3_243:\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t132, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI3_61[0], r4, r3\n\tjump.gt\t@.BB3_46\n\tadd\t35, r4, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tadd\t@CPI3_45[0], r0, r6\n\tsub!\tr3, r5, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_45[0], r3, r3\n\tand\t@CPI3_45[0], r5, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI3_45[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr6, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB3_46\n\tadd\t4, r4, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_61[0], r2, r3\n\tjump.gt\t@.BB3_63\n\tadd\t63, r2, r3\n\tadd\tstack-[3], r0, r6\n\tand\tr3, r6, r3\n\tld.1\t64, r6\n\tadd\tr6, r3, r3\n\tadd\tr6, r0, stack-[2]\n\tsub!\tr3, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_61[0], r3, r7\n\tjump.gt\t@.BB3_63\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r3\n\tadd\tstack-[2], r0, r3\n\tst.1.inc\tr3, r2, r3\n\tadd\t36, r4, r6\n\tadd\tr2, r6, r4\n\tsub!\tr4, r5, r4\n\tjump.gt\t@.BB3_46\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r6, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB3_756\n\tadd\tr0, r0, r7\n.BB3_251:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB3_251\n.BB3_756:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB3_253\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB3_253:\n\tadd\tr3, r2, r2\n\tst.1\tr2, r0\n\tand\t@CPI3_46[0], r1, r2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, stack-[11]\n\tjump.ne\t@.BB3_254\n.BB3_258:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_153\n\tadd\tstack-[12], r0, r2\n\tand!\t@CPI3_46[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tjump.ne\t@.BB3_261\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_96[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_97[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_427:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tand\t@CPI3_46[0], r2, r1\n\tst.1\tr3, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_80[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_51:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI3_75[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_46\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI3_104[0], r1, r3\n\tjump.eq\t@.BB3_57\n\tsub.s!\t@CPI3_105[0], r1, r3\n\tjump.eq\t@.BB3_57\n\tsub.s!\t@CPI3_106[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB3_57:\n\tand\t1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_47:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_45[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_45[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_45[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_46\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_46[0], r1, r3\n\tjump.le\t@.BB3_50\n.BB3_46:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_502:\n\tld.1\t64, r1\n\tst.1.inc\tr1, r6, r2\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_505\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub.s!\t0, r6, r3\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n\tjump\t@.BB3_503\n.BB3_50:\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_95:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub.s!\t0, r7, r2\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n.BB3_94:\n\tadd\t32, r3, r2\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_505:\n\tst.1\t0, r4\n\tadd\tstack-[21], r0, r2\n\tsub!\tr2, r6, r3\n\tjump.ge\t@.BB3_508\n\tadd\t@CPI3_81[0], r0, r3\n.BB3_507:\n\tadd\t32, r2, r2\n\tadd\tr2, r1, r4\n\tsload\tr3, r5\n\tst.1\tr4, r5\n\tadd\t1, r3, r3\n\tsub!\tr2, r6, r4\n\tjump.lt\t@.BB3_507\n.BB3_508:\n\tadd\t32, r2, r2\n\tadd\tr1, r0, r3\n.BB3_503:\n\tadd\tr2, r3, r2\n\tsub\tr2, r1, r2\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_725:\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[11], r0, r3\n\tadd\tstack-[12], r0, r4\n\tjump.ne\t@.BB3_728\n.BB3_257:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_91[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_92[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_729:\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_49[0], r2, r1\n\tjump.le\t@.BB3_730\n.BB3_63:\n\tadd\t@CPI3_67[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_68[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_110:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr6, r1\n\tsub.s!\t0, r5, r1\n\tadd\t32, r0, r7\n\tadd.eq\t0, r0, r7\n.BB3_109:\n\tadd\t32, r7, r2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_663:\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI3_49[0], r2, r2\n\tjump.gt\t@.BB3_63\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[11], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tadd\t32, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[12], r0, r1\n\tst.1\tr4, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[10]\n\tadd.lt\tr4, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI3_66[0], r2, r3\n\tjump.lt\t@.BB3_669\n\tadd\t@CPI3_67[0], r0, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr2, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_520:\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[13], r0, r4\n\tand\t255, r4, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI3_47[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_77[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[14], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_46\n\tjump\t@.BB3_523\n.BB3_710:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_55[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_57[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_730:\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1.inc\tr2, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB3_731:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_731\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_733\n.BB3_169:\n\tadd\t@CPI3_67[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_68[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_733:\n\tadd\tstack-[12], r0, r2\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_49[0], r2, r3\n\tjump.gt\t@.BB3_63\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB3_735:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r4, r4\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_735\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB3_169\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI3_50[0], r1, r2\n\tjump.gt\t@.BB3_63\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[12], r0, r1\n\tst.1\tr4, r1\n\tst.1\t32, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[10]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[10]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB3_741\n.BB3_473:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_83[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_84[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_715:\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_713:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_47[0], r3, stack[@returndatasize]\n\tand\t@CPI3_47[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_523\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_760\n\tadd\tr0, r0, r5\n.BB3_718:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_718\n.BB3_760:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_720\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_720:\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_73:\n\tadd\t2, r0, r2\n\tsload\tr2, r6\n\tand!\t1, r6, r7\n\tshr.s\t1, r6, r6\n\tand\t127, r6, r8\n\tadd.eq\tr8, r0, r6\n\tsub.s!\t31, r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t1, r0, r8\n\tand\t1, r8, r8\n\tsub!\tr7, r8, r7\n\tjump.ne\t@.BB3_74\n\tsub.s!\t32, r6, r7\n\tjump.lt\t@.BB3_78\n\tadd\tstack-[21], r0, r7\n\tst.1\tr7, r2\n\tadd\t31, r3, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI3_103[0], r7, r7\n\tadd\t@CPI3_103[0], r0, r8\n\tsub.s!\t32, r3, r9\n\tadd.lt\tr8, r0, r7\n\tadd\t31, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\t@CPI3_103[0], r6, r6\n\tsub!\tr7, r6, r8\n\tjump.ge\t@.BB3_78\n\tadd\tstack-[21], r0, r8\n.BB3_79:\n\tsstore\tr7, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r9\n\tjump.lt\t@.BB3_79\n.BB3_78:\n\tadd\tstack-[21], r0, r6\n\tsub.s!\t31, r3, r7\n\tjump.le\t@.BB3_87\n\tst.1\tr6, r2\n\tand\tr3, r4, r7\n\tadd\t32, r0, r5\n\tadd\t@CPI3_103[0], r0, r4\n\tadd\tstack-[21], r0, r6\n\tsub!\tr6, r7, r8\n\tjump.ge\t@.BB3_84\n\tadd\t@CPI3_103[0], r0, r4\n\tadd\t32, r0, r5\n\tadd\tr6, r0, r8\n.BB3_83:\n\tadd\tr5, r1, r9\n\tld.1\tr9, r9\n\tsstore\tr4, r9\n\tadd\t32, r5, r5\n\tadd\t1, r4, r4\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB3_83\n.BB3_84:\n\tsub!\tr7, r3, r7\n\tjump.ge\t@.BB3_86\n\tshl.s\t3, r3, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tadd\tr5, r1, r1\n\tld.1\tr1, r1\n\tand\tr1, r7, r1\n\tsstore\tr4, r1\n.BB3_86:\n\tadd\t1, r0, r1\n\tshl.s\t1, r3, r4\n\tjump\t@.BB3_80\n.BB3_132:\n\tadd\t35, r1, r4\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r4, r4\n\tand\t@CPI3_45[0], r2, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_45[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_46\n\tadd\t4, r1, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_61[0], r3, r4\n\tjump.gt\t@.BB3_63\n\tshl.s\t5, r3, r4\n\tadd\t63, r4, r5\n\tadd\tstack-[12], r0, r6\n\tand\tr5, r6, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[6]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI3_61[0], r5, r7\n\tjump.gt\t@.BB3_63\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r5\n\tadd\tstack-[6], r0, r5\n\tst.1\tr5, r3\n\tadd\t36, r1, r1\n\tadd\tr4, r1, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB3_46\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB3_140\n\tadd\tstack-[6], r0, r2\n.BB3_139:\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tadd\t32, r2, r2\n\tst.1\tr2, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r4, r3\n\tjump.lt\t@.BB3_139\n.BB3_140:\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI3_61[0], r3, r2\n\tjump.gt\t@.BB3_131\n\tadd\t35, r3, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tadd\t@CPI3_45[0], r0, r5\n\tsub!\tr2, r4, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_45[0], r2, r2\n\tand\t@CPI3_45[0], r4, r7\n\tsub!\tr2, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI3_45[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_46\n\tadd\t4, r3, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_61[0], r1, r2\n\tjump.gt\t@.BB3_63\n\tadd\t63, r1, r2\n\tadd\tstack-[12], r0, r5\n\tand\tr2, r5, r2\n\tld.1\t64, r5\n\tadd\tr5, r2, r2\n\tadd\tr5, r0, stack-[4]\n\tsub!\tr2, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI3_61[0], r2, r6\n\tjump.gt\t@.BB3_63\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r2\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\t36, r3, r5\n\tadd\tr1, r5, r3\n\tsub!\tr3, r4, r3\n\tjump.gt\t@.BB3_46\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r5, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB3_758\n\tadd\tr0, r0, r6\n.BB3_148:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_148\n.BB3_758:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB3_150\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB3_150:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[14], r0, r1\n\tand!\t@CPI3_46[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB3_151\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_153\n\tadd\tstack-[21], r0, r2\n\tsub!\tr2, r1, r1\n\tadd\tr2, r0, stack-[9]\n\tadd\tr2, r0, stack-[11]\n\tjump.ge\t@.BB3_161\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd\tr3, r0, stack-[11]\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_80[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r1\n\tadd\tstack-[9], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_169\n\tadd\tstack-[9], r0, r4\n\tshl.s\t5, r4, r1\n\tadd\t32, r1, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tr1, r2, r2\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tld.1\tr2, r1\n\tst.1\tr4, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[10], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[10], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[8], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_173\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tadd\t1, r1, r2\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB3_161\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[9]\n.BB3_168:\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_169\n\tadd\tr2, r0, stack-[7]\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tr1, r2, r2\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tld.1\tr2, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr2, r1\n\tst.1\t32, r2\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[10], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[10], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[8], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_173\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_168\n.BB3_161:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[13], r0, r3\n\tld.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB3_164\n\tadd\tr0, r0, r5\n\tadd\tstack-[13], r0, r6\n.BB3_163:\n\tadd\t32, r6, r6\n\tld.1\tr6, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r7\n\tjump.lt\t@.BB3_163\n.BB3_164:\n\tcontext.caller\tr4\n\tadd\tr4, r0, stack-[10]\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_167\n\tadd\tr0, r0, r3\n\tadd\tstack-[6], r0, r5\n.BB3_166:\n\tadd\t32, r5, r5\n\tld.1\tr5, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB3_166\n.BB3_167:\n\tsub\tr2, r1, r2\n\tadd\t@CPI3_47[0], r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_82[0], r0, r4\n\tadd\tr3, r0, stack-[9]\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_46\n\tadd\t@CPI3_72[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_54[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_177\n.BB3_187:\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[11], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_380:\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_74\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t32, r1, r1\n\tadd\tstack-[11], r0, r5\n\tjump.lt\t@.BB3_385\n\tadd\tstack-[9], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[10], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[11], r0, r5\n\tjump.ge\t@.BB3_385\n.BB3_386:\n\tsstore\tr2, r5\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB3_386\n.BB3_385:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB3_395\n\tadd\tstack-[9], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[10], r0, r3\n\tand\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r6\n\tsub!\tr6, r3, r4\n\tadd\tstack-[14], r0, r5\n\tjump.ge\t@.BB3_392\n\tadd\t32, r0, r2\n.BB3_391:\n\tadd\tr2, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r4\n\tjump.lt\t@.BB3_391\n.BB3_392:\n\tadd\tstack-[10], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB3_394\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB3_394:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tjump\t@.BB3_387\n.BB3_686:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB3_690\n.BB3_687:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_63[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_64[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_690:\n\tadd\tstack-[14], r0, r2\n\tdiv\tr1, r2, r1, r2\n\tsub.s!\t66, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t0, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tor\tr1, r2, r1\n\tand\t1, r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_60[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_87:\n\tsub.s!\t0, r3, r1\n\tadd\tr6, r0, r1\n\tjump.eq\t@.BB3_89\n\tld.1\tr5, r1\n.BB3_89:\n\tshl.s\t3, r3, r4\n\tsub.s\t1, r0, r5\n\tshr\tr5, r4, r4\n\txor\tr4, r5, r4\n\tand\tr1, r4, r4\n\tshl.s\t1, r3, r1\n.BB3_80:\n\tor\tr4, r1, r1\n\tsstore\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r6, r2\n\tadd.lt\tr6, r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_669:\n\tadd\t1, r2, r3\n\tsstore\tr1, r3\n\tnear_call\tr0, @storage_array_index_access_struct_CurrentOwner__dyn, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tnear_call\tr0, @update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @fun_setApprovalForAll, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_420:\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @fun_getShareEntity, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tld.1\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_421\n.BB3_173:\n\tadd\t@CPI3_67[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_68[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_395:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr5, r0, r1\n\tjump.eq\t@.BB3_397\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n.BB3_397:\n\tadd\tstack-[10], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tsub.s!\t@CPI3_47[0], r5, r2\n\tadd.lt\tr5, r0, r1\n\tadd\tr1, r0, stack-[12]\n.BB3_387:\n\tadd\tstack-[12], r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_421:\n\tadd\tstack-[9], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @fun_getShareArrayIndex, @DEFAULT_UNWIND\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[12], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r0, r2\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_169\n\tst.1\t0, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[8], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n.BB3_413:\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_46[0], r2, r2\n\tsload\tr1, r3\n\tand\t@CPI3_76[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @fun_getShareEntity, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\t32, r1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[11], r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ge\t@.BB3_426\n\tadd\t@CPI3_67[0], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr2, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_343:\n\tadd\tstack-[8], r0, r3\n.BB3_344:\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r4\n\tjump.lt\t@.BB3_344\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[10], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB3_347\n\tsub.s!\t@CPI3_61[0], r2, r3\n\tjump.gt\t@.BB3_63\n.BB3_349:\n\tshl.s\t5, r2, r3\n\tadd\t63, r3, r4\n\tand\tr4, r1, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r1\n\tadd\tr4, r0, stack-[6]\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI3_61[0], r1, r5\n\tjump.gt\t@.BB3_63\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r1\n\tst.1.inc\tr1, r2, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB3_761\n\tadd\tr0, r0, r4\n.BB3_353:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_353\n.BB3_761:\n\tadd\tr7, r0, stack-[5]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB3_355\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[5], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB3_355:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[21], r0, r3\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB3_357\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[14]\n.BB3_358:\n\tshl.s\t5, r3, r4\n\tadd\tstack-[9], r0, r1\n\tadd\tr4, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI3_46[0], r1, r2\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB3_169\n\tadd\tr3, r0, stack-[12]\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t0, r2, r1\n\tadd\tstack-[14], r0, r2\n\tjump.eq\t@.BB3_360\n\tadd\tstack-[7], r0, r1\n\tadd\tr4, r0, stack-[11]\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[12], r0, r3\n\tsub!\tr2, r3, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[11], r0, r4\n\tjump.le\t@.BB3_169\n\tadd\tr4, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB3_358\n.BB3_357:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t32, r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[6], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_347:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_87[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_88[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_741:\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tst.1\t32, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[10]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[11], r0, r3\n\tadd\tstack-[9], r0, r2\n\tsub\tr2, r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[21], r0, r7\n\tadd\t@CPI3_47[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_51[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tr7, r0, stack-[14]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_46\n\tld.1\t64, r1\n\tnear_call\tr0, @finalize_allocation_32936, @DEFAULT_UNWIND\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_548:\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_49[0], r2, r1\n\tjump.gt\t@.BB3_63\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1.inc\tr2, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB3_550:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB3_550\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB3_169\n\tadd\tstack-[13], r0, r2\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_49[0], r2, r3\n\tjump.gt\t@.BB3_63\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB3_554:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r4, r4\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB3_554\n\tld.1\tr2, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB3_169\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[13], r0, r1\n\tst.1\tr4, r1\n\tst.1\t32, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[7]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[12], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_173\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[21], r0, r6\n\tadd\t@CPI3_47[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_51[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tr3, r0, stack-[6]\n\tadd\tr5, r0, stack-[7]\n\tadd\tstack-[14], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_46\n\tadd\t@CPI3_72[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_54[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_562\n.BB3_566:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI3_49[0], r1, r1\n\tjump.gt\t@.BB3_63\n\tadd\tstack-[8], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI3_47[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_46[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI3_76[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI3_49[0], r1, r1\n\tjump.gt\t@.BB3_63\n\tadd\tstack-[8], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[13], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI3_61[0], r2, r2\n\tjump.gt\t@.BB3_63\n\tadd\tstack-[12], r0, r3\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_169\n\tst.1\t0, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[12], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\t@CPI3_76[0], r2, r2\n\tadd\tstack-[8], r0, r3\n\tld.1\tr3, r3\n\tand\t@CPI3_46[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI3_61[0], r1, r1\n\tjump.le\t@.BB3_606\n\tadd\t@CPI3_67[0], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_452:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB3_257\n\tjump\t@.BB3_455\n.BB3_426:\n\tadd\tstack-[11], r0, r3\n\tsub\tr2, r3, r2\n\tst.1\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @fun_getShareArrayIndex, @DEFAULT_UNWIND\n\tadd\tstack-[21], r0, r3\n\tadd\tr3, r0, stack-[14]\n\tadd\tstack-[12], r0, r2\n\tst.1\tr3, r2\n\tadd\t4, r0, r2\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[13]\n\tadd\t64, r0, r2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @storage_array_index_access_struct_CurrentOwner__dyn, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tnear_call\tr0, @update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner, @DEFAULT_UNWIND\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_153:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_98[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_99[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_651:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_71[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_57[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_254:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r2\n\tst.1\t32, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[11]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB3_258\n\tjump\t@.BB3_257\n.BB3_261:\n\tadd\tstack-[11], r0, r6\n\tsub!\tr6, r1, r1\n\tadd\tr6, r0, stack-[14]\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[5], r0, r4\n\tjump.ge\t@.BB3_263\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[21], r0, r5\n\tsub.s!\t@CPI3_47[0], r5, r2\n\tadd\tr5, r0, stack-[14]\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_80[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tr6, r0, r2\n.BB3_270:\n\tld.1\tr4, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_169\n\tadd\tr2, r0, stack-[7]\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r2\n\tld.1\tr2, r2\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr6, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_274\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[8], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tst.1\t32, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[13], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[11], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_173\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r1\n\tsub!\tr2, r1, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[5], r0, r4\n\tjump.lt\t@.BB3_270\n.BB3_263:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB3_266\n\tadd\tr0, r0, r5\n\tadd\tstack-[6], r0, r6\n.BB3_265:\n\tadd\t32, r6, r6\n\tld.1\tr6, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r7\n\tjump.lt\t@.BB3_265\n.BB3_266:\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r4\n\tst.1.inc\tr3, r4, r2\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB3_269\n\tadd\tr0, r0, r3\n\tadd\tstack-[5], r0, r5\n.BB3_268:\n\tadd\t32, r5, r5\n\tld.1\tr5, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB3_268\n.BB3_269:\n\tsub\tr2, r1, r2\n\tadd\t@CPI3_47[0], r0, r3\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_82[0], r0, r4\n\tadd\tr3, r0, stack-[13]\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_46\n\tadd\t@CPI3_72[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_54[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_283\n.BB3_293:\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_177:\n\tld.1\t64, r4\n\tadd\t@CPI3_93[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tadd\tstack-[21], r0, r2\n\tadd\t160, r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r4, r1\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r5\n\tld.1\tr5, r2\n\tadd\t164, r4, r1\n\tst.1\tr1, r2\n\tadd\tr4, r0, stack-[14]\n\tadd\t196, r4, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_180\n\tadd\tr0, r0, r3\n.BB3_179:\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_179\n.BB3_180:\n\tsub.s\t4, r0, r2\n\tadd\tstack-[14], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t100, r3, r3\n\tadd\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[6], r0, r6\n\tld.1\tr6, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB3_183\n\tadd\tr0, r0, r4\n.BB3_182:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_182\n.BB3_183:\n\tadd\tr2, r1, r2\n\tadd\tstack-[14], r0, r3\n\tadd\t132, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[4], r0, r6\n\tld.1\tr6, r2\n\tst.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_186\n\tadd\tr0, r0, r3\n.BB3_185:\n\tadd\tr3, r1, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_185\n.BB3_186:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\tstack-[21], r0, r3\n\tadd\tr3, r0, stack-[11]\n\tcontext.gas_left\tr3\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.ne\t@.BB3_189\n\tadd\tstack-[11], r0, r1\n\tadd\tr1, r0, stack-[20]\n\tcontext.sp\tr4\n\tsub.s\t20, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB3_197\n.BB3_562:\n\tld.1\t64, r4\n\tadd\t@CPI3_73[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t132, r4, r1\n\tadd\tstack-[21], r0, r2\n\tadd\t160, r0, r3\n\tst.1\tr1, r3\n\tadd\t100, r4, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r4, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r4, r1\n\tst.1\tr1, r2\n\tadd\tstack-[8], r0, r6\n\tld.1\tr6, r1\n\tadd\t164, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[7]\n\tadd\t196, r4, r2\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB3_565\n\tadd\tr0, r0, r3\n.BB3_564:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB3_564\n.BB3_565:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\tstack-[21], r0, r2\n\tadd\tr2, r0, stack-[8]\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB3_576\n\tadd\tstack-[8], r0, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.sp\tr1\n\tsub.s\t16, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB3_584\n.BB3_189:\n\tadd\t31, r2, r2\n\tadd\tstack-[12], r0, r4\n\tand\tr2, r4, r2\n\tadd\tstack-[14], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI3_47[0], r5, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_196\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_190\n.BB3_576:\n\tadd\t31, r1, r1\n\tadd\tstack-[10], r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI3_47[0], r0, r3\n\tadd\tstack-[7], r0, r5\n\tsub.s!\t@CPI3_47[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI3_47[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_47[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_583\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_577\n.BB3_283:\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_93[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[6], r0, r5\n\tld.1\tr5, r2\n\tadd\t164, r3, r1\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[12]\n\tadd\t196, r3, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_286\n\tadd\tr0, r0, r3\n.BB3_285:\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_285\n.BB3_286:\n\tsub.s\t4, r0, r2\n\tadd\tstack-[12], r0, r3\n\tsub\tr2, r3, r2\n\tadd\t100, r3, r3\n\tadd\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[5], r0, r6\n\tld.1\tr6, r3\n\tst.1.inc\tr1, r3, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB3_289\n\tadd\tr0, r0, r4\n.BB3_288:\n\tadd\t32, r6, r6\n\tld.1\tr6, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_288\n.BB3_289:\n\tadd\tr2, r1, r2\n\tadd\tstack-[12], r0, r3\n\tadd\t132, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[2], r0, r6\n\tld.1\tr6, r2\n\tst.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB3_292\n\tadd\tr0, r0, r3\n.BB3_291:\n\tadd\tr3, r1, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_291\n.BB3_292:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\tstack-[21], r0, r3\n\tadd\tr3, r0, stack-[14]\n\tcontext.gas_left\tr3\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.ne\t@.BB3_295\n\tadd\tstack-[14], r0, r1\n\tadd\tr1, r0, stack-[18]\n\tcontext.sp\tr4\n\tsub.s\t18, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB3_303\n.BB3_196:\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[11], r0, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_190:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_47[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tadd\tstack-[14], r0, r9\n\tjump.eq\t@.BB3_747\n\tadd\tr0, r0, r6\n.BB3_192:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_192\n.BB3_747:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB3_194\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[14], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB3_194:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r0, stack-[19]\n\tcontext.sp\tr4\n\tsub.s\t19, r4, r4\n\tmul\t32, r4, r4, r0\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_203\n.BB3_197:\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r1\n\tadd.lt\tr3, r0, r1\n\tadd\t31, r1, r1\n\tand\t96, r1, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r5\n\tsub.s!\t@CPI3_61[0], r2, r2\n\tjump.gt\t@.BB3_63\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB3_46\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI3_75[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_46\n\tdiv.s\t32, r4, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI3_93[0], r1, r1\n\tjump.eq\t@.BB3_187\n\tadd\t@CPI3_56[0], r0, r1\n\tadd\tr5, r0, stack-[13]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_203:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB3_218\n\tld.1\t0, r2\n\tand\t@CPI3_74[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI3_75[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI3_75[0], r1, r1\n\tsub.s!\t@CPI3_56[0], r1, r1\n\tjump.ne\t@.BB3_218\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB3_218\n\tld.1\t64, r2\n\tadd\tstack-[9], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_757\n\tadd\tr0, r0, r5\n.BB3_208:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_208\n.BB3_757:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_210\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_210:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI3_61[0], r3, r1\n\tjump.gt\t@.BB3_218\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB3_218\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI3_61[0], r5, r6\n\tjump.gt\t@.BB3_218\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB3_218\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[12], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI3_61[0], r5, r3\n\tjump.gt\t@.BB3_63\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB3_218\n\tadd\t@CPI3_56[0], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_583:\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_577:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_47[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tadd\tstack-[7], r0, r9\n\tjump.eq\t@.BB3_745\n\tadd\tr0, r0, r6\n.BB3_579:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_579\n.BB3_745:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB3_581\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[7], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB3_581:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[8], r0, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.sp\tr1\n\tsub.s\t15, r1, r1\n\tmul\t32, r1, r1, r0\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_590\n.BB3_584:\n\tsub.s!\t32, r3, r2\n\tadd\t32, r0, r2\n\tadd.lt\tr3, r0, r2\n\tadd\t31, r2, r2\n\tand\t96, r2, r2\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, r5\n\tsub.s!\t@CPI3_61[0], r4, r4\n\tjump.gt\t@.BB3_63\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB3_46\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_75[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB3_46\n\tdiv.s\t32, r1, r1, r0\n\tadd\tr2, r0, stack[r1]\n\tsub.s!\t@CPI3_73[0], r2, r1\n\tjump.eq\t@.BB3_566\n\tadd\t@CPI3_56[0], r0, r1\n\tadd\tr5, r0, stack-[8]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_590:\n\tsub.s!\t4, r3, r1\n\tjump.lt\t@.BB3_218\n\tld.1\t0, r1\n\tand\t@CPI3_74[0], r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tld\tr2, r2\n\tand\t@CPI3_75[0], r2, r2\n\tor\tr2, r1, r1\n\tst.1\t0, r1\n\tand\t@CPI3_75[0], r1, r1\n\tsub.s!\t@CPI3_56[0], r1, r1\n\tjump.ne\t@.BB3_218\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB3_218\n\tld.1\t64, r2\n\tadd\tstack-[6], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_750\n\tadd\tr0, r0, r5\n.BB3_595:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_595\n.BB3_750:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_597\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_597:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI3_61[0], r3, r1\n\tjump.gt\t@.BB3_218\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB3_218\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI3_61[0], r5, r6\n\tjump.gt\t@.BB3_218\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB3_218\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[10], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI3_61[0], r5, r3\n\tjump.gt\t@.BB3_63\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB3_218\n\tadd\t@CPI3_56[0], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_274:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_94[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_95[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_295:\n\tadd\t31, r2, r2\n\tadd\tstack-[3], r0, r4\n\tand\tr2, r4, r2\n\tadd\tstack-[12], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI3_47[0], r5, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_47[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_302\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB3_296\n.BB3_302:\n\tor\t@CPI3_59[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB3_296:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_47[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tadd\tstack-[12], r0, r9\n\tjump.eq\t@.BB3_746\n\tadd\tr0, r0, r6\n.BB3_298:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_298\n.BB3_746:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB3_300\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[12], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB3_300:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tstack-[14], r0, r4\n\tadd\tr4, r0, stack-[17]\n\tcontext.sp\tr4\n\tsub.s\t17, r4, r4\n\tmul\t32, r4, r4, r0\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_309\n.BB3_303:\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r1\n\tadd.lt\tr3, r0, r1\n\tadd\t31, r1, r1\n\tand\t96, r1, r1\n\tadd\tstack-[12], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r5\n\tsub.s!\t@CPI3_61[0], r2, r2\n\tjump.gt\t@.BB3_63\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB3_46\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI3_75[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_46\n\tdiv.s\t32, r4, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI3_93[0], r1, r1\n\tjump.eq\t@.BB3_293\n\tadd\t@CPI3_56[0], r0, r1\n\tadd\tr5, r0, stack-[13]\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_309:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB3_218\n\tld.1\t0, r2\n\tand\t@CPI3_74[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI3_75[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI3_75[0], r1, r1\n\tsub.s!\t@CPI3_56[0], r1, r1\n\tjump.ne\t@.BB3_218\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.ge\t@.BB3_312\n.BB3_218:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t@CPI3_56[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_f591, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_312:\n\tld.1\t64, r2\n\tadd\tstack-[13], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_755\n\tadd\tr0, r0, r5\n.BB3_314:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_314\n.BB3_755:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB3_316\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB3_316:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI3_61[0], r3, r1\n\tjump.gt\t@.BB3_218\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB3_218\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI3_61[0], r5, r6\n\tjump.gt\t@.BB3_218\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB3_218\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[3], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI3_61[0], r5, r3\n\tjump.gt\t@.BB3_63\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_63\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB3_218\n\tadd\t@CPI3_56[0], r0, r2\n\tadd\tr4, r0, stack-[14]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_47[0], r0, r2\n\tsub.s!\t@CPI3_47[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_606:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB3_74\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB3_611\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[12], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr1, r3, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB3_611\n.BB3_612:\n\tadd\tstack-[14], r0, r3\n\tsstore\tr2, r3\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB3_612\n.BB3_611:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB3_621\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r4\n\tadd\t@CPI3_47[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_47[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r2\n\tsub.s!\t@CPI3_47[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_62[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_46\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[12], r0, r3\n\tand\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB3_618\n\tadd\t32, r0, r2\n.BB3_617:\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r2, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[14], r0, r4\n\tadd\t32, r4, r4\n\tadd\tr4, r0, stack-[14]\n\tsub!\tr4, r3, r4\n\tjump.lt\t@.BB3_617\n.BB3_618:\n\tadd\tstack-[12], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB3_620\n\tadd\tstack-[12], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB3_620:\n\tadd\tstack-[12], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tjump\t@.BB3_613\n.BB3_621:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[14], r0, r1\n\tjump.eq\t@.BB3_623\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n.BB3_623:\n\tadd\tstack-[12], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI3_47[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI3_47[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tadd\tr1, r0, stack-[9]\n.BB3_613:\n\tadd\tstack-[9], r0, r1\n\tmul\t@CPI3_52[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end3:\n\nfinalize_allocation_32936:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_encode_string:\n.func_begin6:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB6_3\n\tadd\tr0, r0, r4\n.BB6_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB6_2\n.BB6_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end6:\n\nabi_decode_uint256t_uint256:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_encode_array_uint256_dyn:\n.func_begin8:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB8_3\n\tadd\tr0, r0, r2\n.BB8_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB8_2\n.BB8_3:\n\tret\n.func_end8:\n\nabi_decode_addresst_addresst_uint256t_uint256t_bytes:\n.func_begin9:\n\tadd\tr1, r0, r6\n\tsub.s\t4, r6, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t159, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add.s\t4, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t36, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t132, r5, r3\n\tld\tr3, r8\n\tsub.s!\t@CPI9_2[0], r8, r3\n\tjump.gt\t@.BB9_1\n\tadd\t35, r8, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tsub!\tr3, r6, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr4, r0, r7\n\tand\t@CPI9_0[0], r6, r9\n\tand\t@CPI9_0[0], r3, r3\n\tsub!\tr3, r9, r10\n\tadd.ge\t0, r0, r4\n\txor\tr3, r9, r3\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd.eq\tr4, r0, r7\n\tptr.add.s\t68, r5, r3\n\tld\tr3, r3\n\tptr.add.s\t100, r5, r4\n\tld\tr4, r4\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB9_1\n\tadd\t4, r8, r7\n\tptr.add\tr5, r7, r5\n\tld\tr5, r7\n\tsub.s!\t@CPI9_3[0], r7, r5\n\tjump.ge\t@.BB9_7\n\tadd\t63, r7, r5\n\tsub.s\t32, r0, r9\n\tand\tr5, r9, r9\n\tld.1\t64, r5\n\tadd\tr5, r9, r9\n\tsub!\tr9, r5, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI9_2[0], r9, r11\n\tjump.gt\t@.BB9_7\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB9_7\n\tst.1\t64, r9\n\tst.1.inc\tr5, r7, r9\n\tadd\t36, r8, r8\n\tadd\tr7, r8, r10\n\tsub!\tr10, r6, r6\n\tjump.gt\t@.BB9_1\n\tand\t31, r7, r6\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r7, r10\n\tjump.eq\t@.BB9_16\n\tadd\tr0, r0, r11\n.BB9_13:\n\tshl.s\t5, r11, r12\n\tadd\tr9, r12, r13\n\tptr.add\tr8, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r10, r12\n\tjump.lt\t@.BB9_13\n.BB9_16:\n\tsub.s!\t0, r6, r11\n\tjump.eq\t@.BB9_15\n\tshl.s\t5, r10, r10\n\tptr.add\tr8, r10, r8\n\tadd\tr9, r10, r10\n\tshl.s\t3, r6, r6\n\tld.1\tr10, r11\n\tshl\tr11, r6, r11\n\tshr\tr11, r6, r11\n\tld\tr8, r8\n\tsub\t256, r6, r6\n\tshr\tr8, r6, r8\n\tshl\tr8, r6, r6\n\tor\tr6, r11, r6\n\tst.1\tr10, r6\n.BB9_15:\n\tadd\tr9, r7, r6\n\tst.1\tr6, r0\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_7:\n\tadd\t@CPI9_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nstorage_array_index_access_struct_CurrentOwner__dyn:\n.func_begin10:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB10_1\n\tst.1\t0, r1\n\tadd\t@CPI10_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[1], r0, r2\n\tshl.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tadd\tr0, r0, r2\n\tret\n.BB10_1:\n\tadd\t@CPI10_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nabi_decode_bytes_calldata:\n.func_begin11:\n\tadd\t31, r1, r3\n\tadd\t@CPI11_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI11_0[0], r2, r6\n\tand\t@CPI11_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI11_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB11_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI11_1[0], r3, r4\n\tjump.gt\t@.BB11_1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB11_1\n\tadd\tr3, r0, r2\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tnop\tstack+=[1]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tjump.eq\t@.BB12_1\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_safeTransferFrom:\n.func_begin13:\n\tnop\tstack+=[10]\n\tadd\tr5, r0, stack-[1]\n\tadd\tr3, r0, stack-[8]\n\tand\t@CPI13_0[0], r1, r3\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr3, r1, r1\n\tadd\tr4, r0, stack-[7]\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB13_6\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[7], r0, r4\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB13_5\n.BB13_6:\n\tld.1\t64, r1\n\tand!\t@CPI13_0[0], r2, r9\n\tjump.eq\t@.BB13_7\n\tsub.s!\t@CPI13_7[0], r1, r3\n\tjump.ge\t@.BB13_9\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t1, r0, r10\n\tst.1.inc\tr1, r10, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r8\n\tadd\tr0, r0, r5\n.BB13_11:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr8, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd!\t1, r5, r5\n\tadd\t0, r0, r6\n\tadd.eq\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB13_11\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_13\n\tadd\tstack-[8], r0, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI13_8[0], r1, r3\n\tjump.gt\t@.BB13_9\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tst.1.inc\tr1, r10, r8\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r7\n.BB13_16:\n\tshl.s\t5, r7, r5\n\tadd\tr8, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r7, r7\n\tadd\t0, r0, r5\n\tadd.eq\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB13_16\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_13\n\tadd\tr9, r0, stack-[5]\n\tst.1\tr8, r4\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_21\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[2], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB13_27\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI13_9[0], r0, r4\n\tadd\tr3, r0, stack-[2]\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_2\n\tadd\t@CPI13_10[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_11[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[7], r0, r3\n\tjump.eq\t@.BB13_35\n\tld.1\t64, r10\n\tadd\t132, r10, r1\n\tadd\t160, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r10, r1\n\tst.1\tr1, r3\n\tadd\t68, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_12[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t164, r10, r2\n\tst.1\tr2, r1\n\tadd\t196, r10, r2\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB13_34\n\tadd\tr0, r0, r3\n.BB13_33:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB13_33\n.BB13_34:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB13_37\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[10]\n\tjump\t@.BB13_42\n.BB13_37:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tadd\tr3, r0, stack-[7]\n\tand\tr1, r3, r1\n\tadd\t@CPI13_1[0], r0, r3\n\tsub.s!\t@CPI13_1[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI13_1[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI13_1[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB13_65\n\tadd\tr0, r0, r7\n.BB13_39:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB13_39\n.BB13_65:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB13_41\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB13_41:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[9]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_48\n.BB13_42:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI13_15[0], r4, r2\n\tjump.gt\t@.BB13_9\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB13_9\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB13_2\n\tld.1\tr10, r1\n\tand\t@CPI13_14[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB13_2\n\tdiv.s\t32, r5, r2, r0\n\tadd\tr1, r0, stack[r2]\n\tsub.s!\t@CPI13_12[0], r1, r1\n\tjump.ne\t@.BB13_47\n.BB13_35:\n\tret\n.BB13_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_13:\n\tadd\t@CPI13_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tadd\t100, r1, r2\n\tadd\t@CPI13_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_21:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_27:\n\tadd\t@CPI13_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_47:\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr4, r0, stack-[8]\n\tnear_call\tr0, @abi_encode_stringliteral, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_48:\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB13_63\n\tld.1\t0, r2\n\tand\t@CPI13_13[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI13_14[0], r1, r1\n\tor\tr1, r2, r1\n\tst.1\t0, r1\n\tand\t@CPI13_14[0], r1, r1\n\tsub.s!\t@CPI13_5[0], r1, r1\n\tjump.ne\t@.BB13_63\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t68, r3, r1\n\tjump.lt\t@.BB13_63\n\tld.1\t64, r2\n\tadd\tstack-[2], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tsub.s\t4, r3, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB13_64\n\tadd\tr0, r0, r5\n.BB13_53:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB13_53\n.BB13_64:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB13_55\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB13_55:\n\tadd\tstack[@returndatasize], r0, r4\n\tld.1\tr2, r3\n\tsub.s!\t@CPI13_15[0], r3, r1\n\tjump.gt\t@.BB13_63\n\tadd\t36, r3, r1\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB13_63\n\tadd\tr3, r2, r1\n\tld.1\tr1, r5\n\tsub.s!\t@CPI13_15[0], r5, r6\n\tjump.gt\t@.BB13_63\n\tadd\tr1, r5, r6\n\tadd\tr2, r4, r4\n\tsub.s\t4, r4, r4\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB13_59\n.BB13_63:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_f591, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_59:\n\tadd\tr3, r5, r3\n\tadd\t63, r3, r3\n\tadd\tstack-[7], r0, r4\n\tand\tr3, r4, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr5, r0, r4\n\tsub.s!\t@CPI13_15[0], r5, r3\n\tjump.gt\t@.BB13_9\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_9\n\tst.1\t64, r4\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB13_63\n\tadd\t@CPI13_5[0], r0, r2\n\tadd\tr4, r0, stack-[8]\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_9:\n\tadd\t@CPI13_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_setApprovalForAll:\n.func_begin14:\n\tnop\tstack+=[3]\n\tand\t@CPI14_0[0], r1, r3\n\tand\t@CPI14_0[0], r2, r1\n\tadd\tr1, r0, stack-[3]\n\tsub!\tr3, r1, r1\n\tjump.eq\t@.BB14_1\n\tadd\tr3, r0, stack-[2]\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB14_3\n\tld\tr1, r1\n\tst.1\t0, r4\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_3\n\tret\n.BB14_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nabi_encode_stringliteral:\n.func_begin15:\n\tadd\t96, r1, r2\n\tadd\t@CPI15_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI15_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end15:\n\nabi_encode_stringliteral_f591:\n.func_begin16:\n\tadd\t96, r1, r2\n\tadd\t@CPI16_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI16_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t52, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end16:\n\nupdate_storage_value_struct_CurrentOwner_to_struct_CurrentOwner:\n.func_begin17:\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB17_1\n\tld.1.inc\tr3, r2, r3\n\tand\t@CPI17_2[0], r2, r2\n\tsload\tr1, r4\n\tand\t@CPI17_3[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tld.1\tr3, r2\n\tsstore\tr1, r2\n\tret\n.BB17_1:\n\tadd\t@CPI17_0[0], r0, r1\n\tst.1\t0, r1\n\tst.1\t4, r0\n\tadd\t@CPI17_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_getShareExit:\n.func_begin18:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI18_2[0], r5, r2\n\tjump.ge\t@.BB18_3\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI18_3[0], r2, r4\n\tjump.gt\t@.BB18_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB18_3\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[4]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tadd\tstack-[3], r0, r7\n\tsub.s!\t0, r7, r2\n\tadd\tstack-[4], r0, r8\n\tjump.eq\t@.BB18_10\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr8, r0, r3\n.BB18_12:\n\tld.1\t64, r4\n\tsub.s!\t@CPI18_5[0], r4, r5\n\tjump.gt\t@.BB18_3\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI18_6[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r7, r4\n\tjump.lt\t@.BB18_12\n.BB18_10:\n\tld.1\tr8, r2\n\tsub.s!\t0, r2, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB18_9\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r4\n.BB18_15:\n\tshl.s\t5, r4, r1\n\tadd\tr6, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\txor\tr1, r5, r1\n\tand!\t@CPI18_6[0], r1, r1\n\tadd\tr3, r0, r1\n\tjump.eq\t@.BB18_9\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r1\n\tadd\tr0, r0, r1\n\tjump.lt\t@.BB18_15\n.BB18_9:\n\tret\n.BB18_3:\n\tadd\t@CPI18_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_getShareEntity:\n.func_begin19:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[1]\n\tld.1\t64, r2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tjump.ge\t@.BB19_1\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI19_1[0], r2, r2\n\tjump.gt\t@.BB19_1\n\tadd\tstack-[5], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tadd\t32, r3, r2\n\tst.1\tr2, r0\n\tst.1\tr3, r0\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI19_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_4\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI19_4[0], r5, r2\n\tjump.gt\t@.BB19_1\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI19_4[0], r2, r4\n\tjump.gt\t@.BB19_1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB19_1\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[3]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t@CPI19_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_4\n\tadd\tstack-[2], r0, r8\n\tsub.s!\t0, r8, r2\n\tadd\tstack-[4], r0, r7\n\tadd\tstack-[3], r0, r9\n\tjump.eq\t@.BB19_12\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr9, r0, r3\n.BB19_14:\n\tld.1\t64, r4\n\tsub.s!\t@CPI19_1[0], r4, r5\n\tjump.gt\t@.BB19_1\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI19_6[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r8, r4\n\tjump.lt\t@.BB19_14\n.BB19_12:\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tadd\tstack-[5], r0, r6\n\tadd\tr6, r0, r1\n\tadd\tstack-[1], r0, r5\n\tjump.eq\t@.BB19_11\n\tadd\tr0, r0, r3\n.BB19_17:\n\tshl.s\t5, r3, r1\n\tadd\tr7, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\txor\tr4, r5, r4\n\tand!\t@CPI19_6[0], r4, r4\n\tjump.eq\t@.BB19_11\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r1\n\tadd\tr6, r0, r1\n\tjump.lt\t@.BB19_17\n.BB19_11:\n\tret\n.BB19_1:\n\tadd\t@CPI19_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_4:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_getShareArrayIndex:\n.func_begin20:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI20_2[0], r5, r2\n\tjump.ge\t@.BB20_3\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r6\n\tadd\tr6, r2, r2\n\tsub!\tr2, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI20_3[0], r2, r4\n\tjump.gt\t@.BB20_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB20_3\n\tst.1\t64, r2\n\tadd\tr6, r0, stack-[4]\n\tst.1.inc\tr6, r5, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tadd\tstack-[3], r0, r7\n\tsub.s!\t0, r7, r2\n\tadd\tstack-[4], r0, r8\n\tjump.eq\t@.BB20_10\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tr8, r0, r3\n.BB20_12:\n\tld.1\t64, r4\n\tsub.s!\t@CPI20_5[0], r4, r5\n\tjump.gt\t@.BB20_3\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tsload\tr1, r5\n\tand\t@CPI20_6[0], r5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r7, r4\n\tjump.lt\t@.BB20_12\n.BB20_10:\n\tld.1\tr8, r2\n\tsub.s!\t0, r2, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r4\n\tadd\tstack-[1], r0, r5\n\tjump.eq\t@.BB20_9\n\tadd\tr0, r0, r3\n.BB20_14:\n\tshl.s\t5, r3, r1\n\tadd\tr5, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\txor\tr1, r4, r1\n\tand!\t@CPI20_6[0], r1, r1\n\tadd\tr3, r0, r1\n\tjump.eq\t@.BB20_9\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r1\n\tadd\tr0, r0, r1\n\tjump.lt\t@.BB20_14\n.BB20_9:\n\tret\n.BB20_3:\n\tadd\t@CPI20_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nfun_calculatePercentage:\n.func_begin21:\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB21_1\n\tmul\t100, r1, r3, r4\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB21_5\n\tdiv\tr3, r1, r1, r4\n\tsub.s!\t100, r1, r1\n\tjump.ne\t@.BB21_4\n.BB21_5:\n\tdiv\tr3, r2, r1, r2\n\tret\n.BB21_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI21_2[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI21_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_5[0], r0, r2\n\tsub.s!\t@CPI21_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_4:\n\tadd\t@CPI21_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI21_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nfun_throwError:\n.func_begin22:\n\tsub.s!\t4, r1, r2\n\tjump.gt\t@.BB22_2\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB22_1\n\tsub.s!\t1, r1, r2\n\tjump.eq\t@.BB22_9\n\tsub.s!\t2, r1, r2\n\tjump.eq\t@.BB22_8\n\tsub.s!\t3, r1, r1\n\tjump.eq\t@.BB22_7\n.BB22_1:\n\tret\n.BB22_2:\n\tadd\t@CPI22_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_9:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_3[0], r0, r2\n\tsub.s!\t@CPI22_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_8:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_3[0], r0, r2\n\tsub.s!\t@CPI22_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI22_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI22_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_3[0], r0, r2\n\tsub.s!\t@CPI22_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nfun_tryRecover_2150:\n.func_begin23:\n\tnop\tstack+=[1]\n\tadd\t2, r0, r6\n\tld.1.inc\tr2, r3, r4\n\tsub.s!\t65, r3, r3\n\tadd\tr0, r0, r3\n\tjump.ne\t@.BB23_1\n\tadd\t3, r0, r6\n\tadd\t64, r2, r3\n\tld.1\tr3, r5\n\tsub.s!\t@CPI23_0[0], r5, r3\n\tadd\tr0, r0, r3\n\tjump.gt\t@.BB23_1\n\tadd\t96, r2, r2\n\tld.1\tr2, r2\n\tld.1\tr4, r3\n\tld.1\t64, r4\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t64, r4, r5\n\tst.1\tr5, r3\n\tshr.s\t248, r2, r2\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI23_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI23_1[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI23_2[0], r1, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI23_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB23_16\n\tadd\tr0, r0, r6\n.BB23_5:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB23_5\n.BB23_16:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB23_7\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB23_7:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_9\n\tld.1\t0, r1\n\tand!\t@CPI23_3[0], r1, r2\n\tadd\tr0, r0, r3\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB23_1\n\tadd\tr1, r0, r3\n\tadd\tr0, r0, r6\n.BB23_1:\n\tadd\tr3, r0, r1\n\tadd\tr6, r0, r2\n\tret\n.BB23_9:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB23_15\n\tadd\tr0, r0, r5\n.BB23_11:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB23_11\n.BB23_15:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB23_13\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB23_13:\n\tadd\t@CPI23_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI23_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI23_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\nfun_getHash:\n.func_begin24:\n\tshl.s\t96, r1, r6\n\tld.1\t64, r1\n\tadd\t32, r1, r5\n\tst.1\tr5, r6\n\tadd\t52, r1, r6\n\tst.1\tr6, r2\n\tand\t31, r4, r6\n\tadd\t84, r1, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB24_10\n\tadd\tr0, r0, r8\n.BB24_2:\n\tshl.s\t5, r8, r9\n\tadd\tr2, r9, r10\n\tptr.add\tr3, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB24_2\n.BB24_10:\n\tsub.s!\t0, r6, r8\n\tjump.eq\t@.BB24_4\n\tshl.s\t5, r7, r7\n\tptr.add\tr3, r7, r3\n\tadd\tr2, r7, r7\n\tshl.s\t3, r6, r6\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr3, r3\n\tsub\t256, r6, r6\n\tshr\tr3, r6, r3\n\tshl\tr3, r6, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB24_4:\n\tadd\tr2, r4, r2\n\tst.1\tr2, r0\n\tadd\t52, r4, r2\n\tst.1\tr1, r2\n\tadd\t115, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI24_0[0], r2, r4\n\tjump.gt\t@.BB24_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB24_6\n\tst.1\t64, r2\n\tadd\t@CPI24_1[0], r0, r2\n\tsub.s!\t@CPI24_1[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr1, r1\n\tsub.s!\t@CPI24_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI24_1[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_8\n\tld\tr1, r1\n\tret\n.BB24_6:\n\tadd\t@CPI24_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end24:\n\n__farcall:\n.func_begin25:\n.tmp0:\n\tfar_call\tr1, r2, @.BB25_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB25_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end25:\n\n__staticcall:\n.func_begin26:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB26_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB26_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end26:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI3_47:\nCPI10_2:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI18_0:\nCPI19_2:\nCPI20_0:\nCPI21_5:\nCPI22_3:\nCPI23_1:\nCPI24_1:\n\t.cell 4294967295\nCPI0_1:\nCPI3_61:\nCPI5_0:\nCPI9_2:\nCPI11_1:\nCPI13_15:\nCPI18_3:\nCPI19_4:\nCPI20_3:\nCPI24_0:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI3_45:\nCPI7_0:\nCPI9_0:\nCPI11_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\n\t.cell 18446744073709551359\nCPI0_4:\n\t.cell 48120917003659543553365610565867974527174395704009662667475560568947579289600\nCPI0_5:\n\t.cell 38116483686609474346057138457183851648345638092745713256791560685607694202701\nCPI0_6:\n\t.cell 38124068705844595581279710518074170703587592201156091825777557468393987584308\nCPI0_7:\n\t.cell 37233247685400289553839028591082859527391196872906515566581485014371388175182\nCPI0_8:\n\t.cell 53578438262368547771725389209530784170074812041991224412278187984994077670008\nCPI0_9:\n\t.cell 24959237201403152472799349262818600518227383350287290881050153837445551052098\nCPI0_10:\n\t.cell 47246294146399100580941978449025499594083390757264527547715253650487709088050\nCPI0_11:\nCPI3_62:\nCPI10_3:\nCPI14_3:\nCPI18_4:\nCPI19_5:\nCPI20_4:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_12:\n\t.cell -87112285931760246646623899502532662132736\nCPI0_13:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_14:\nCPI3_67:\nCPI4_1:\nCPI5_1:\nCPI9_4:\nCPI10_0:\nCPI13_16:\nCPI17_0:\nCPI18_7:\nCPI19_7:\nCPI20_7:\nCPI21_0:\nCPI22_8:\nCPI24_3:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_15:\nCPI3_68:\nCPI4_2:\nCPI5_2:\nCPI9_5:\nCPI10_1:\nCPI13_17:\nCPI17_1:\nCPI18_8:\nCPI19_8:\nCPI20_8:\nCPI21_1:\nCPI22_9:\nCPI24_4:\n\t.cell 2852213850513516153367582212096\nCPI1_1:\nCPI3_59:\nCPI24_2:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_1:\nCPI3_54:\nCPI13_11:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI3_0:\n\t.cell 2292817665\nCPI3_1:\n\t.cell 3270634236\nCPI3_2:\n\t.cell 3917867460\nCPI3_3:\n\t.cell 4093572002\nCPI3_4:\n\t.cell 4093572003\nCPI3_5:\n\t.cell 4113140426\nCPI3_6:\n\t.cell 3917867461\nCPI3_7:\n\t.cell 4064428842\nCPI3_8:\n\t.cell 3671964103\nCPI3_9:\n\t.cell 3671964104\nCPI3_10:\n\t.cell 3794879809\nCPI3_11:\n\t.cell 3270634237\nCPI3_12:\n\t.cell 3504541104\nCPI3_13:\n\t.cell 2720838756\nCPI3_14:\n\t.cell 3037714934\nCPI3_15:\n\t.cell 3037714935\nCPI3_16:\n\t.cell 3247308483\nCPI3_17:\n\t.cell 2720838757\nCPI3_18:\n\t.cell 2763408875\nCPI3_19:\n\t.cell 2514000704\nCPI3_20:\n\t.cell 2514000705\nCPI3_21:\n\t.cell 2662832757\nCPI3_22:\n\t.cell 2292817666\nCPI3_23:\n\t.cell 2374124147\nCPI3_24:\n\t.cell 528474105\nCPI3_25:\n\t.cell 1475836061\nCPI3_26:\n\t.cell 1691455524\nCPI3_27:\n\t.cell 1691455525\nCPI3_28:\n\t.cell 1797309524\nCPI3_29:\n\t.cell 1475836062\nCPI3_30:\n\t.cell 1615922672\nCPI3_31:\n\t.cell 783467221\nCPI3_32:\n\t.cell 783467222\nCPI3_33:\n\t.cell 1309832180\nCPI3_34:\n\t.cell 528474106\nCPI3_35:\n\t.cell 557048761\nCPI3_36:\n\t.cell 117300738\nCPI3_37:\n\t.cell 243872795\nCPI3_38:\n\t.cell 243872796\nCPI3_39:\n\t.cell 302407648\nCPI3_40:\n\t.cell 117300739\nCPI3_41:\n\t.cell 186062077\nCPI3_42:\n\t.cell 16635278\nCPI3_43:\n\t.cell 33540519\nCPI3_44:\n\t.cell 50221829\nCPI3_46:\nCPI9_1:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI17_2:\nCPI18_6:\nCPI19_6:\nCPI20_6:\nCPI23_3:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI3_48:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI18_1:\nCPI19_3:\nCPI20_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI3_49:\nCPI13_8:\nCPI18_5:\nCPI19_1:\nCPI20_5:\n\t.cell 18446744073709551551\nCPI3_50:\n\t.cell 18446744073709551583\nCPI3_51:\nCPI13_9:\n\t.cell -27213852188849977806687151827570343143753748252864080105821182213072209768606\nCPI3_52:\n\t.cell 79228162532711081667253501952\nCPI3_53:\n\t.cell -44877977326897262784168444354156441158329539312518651612887364914072161059015\nCPI3_55:\n\t.cell 49029036005169207073559450817993169151266089503930969673021265452335078834176\nCPI3_56:\nCPI12_5:\nCPI13_5:\nCPI14_7:\nCPI21_4:\nCPI22_2:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI3_57:\nCPI22_6:\n\t.cell 7922816251426433759354395033600\nCPI3_58:\n\t.cell 14437333991389365756822315673377632757035417522267279379660800\nCPI3_60:\n\t.cell 2535301200456458802993406410752\nCPI3_63:\nCPI21_2:\n\t.cell 44065976022850093057985188796332797985698083205179267427377633267036756901888\nCPI3_64:\nCPI21_3:\n\t.cell 30936487453379369903832728913327844415430449950750548383976987569384191893622\nCPI3_65:\nCPI12_6:\nCPI13_6:\nCPI14_8:\nCPI21_6:\nCPI22_4:\n\t.cell 10458117451882892562347801444352\nCPI3_66:\nCPI9_3:\nCPI18_2:\nCPI20_2:\n\t.cell 18446744073709551616\nCPI3_69:\n\t.cell 2661379305446904779734859349833089258949455794555359447896749126450\nCPI3_70:\n\t.cell 904625697166532776746648320380374280103671759954006657414122630674458345472\nCPI3_71:\n\t.cell 29591944173203152806989185941469585732173795765102619530527420207829998370816\nCPI3_72:\nCPI13_10:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI3_73:\nCPI13_12:\n\t.cell -6229140943195609470482029081774216773103763255593484717380184921042965233664\nCPI3_74:\nCPI13_13:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI3_75:\nCPI13_14:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI3_76:\nCPI17_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI3_77:\nCPI14_4:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI3_78:\nCPI14_5:\n\t.cell 14654998725967798007904516271620013939489654481799787699370567012326353928192\nCPI3_79:\nCPI14_6:\n\t.cell 31354931754782020730668050510087396086141667671140429186647036696488985261427\nCPI3_80:\n\t.cell 5070602400912917605986812821504\nCPI3_81:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913880\nCPI3_82:\n\t.cell 33573379646215597789982475826324625834727175556203253221976374124330619566075\nCPI3_83:\n\t.cell 44069385485545407596496181565728762836271594053011519598335883554003313754112\nCPI3_84:\n\t.cell 31354931754782020730666428216927046282608863186648363170254270039807376908652\nCPI3_85:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI3_86:\n\t.cell 31354931754782020730666428216927046719871661559673753862802484414801953186930\nCPI3_87:\n\t.cell 14667325280004778357576260612488761262665225460782578448745097612516640423936\nCPI3_88:\n\t.cell 31354931754782020730666325679441278472750292860769655833395308424203898156136\nCPI3_89:\nCPI12_3:\n\t.cell 44065893178349832907524482763744232223715160598588722440363827218073792806912\nCPI3_90:\nCPI12_4:\n\t.cell 31354931754782020730666326055063969862292926624116462988355266888658445213814\nCPI3_91:\nCPI13_3:\n\t.cell 45885242132750740256497420374811629444014390564921468556415905440447347032064\nCPI3_92:\nCPI13_4:\n\t.cell 31354931754782020730666516506231079667030334057162060953243838907012487280494\nCPI3_93:\n\t.cell -30712243232662532708804285033642283983940691742684704713361190381700136304640\nCPI3_94:\nCPI13_18:\n\t.cell 51621007530836153441481177699373232841556542147537778994550402007698799329280\nCPI3_95:\nCPI13_19:\n\t.cell 31354931754782020730667096066218267071081219445577361327006864227958802900591\nCPI3_96:\nCPI13_20:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI3_97:\nCPI13_21:\n\t.cell 31354931754782020730668151127133586497509920762368500730803146263088741769572\nCPI3_98:\n\t.cell 49488416087105005985251196519109831937658208659842033616102300551039800049664\nCPI3_99:\n\t.cell 31354931754782020730667092324288700479831505799192396736967425796212700506144\nCPI3_100:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI3_101:\n\t.cell 31354931754782020730667477312066610751675534303280223998162701256317757187443\nCPI3_102:\n\t.cell 49791959467252497455735130940088646708311117250336157395101362029847983277999\nCPI3_103:\n\t.cell 29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI3_104:\n\t.cell -17317791891425441398069102864720316188289832523668724183806499875177766060032\nCPI3_105:\n\t.cell 6574797573728907879914310858245660639267253899780774834407394597170562727936\nCPI3_106:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI4_0:\n\t.cell 18446744073709551584\nCPI13_7:\nCPI19_0:\n\t.cell 18446744073709551552\nCPI15_0:\n\t.cell 45288627570839996578658988666401425582779806902220172383983149423179807588352\nCPI15_1:\n\t.cell 31354931754782020730663637404666106243223600773764328557126259806947099505765\nCPI16_0:\n\t.cell 37268791144319902338696353323952642643930904521079424936828708519168845021184\nCPI16_1:\n\t.cell 31354931754782020730668151127133586497509920762368493510471736461519699916085\nCPI22_0:\n\t.cell 53099054837784784256966839789826930156163373552802976548428631167447102128128\nCPI22_1:\n\t.cell 31328436868881898538041100389690153948709681386377410647826978248703857811820\nCPI22_5:\n\t.cell 31328436868881898538041100389690153948709681386377410647826997655390221789184\nCPI22_7:\n\t.cell 31328436868881898538041100389690153948709681386377410647824661301558666854400\nCPI23_0:\n\t.cell 57896044618658097711785492504343953926418782139537452191302581570759080747168\nCPI23_2:\n\t.cell 10141204801825835211973625643008\n","bytecode":{"object":""},"methodIdentifiers":{"addVoteInfo(address,address,uint256)":"c2f1eafd","approvalForAll(address,address)":"c18dfec3","approvedForAll(address,address)":"0b1714fd","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","calculatePercentage(uint256,uint256)":"2133e3b9","deposit()":"d0e30db0","getBalance()":"12065fe0","getHash(address,uint256,bytes)":"e2314541","getSigner(address,uint256,bytes,bytes)":"b50fd9f7","getVoteInfo(uint256)":"8d824273","getVoteInfoResult(uint256)":"daddb9c8","initialOwners(uint256)":"64d19025","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,string,bytes)":"a4b645eb","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","name()":"06fdde03","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setTokenUri(uint256,string)":"57f7789e","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenIdCurrentOwner(uint256,uint256)":"88a99f02","transferFrom(address,address,uint256,uint256,bytes)":"605105f0","uri(uint256)":"0e89341c","voteInfo(uint256,uint256)":"9eb79a75","withdraw(address,uint256)":"f3fef3a3"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 1:\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\", 3:\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\", 4:\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\", 6:\"@openzeppelin/contracts/utils/Context.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 10:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 13:\"contracts/AiYueNFTExchange.sol\"\nobject \"AiYueNFTExchange_4272\" {\n    code {\n        {\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let _1 := 64\n            mstore(_1, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"AiYueNFTExchange_4272\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _2 := add(memoryDataOffset, argSize)\n            if slt(sub(_2, memoryDataOffset), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let offset := mload(memoryDataOffset)\n            let _3 := sub(shl(64, 1), 1)\n            if gt(offset, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _2)\n            let _4 := 32\n            let offset_1 := mload(add(memoryDataOffset, _4))\n            if gt(offset_1, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _2)\n            let memPtr := mload(_1)\n            let newFreePtr := add(memPtr, 256)\n            if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            mstore(_1, newFreePtr)\n            mstore(memPtr, 207)\n            mstore(add(memPtr, _4), \"https://gray-notable-pheasant-92\")\n            mstore(add(memPtr, _1), \"7.mypinata.cloud/ipfs/QmY8UCGaUB\")\n            mstore(add(memPtr, 96), \"vtRGxTWzXqZEbWPM8a7MtvkWaJrts2zx\")\n            mstore(add(memPtr, 128), \"RQEy?_gl=1*1vdvem1*_ga*MjcyOTA3N\")\n            mstore(add(memPtr, 160), \"TIuMTY4OTkwNjE3NA..*_ga_5RMPXG14\")\n            let _5 := 192\n            mstore(add(memPtr, _5), \"TE*MTY5MTAyNzE5Mi4xMC4xLjE2OTEwM\")\n            mstore(add(memPtr, 224), \"jcyMDUuNDcuMC4w\")\n            let _6 := sload(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let _7 := 1\n            length := shr(_7, _6)\n            let outOfPlaceEncoding := and(_6, _7)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _8 := 31\n            if gt(length, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                let _9 := add(data, shr(5, add(length, _8)))\n                let start := add(data, 7)\n                for { } lt(start, _9) { start := add(start, _7) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            srcOffset := _4\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            for { } lt(i, _5) { i := add(i, _4) }\n            {\n                sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                dstPtr := add(dstPtr, _7)\n                srcOffset := add(srcOffset, _4)\n            }\n            sstore(dstPtr, and(mload(add(memPtr, srcOffset)), not(sub(shl(136, 1), 1))))\n            sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 415)\n            let newLen := mload(value0)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _10 := sload(/** @src 13:1286:1298  \"name = _name\" */ 0x09)\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            length_1 := shr(_7, _10)\n            let outOfPlaceEncoding_1 := and(_10, _7)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            if gt(length_1, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:1286:1298  \"name = _name\" */ 0x09)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                let deleteStart := add(data_1, shr(5, add(newLen, _8)))\n                if lt(newLen, _4) { deleteStart := data_1 }\n                let _11 := add(data_1, shr(5, add(length_1, _8)))\n                let start_1 := deleteStart\n                for { } lt(start_1, _11) { start_1 := add(start_1, _7) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            srcOffset_1 := _4\n            switch gt(newLen, _8)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:1286:1298  \"name = _name\" */ 0x09)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i_1, loopEnd) { i_1 := add(i_1, _4) }\n                {\n                    sstore(dstPtr_1, mload(add(value0, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _7)\n                    srcOffset_1 := add(srcOffset_1, _4)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 13:1286:1298  \"name = _name\" */ 0x09, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(shl(_7, newLen), _7))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset_1))\n                }\n                sstore(/** @src 13:1286:1298  \"name = _name\" */ 0x09, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_7, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _12 := sload(/** @src 13:1309:1325  \"symbol = _symbol\" */ 0x0a)\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let length_2 := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            length_2 := shr(_7, _12)\n            let outOfPlaceEncoding_2 := and(_12, _7)\n            if iszero(outOfPlaceEncoding_2)\n            {\n                length_2 := and(length_2, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_2, lt(length_2, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            if gt(length_2, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:1309:1325  \"symbol = _symbol\" */ 0x0a)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let data_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                let deleteStart_1 := add(data_2, shr(5, add(newLen_1, _8)))\n                if lt(newLen_1, _4) { deleteStart_1 := data_2 }\n                let _13 := add(data_2, shr(5, add(length_2, _8)))\n                let start_2 := deleteStart_1\n                for { } lt(start_2, _13) { start_2 := add(start_2, _7) }\n                {\n                    sstore(start_2, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let srcOffset_2 := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            srcOffset_2 := _4\n            switch gt(newLen_1, _8)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:1309:1325  \"symbol = _symbol\" */ 0x0a)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dstPtr_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                let i_2 := /** @src -1:-1:-1 */ 0\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i_2, loopEnd_1) { i_2 := add(i_2, _4) }\n                {\n                    sstore(dstPtr_2, mload(add(value1, srcOffset_2)))\n                    dstPtr_2 := add(dstPtr_2, _7)\n                    srcOffset_2 := add(srcOffset_2, _4)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_2))\n                    sstore(dstPtr_2, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 13:1309:1325  \"symbol = _symbol\" */ 0x0a, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(shl(_7, newLen_1), _7))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_2))\n                }\n                sstore(/** @src 13:1309:1325  \"symbol = _symbol\" */ 0x0a, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_7, newLen_1)))\n            }\n            let _14 := mload(_1)\n            let _15 := datasize(\"AiYueNFTExchange_4272_deployed\")\n            codecopy(_14, dataoffset(\"AiYueNFTExchange_4272_deployed\"), _15)\n            return(_14, _15)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\", 3:\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\", 5:\"@openzeppelin/contracts/utils/Address.sol\", 6:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 13:\"contracts/AiYueNFTExchange.sol\"\n    object \"AiYueNFTExchange_4272_deployed\" {\n        code {\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x00fdd58e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0 := abi_decode_address_21483()\n                        let ret := fun_balanceOf(value0, calldataload(36))\n                        let memPos := mload(_1)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _4 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _4)) { revert(_3, _3) }\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr := /** @src 0:1373:1414  \"interfaceId == type(IERC1155).interfaceId\" */ eq(_4, /** @src 0:1388:1414  \"type(IERC1155).interfaceId\" */ shl(225, 0x6cdb3d13))\n                        /// @src 0:1373:1482  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 0:1430:1482  \"interfaceId == type(IERC1155MetadataURI).interfaceId\" */ eq(_4, /** @src 0:1445:1482  \"type(IERC1155MetadataURI).interfaceId\" */ shl(226, 0x03a24d07))\n                        }\n                        /// @src 0:1373:1534  \"interfaceId == type(IERC1155).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 9:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_4, /** @src 9:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, iszero(iszero(expr_1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x02fe5305 {\n                        if callvalue() { revert(_3, _3) }\n                        let _5 := 32\n                        if slt(add(calldatasize(), not(3)), _5) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _6 := 0xffffffffffffffff\n                        if gt(offset, _6) { revert(_3, _3) }\n                        let value0_1 := abi_decode_string(add(_2, offset), calldatasize())\n                        let newLen := mload(value0_1)\n                        if gt(newLen, _6)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        let _7 := extract_byte_array_length(sload(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        if gt(_7, 31)\n                        {\n                            mstore(_3, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _8 := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                            let deleteStart := add(_8, shr(5, add(newLen, 31)))\n                            if lt(newLen, _5) { deleteStart := _8 }\n                            let _9 := add(_8, shr(5, add(_7, 31)))\n                            let start := deleteStart\n                            for { } lt(start, _9) { start := add(start, 1) }\n                            { sstore(start, _3) }\n                        }\n                        let srcOffset := _3\n                        srcOffset := _5\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(_3, /** @src 0:8215:8228  \"_uri = newuri\" */ 0x02)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let dstPtr := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n                            let i := _3\n                            for { } lt(i, loopEnd) { i := add(i, _5) }\n                            {\n                                sstore(dstPtr, mload(add(value0_1, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _5)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(value0_1, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_1 := _3\n                            if newLen\n                            {\n                                value_1 := mload(add(value0_1, srcOffset))\n                            }\n                            sstore(/** @src 0:8215:8228  \"_uri = newuri\" */ 0x02, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr := mload(_1)\n                        let ret_1 := _3\n                        let slotValue := sload(/** @src 13:948:966  \"string public name\" */ 9)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        let _10 := 0x20\n                        let _11 := 1\n                        switch and(slotValue, _11)\n                        case 0 {\n                            mstore(add(memPtr, _10), and(slotValue, not(255)))\n                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length)))), _10)\n                        }\n                        case 1 {\n                            mstore(_3, /** @src 13:948:966  \"string public name\" */ 9)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let dataPos := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                            let i_1 := _3\n                            for { } lt(i_1, length) { i_1 := add(i_1, _10) }\n                            {\n                                mstore(add(add(memPtr, i_1), _10), sload(dataPos))\n                                dataPos := add(dataPos, _11)\n                            }\n                            ret_1 := add(add(memPtr, i_1), _10)\n                        }\n                        finalize_allocation(memPtr, sub(ret_1, memPtr))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _10)\n                        return(memPos_2, sub(abi_encode_string(memPtr, add(memPos_2, _10)), memPos_2))\n                    }\n                    case 0x0b1714fd {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address_21483()\n                        let value1 := abi_decode_address()\n                        let _12 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_2, _12))\n                        mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _13 := keccak256(_3, _1)\n                        mstore(_3, and(value1, _12))\n                        mstore(32, _13)\n                        let value_2 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, iszero(iszero(value_2)))\n                        return(memPos_3, 32)\n                    }\n                    case 0x0e89341c {\n                        if callvalue() { revert(_3, _3) }\n                        let _14 := 32\n                        if slt(add(calldatasize(), not(3)), _14) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(_14, /** @src 13:1519:1524  \"_uris\" */ 0x08)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _15 := keccak256(_3, _1)\n                        let memPtr_1 := mload(_1)\n                        let ret_2 := _3\n                        let slotValue_1 := sload(_15)\n                        let length_1 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_1, length_1)\n                        let _16 := 1\n                        switch and(slotValue_1, _16)\n                        case 0 {\n                            mstore(add(memPtr_1, _14), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), _14)\n                        }\n                        case 1 {\n                            mstore(_3, _15)\n                            let dataPos_1 := keccak256(_3, _14)\n                            let i_2 := _3\n                            for { } lt(i_2, length_1) { i_2 := add(i_2, _14) }\n                            {\n                                mstore(add(add(memPtr_1, i_2), _14), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _16)\n                            }\n                            ret_2 := add(add(memPtr_1, i_2), _14)\n                        }\n                        finalize_allocation(memPtr_1, sub(ret_2, memPtr_1))\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, _14)\n                        return(memPos_4, sub(abi_encode_string(memPtr_1, add(memPos_4, _14)), memPos_4))\n                    }\n                    case 0x12065fe0 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let ret_3 := /** @src 13:7568:7589  \"address(this).balance\" */ selfbalance()\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_5 := mload(_1)\n                        mstore(memPos_5, ret_3)\n                        return(memPos_5, 32)\n                    }\n                    case 0x1f7fdffa {\n                        if callvalue() { revert(_3, _3) }\n                        let _17 := not(3)\n                        if slt(add(calldatasize(), _17), 128) { revert(_3, _3) }\n                        let value0_3 := abi_decode_address_21483()\n                        let offset_1 := calldataload(36)\n                        let _18 := 0xffffffffffffffff\n                        if gt(offset_1, _18) { revert(_3, _3) }\n                        let value1_1 := abi_decode_array_uint256_dyn(add(_2, offset_1), calldatasize())\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, _18) { revert(_3, _3) }\n                        let value2 := abi_decode_array_uint256_dyn(add(_2, offset_2), calldatasize())\n                        let offset_3 := calldataload(100)\n                        if gt(offset_3, _18) { revert(_3, _3) }\n                        let value3 := abi_decode_string(add(_2, offset_3), calldatasize())\n                        let _19 := and(/** @src 0:9841:9857  \"to != address(0)\" */ value0_3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:9833:9895  \"require(to != address(0), \\\"ERC1155: mint to the zero address\\\")\"\n                        require_helper_stringliteral_ebf0(/** @src 0:9841:9857  \"to != address(0)\" */ iszero(iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _19)))\n                        /// @src 0:9913:9923  \"ids.length\"\n                        let expr_2 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:9913:9923  \"ids.length\" */ value1_1)\n                        /// @src 0:9905:9986  \"require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\")\"\n                        require_helper_stringliteral_e909(/** @src 0:9913:9941  \"ids.length == amounts.length\" */ eq(expr_2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:9927:9941  \"amounts.length\" */ value2)))\n                        /// @src 0:10121:10134  \"uint256 i = 0\"\n                        let var_i := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:10116:10217  \"for (uint256 i = 0; i < ids.length; i++) {...\"\n                        for { }\n                        /** @src 0:10121:10134  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:10152:10155  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 0:10136:10150  \"i < ids.length\"\n                            if iszero(lt(var_i, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:10140:10150  \"ids.length\" */ value1_1)))\n                            /// @src 0:10136:10150  \"i < ids.length\"\n                            { break }\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _20 := mload(/** @src 0:10196:10206  \"amounts[i]\" */ memory_array_index_access_address_dyn(value2, var_i))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, mload(/** @src 0:10181:10187  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_1, var_i)))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _21 := 32\n                            mstore(_21, _3)\n                            let _22 := keccak256(_3, _1)\n                            mstore(_3, _19)\n                            mstore(_21, _22)\n                            let dataSlot := keccak256(_3, _1)\n                            sstore(dataSlot, /** @src 0:10171:10206  \"_balances[ids[i]][to] += amounts[i]\" */ checked_add_uint256(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:10171:10206  \"_balances[ids[i]][to] += amounts[i]\" */ dataSlot), _20))\n                        }\n                        /// @src 0:10232:10285  \"TransferBatch(operator, address(0), to, ids, amounts)\"\n                        let _23 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        /// @src 0:10232:10285  \"TransferBatch(operator, address(0), to, ids, amounts)\"\n                        log4(_23, sub(abi_encode_array_uint256_dyn_array_uint256_dyn(_23, value1_1, value2), _23), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:10232:10285  \"TransferBatch(operator, address(0), to, ids, amounts)\" */ _19)\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        if /** @src 5:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 5:1702:1721  \"account.code.length\" */ extcodesize(value0_3)))\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let _24 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                            let _25 := shl(224, 0xbc197c81)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            mstore(_24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _25)\n                            mstore(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ add(_24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _3)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), 160)\n                            let tail := abi_encode_array_uint256_dyn(value1_1, add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164))\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), add(sub(tail, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _17))\n                            let tail_1 := abi_encode_array_uint256_dyn(value2, tail)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), add(sub(tail_1, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _17))\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let trySuccessCondition := call(gas(), _19, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(value3, tail_1), /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _24), _24, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let expr_3 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            if trySuccessCondition\n                            {\n                                let _26 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32\n                                /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                                if gt(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _26, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ returndatasize()) { _26 := returndatasize() }\n                                finalize_allocation(_24, _26)\n                                expr_3 := abi_decode_bytes4_fromMemory(_24, add(_24, _26))\n                            }\n                            /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                if /** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ iszero(eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ expr_3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _25))\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                {\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _27 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_27, shl(229, 4594637))\n                                    revert(_27, sub(abi_encode_stringliteral(add(_27, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _27))\n                                }\n                            }\n                            default /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            {\n                                let _28 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:16709:16790  \"catch Error(string memory reason) {...\"\n                                    let _29 := try_decode_error_message()\n                                    if _29\n                                    {\n                                        _28 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        let _30 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        mstore(_30, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                        mstore(/** @src 0:16761:16775  \"revert(reason)\" */ add(_30, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), 32)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        revert(_30, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_29, add(/** @src 0:16761:16775  \"revert(reason)\" */ _30, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:16761:16775  \"revert(reason)\" */ _30))\n                                    }\n                                }\n                                /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                                if _28\n                                {\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _31 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_31, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_31, sub(abi_encode_stringliteral_f591(add(_31, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _31))\n                                }\n                            }\n                        }\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x2133e3b9 {\n                        if callvalue() { revert(_3, _3) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_4 := fun_calculatePercentage(param, param_1)\n                        let memPos_6 := mload(_1)\n                        mstore(memPos_6, ret_4)\n                        return(memPos_6, 32)\n                    }\n                    case 0x2eb2c2d6 {\n                        if callvalue() { revert(_3, _3) }\n                        let _32 := not(3)\n                        if slt(add(calldatasize(), _32), 160) { revert(_3, _3) }\n                        let value0_4 := abi_decode_address_21483()\n                        let value1_2 := abi_decode_address()\n                        let offset_4 := calldataload(68)\n                        let _33 := 0xffffffffffffffff\n                        if gt(offset_4, _33) { revert(_3, _3) }\n                        let value2_1 := abi_decode_array_uint256_dyn(add(_2, offset_4), calldatasize())\n                        let offset_5 := calldataload(100)\n                        if gt(offset_5, _33) { revert(_3, _3) }\n                        let value3_1 := abi_decode_array_uint256_dyn(add(_2, offset_5), calldatasize())\n                        let offset_6 := calldataload(132)\n                        if gt(offset_6, _33) { revert(_3, _3) }\n                        let value4 := abi_decode_string(add(_2, offset_6), calldatasize())\n                        let _34 := sub(shl(160, 1), 1)\n                        let _35 := and(/** @src 0:4267:4287  \"from == _msgSender()\" */ value0_4, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _34)\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        let expr_4 := /** @src 0:4267:4287  \"from == _msgSender()\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _35, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                        if iszero(expr_4)\n                        {\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _35)\n                            mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _36 := keccak256(_3, _1)\n                            mstore(_3, /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(32, _36)\n                            /// @src 0:4267:4327  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                            expr_4 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 0:4246:4399  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_4)\n                        /// @src 0:6417:6427  \"ids.length\"\n                        let expr_5 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:6417:6427  \"ids.length\" */ value2_1)\n                        /// @src 0:6409:6490  \"require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\")\"\n                        require_helper_stringliteral_e909(/** @src 0:6417:6445  \"ids.length == amounts.length\" */ eq(expr_5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:6431:6445  \"amounts.length\" */ value3_1)))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _37 := and(/** @src 0:6508:6524  \"to != address(0)\" */ value1_2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _34)\n                        /// @src 0:6500:6566  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                        require_helper_stringliteral_6faf(/** @src 0:6508:6524  \"to != address(0)\" */ iszero(iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _37)))\n                        /// @src 0:6695:6708  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:6690:7101  \"for (uint256 i = 0; i < ids.length; ++i) {...\"\n                        for { }\n                        /** @src 0:6695:6708  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:6726:6729  \"++i\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            if iszero(lt(var_i_1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:6714:6724  \"ids.length\" */ value2_1)))\n                            /// @src 0:6710:6724  \"i < ids.length\"\n                            { break }\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _38 := mload(/** @src 0:6758:6764  \"ids[i]\" */ memory_array_index_access_address_dyn(value2_1, var_i_1))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _39 := mload(/** @src 0:6795:6805  \"amounts[i]\" */ memory_array_index_access_address_dyn(value3_1, var_i_1))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _38)\n                            let _40 := 32\n                            mstore(_40, _3)\n                            let _41 := keccak256(_3, _1)\n                            mstore(_3, _35)\n                            mstore(_40, _41)\n                            let _42 := sload(keccak256(_3, _1))\n                            /// @src 0:6875:6951  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                            require_helper_stringliteral_8ac7(/** @src 0:6883:6904  \"fromBalance >= amount\" */ iszero(lt(_42, _39)))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _38)\n                            mstore(_40, _3)\n                            let _43 := keccak256(_3, _1)\n                            mstore(_3, _35)\n                            mstore(_40, _43)\n                            sstore(keccak256(_3, _1), sub(/** @src 0:7015:7035  \"fromBalance - amount\" */ _42, _39))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _38)\n                            mstore(_40, _3)\n                            let _44 := keccak256(_3, _1)\n                            mstore(_3, _37)\n                            mstore(_40, _44)\n                            let dataSlot_1 := keccak256(_3, _1)\n                            sstore(dataSlot_1, /** @src 0:7063:7090  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:7063:7090  \"_balances[id][to] += amount\" */ dataSlot_1), _39))\n                        }\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        let _45 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        /// @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\"\n                        log4(_45, sub(abi_encode_array_uint256_dyn_array_uint256_dyn(_45, value2_1, value3_1), _45), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:7116:7163  \"TransferBatch(operator, from, to, ids, amounts)\" */ _35, _37)\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        if /** @src 5:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 5:1702:1721  \"account.code.length\" */ extcodesize(value1_2)))\n                        /// @src 0:16344:16902  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let _46 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                            let _47 := shl(224, 0xbc197c81)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            mstore(_46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _47)\n                            mstore(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ add(_46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _35)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), 160)\n                            let tail_2 := abi_encode_array_uint256_dyn(value2_1, add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164))\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), add(sub(tail_2, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _32))\n                            let tail_3 := abi_encode_array_uint256_dyn(value3_1, tail_2)\n                            mstore(add(/** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), add(sub(tail_3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _32))\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let trySuccessCondition_1 := call(gas(), _37, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(value4, tail_3), /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ _46), _46, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            let expr_6 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                            /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                            if trySuccessCondition_1\n                            {\n                                let _48 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32\n                                /// @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\"\n                                if gt(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _48, /** @src 0:16383:16462  \"IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data)\" */ returndatasize()) { _48 := returndatasize() }\n                                finalize_allocation(_46, _48)\n                                expr_6 := abi_decode_bytes4_fromMemory(_46, add(_46, _48))\n                            }\n                            /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                if /** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ iszero(eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:16541:16601  \"response != IERC1155Receiver.onERC1155BatchReceived.selector\" */ expr_6, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _47))\n                                /// @src 0:16537:16694  \"if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {...\"\n                                {\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _49 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_49, shl(229, 4594637))\n                                    revert(_49, sub(abi_encode_stringliteral(add(_49, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _49))\n                                }\n                            }\n                            default /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                            {\n                                let _50 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:16709:16790  \"catch Error(string memory reason) {...\"\n                                    let _51 := try_decode_error_message()\n                                    if _51\n                                    {\n                                        _50 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        let _52 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        mstore(_52, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                        mstore(/** @src 0:16761:16775  \"revert(reason)\" */ add(_52, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), 32)\n                                        /// @src 0:16761:16775  \"revert(reason)\"\n                                        revert(_52, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_51, add(/** @src 0:16761:16775  \"revert(reason)\" */ _52, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:16761:16775  \"revert(reason)\" */ _52))\n                                    }\n                                }\n                                /// @src 0:16379:16892  \"try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (...\"\n                                if _50\n                                {\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _53 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_53, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                    /// @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_53, sub(abi_encode_stringliteral_f591(add(_53, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16815:16877  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _53))\n                                }\n                            }\n                        }\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4e1273f4 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset_7 := calldataload(_2)\n                        let _54 := 0xffffffffffffffff\n                        if gt(offset_7, _54) { revert(_3, _3) }\n                        if iszero(slt(add(offset_7, 35), calldatasize())) { revert(_3, _3) }\n                        let _55 := calldataload(add(_2, offset_7))\n                        let _56 := array_allocation_size_array_uint256_dyn(_55)\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation(memPtr_2, _56)\n                        let dst := memPtr_2\n                        mstore(memPtr_2, _55)\n                        let _57 := 0x20\n                        dst := add(memPtr_2, _57)\n                        let srcEnd := add(add(offset_7, shl(5, _55)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset_7, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _57) }\n                        {\n                            let value_3 := calldataload(src)\n                            if iszero(eq(value_3, and(value_3, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                            mstore(dst, value_3)\n                            dst := add(dst, _57)\n                        }\n                        let offset_8 := calldataload(36)\n                        if gt(offset_8, _54) { revert(_3, _3) }\n                        let value1_3 := abi_decode_array_uint256_dyn(add(_2, offset_8), calldatasize())\n                        /// @src 0:2738:2753  \"accounts.length\"\n                        let expr_7 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:2738:2753  \"accounts.length\" */ memPtr_2)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        if iszero(/** @src 0:2738:2767  \"accounts.length == ids.length\" */ eq(expr_7, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:2757:2767  \"ids.length\" */ value1_3)))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        {\n                            let memPtr_3 := mload(_1)\n                            mstore(memPtr_3, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(memPtr_3, _2), _57)\n                            mstore(add(memPtr_3, 36), 41)\n                            mstore(add(memPtr_3, 68), \"ERC1155: accounts and ids length\")\n                            mstore(add(memPtr_3, 100), \" mismatch\")\n                            revert(memPtr_3, 132)\n                        }\n                        let _58 := mload(/** @src 0:2871:2886  \"accounts.length\" */ memPtr_2)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _59 := array_allocation_size_array_uint256_dyn(_58)\n                        let memPtr_4 := mload(_1)\n                        finalize_allocation(memPtr_4, _59)\n                        mstore(memPtr_4, _58)\n                        calldatacopy(add(memPtr_4, _57), calldatasize(), add(array_allocation_size_array_uint256_dyn(_58), not(31)))\n                        /// @src 0:2903:2916  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:2898:3018  \"for (uint256 i = 0; i < accounts.length; ++i) {...\"\n                        for { }\n                        /** @src 0:2903:2916  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:2939:2942  \"++i\"\n                            var_i_2 := increment_uint256(var_i_2)\n                        }\n                        {\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            if iszero(lt(var_i_2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:2922:2937  \"accounts.length\" */ memPtr_2)))\n                            /// @src 0:2918:2937  \"i < accounts.length\"\n                            { break }\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let cleaned := and(mload(/** @src 0:2987:2998  \"accounts[i]\" */ memory_array_index_access_address_dyn(memPtr_2, var_i_2)), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                            mstore(/** @src 0:2958:3007  \"batchBalances[i] = balanceOf(accounts[i], ids[i])\" */ memory_array_index_access_address_dyn(memPtr_4, var_i_2), /** @src 0:2977:3007  \"balanceOf(accounts[i], ids[i])\" */ fun_balanceOf(cleaned, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:3000:3006  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_3, var_i_2))))\n                        }\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_7 := mload(_1)\n                        mstore(memPos_7, _57)\n                        return(memPos_7, sub(abi_encode_array_uint256_dyn(memPtr_4, add(memPos_7, _57)), memPos_7))\n                    }\n                    case 0x57f7789e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset_9 := calldataload(36)\n                        let _60 := 0xffffffffffffffff\n                        if gt(offset_9, _60) { revert(_3, _3) }\n                        let value1_4 := abi_decode_string(add(_2, offset_9), calldatasize())\n                        mstore(_3, calldataload(_2))\n                        let _61 := 32\n                        mstore(_61, /** @src 13:1625:1630  \"_uris\" */ 0x08)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_2 := keccak256(_3, _1)\n                        let newLen_1 := mload(value1_4)\n                        if gt(newLen_1, _60)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        let _62 := extract_byte_array_length(sload(dataSlot_2))\n                        if gt(_62, 31)\n                        {\n                            mstore(_3, dataSlot_2)\n                            let data := keccak256(_3, _61)\n                            let deleteStart_1 := add(data, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, _61) { deleteStart_1 := data }\n                            let _63 := add(data, shr(5, add(_62, 31)))\n                            let start_1 := deleteStart_1\n                            for { } lt(start_1, _63) { start_1 := add(start_1, 1) }\n                            { sstore(start_1, _3) }\n                        }\n                        let srcOffset_1 := _3\n                        srcOffset_1 := _61\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(_3, dataSlot_2)\n                            let dstPtr_1 := keccak256(_3, _61)\n                            let i_3 := _3\n                            for { } lt(i_3, loopEnd_1) { i_3 := add(i_3, _61) }\n                            {\n                                sstore(dstPtr_1, mload(add(value1_4, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, _61)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(value1_4, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(dataSlot_2, add(shl(1, newLen_1), 1))\n                        }\n                        default {\n                            let value_4 := _3\n                            if newLen_1\n                            {\n                                value_4 := mload(add(value1_4, srcOffset_1))\n                            }\n                            sstore(dataSlot_2, or(and(value_4, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x605105f0 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_2, param_3, param_4, param_5, param_6 := abi_decode_addresst_addresst_uint256t_uint256t_bytes(calldatasize())\n                        /// @src 13:2104:2108  \"data\"\n                        fun_safeTransferFrom(param_2, param_3, param_4, param_5, param_6)\n                        /// @src 13:3037:3577  \"if (getShareExit(_tokenId, _to)) {...\"\n                        switch /** @src 13:3041:3068  \"getShareExit(_tokenId, _to)\" */ fun_getShareExit(param_4, param_3)\n                        case /** @src 13:3037:3577  \"if (getShareExit(_tokenId, _to)) {...\" */ 0 {\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let memPtr_5 := mload(_1)\n                            finalize_allocation_21493(memPtr_5)\n                            mstore(memPtr_5, and(param_3, sub(shl(160, 1), 1)))\n                            mstore(/** @src 13:3404:3502  \"CurrentOwner({...\" */ add(memPtr_5, 32), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ param_5)\n                            mstore(_3, param_4)\n                            mstore(/** @src 13:3404:3502  \"CurrentOwner({...\" */ 32, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                            /// @src 13:3517:3565  \"tokenIdCurrentOwner[_tokenId].push(currentOwner)\"\n                            array_push_from_struct_CurrentOwner_to_array_struct_CurrentOwner_storage_dyn_ptr(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 13:3517:3565  \"tokenIdCurrentOwner[_tokenId].push(currentOwner)\" */ memPtr_5)\n                        }\n                        default /// @src 13:3037:3577  \"if (getShareExit(_tokenId, _to)) {...\"\n                        {\n                            /// @src 13:3120:3149  \"getShareEntity(_tokenId, _to)\"\n                            let expr_mpos := fun_getShareEntity(param_4, param_3)\n                            /// @src 13:3164:3183  \"currentOwner.amount\"\n                            let _64 := add(expr_mpos, 32)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_64, /** @src 13:3164:3194  \"currentOwner.amount += _amount\" */ checked_add_uint256(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:3164:3194  \"currentOwner.amount += _amount\" */ _64), param_5))\n                            /// @src 13:3232:3265  \"getShareArrayIndex(_tokenId, _to)\"\n                            let _65 := fun_getShareArrayIndex(param_4, param_3)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, param_4)\n                            mstore(/** @src 13:3164:3183  \"currentOwner.amount\" */ 32, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                            /// @src 13:3280:3321  \"tokenIdCurrentOwner[_tokenId][shareIndex]\"\n                            let _66, _67 := storage_array_index_access_struct_CurrentOwner__dyn(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 13:3232:3265  \"getShareArrayIndex(_tokenId, _to)\" */ _65)\n                            /// @src 13:3280:3336  \"tokenIdCurrentOwner[_tokenId][shareIndex] = currentOwner\"\n                            update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(_66, _67, expr_mpos)\n                        }\n                        /// @src 13:3619:3650  \"getShareEntity(_tokenId, _from)\"\n                        let expr_mpos_1 := fun_getShareEntity(param_4, param_2)\n                        /// @src 13:3678:3692  \"current.amount\"\n                        let _68 := add(expr_mpos_1, 32)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _69 := mload(/** @src 13:3678:3692  \"current.amount\" */ _68)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let diff := sub(_69, param_5)\n                        if gt(diff, _69)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        mstore(_68, diff)\n                        /// @src 13:3739:3774  \"getShareArrayIndex(_tokenId, _from)\"\n                        let _70 := fun_getShareArrayIndex(param_4, param_2)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, param_4)\n                        mstore(/** @src 13:3678:3692  \"current.amount\" */ 32, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                        /// @src 13:3785:3829  \"tokenIdCurrentOwner[_tokenId][shareOneIndex]\"\n                        let _71, _72 := storage_array_index_access_struct_CurrentOwner__dyn(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 13:3739:3774  \"getShareArrayIndex(_tokenId, _from)\" */ _70)\n                        /// @src 13:3785:3839  \"tokenIdCurrentOwner[_tokenId][shareOneIndex] = current\"\n                        update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(_71, _72, expr_mpos_1)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x64d19025 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 13:606:659  \"mapping(uint256 => InitialOwner) public initialOwners\" */ 3)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_3 := keccak256(_3, _1)\n                        let cleaned_1 := and(sload(/** @src 13:606:659  \"mapping(uint256 => InitialOwner) public initialOwners\" */ dataSlot_3), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let _73 := sload(/** @src 13:606:659  \"mapping(uint256 => InitialOwner) public initialOwners\" */ add(dataSlot_3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1))\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_address_uint256(memPos_8, cleaned_1, _73), memPos_8))\n                    }\n                    case 0x6b20c454 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_5 := abi_decode_address_21483()\n                        let offset_10 := calldataload(36)\n                        let _74 := 0xffffffffffffffff\n                        if gt(offset_10, _74) { revert(_3, _3) }\n                        let value1_5 := abi_decode_array_uint256_dyn(add(_2, offset_10), calldatasize())\n                        let offset_11 := calldataload(68)\n                        if gt(offset_11, _74) { revert(_3, _3) }\n                        let value2_2 := abi_decode_array_uint256_dyn(add(_2, offset_11), calldatasize())\n                        let _75 := and(/** @src 3:828:851  \"account == _msgSender()\" */ value0_5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:828:894  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        let expr_8 := /** @src 3:828:851  \"account == _msgSender()\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _75, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 3:828:894  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        if iszero(expr_8)\n                        {\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _75)\n                            mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _76 := keccak256(_3, _1)\n                            mstore(_3, /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(32, _76)\n                            /// @src 3:828:894  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                            expr_8 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 3:807:966  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_8)\n                        /// @src 0:11850:11916  \"require(from != address(0), \\\"ERC1155: burn from the zero address\\\")\"\n                        require_helper_stringliteral_87fd(/** @src 0:11858:11876  \"from != address(0)\" */ iszero(iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _75)))\n                        /// @src 0:11934:11944  \"ids.length\"\n                        let expr_9 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:11934:11944  \"ids.length\" */ value1_5)\n                        /// @src 0:11926:12007  \"require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\")\"\n                        require_helper_stringliteral_e909(/** @src 0:11934:11962  \"ids.length == amounts.length\" */ eq(expr_9, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:11948:11962  \"amounts.length\" */ value2_2)))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPtr_6 := mload(_1)\n                        finalize_allocation_32936(memPtr_6)\n                        mstore(memPtr_6, _3)\n                        /// @src 0:12142:12155  \"uint256 i = 0\"\n                        let var_i_3 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 0:12137:12501  \"for (uint256 i = 0; i < ids.length; i++) {...\"\n                        for { }\n                        /** @src 0:12142:12155  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 0:12173:12176  \"i++\"\n                            var_i_3 := increment_uint256(var_i_3)\n                        }\n                        {\n                            /// @src 0:12157:12171  \"i < ids.length\"\n                            if iszero(lt(var_i_3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 0:12161:12171  \"ids.length\" */ value1_5)))\n                            /// @src 0:12157:12171  \"i < ids.length\"\n                            { break }\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _77 := mload(/** @src 0:12205:12211  \"ids[i]\" */ memory_array_index_access_address_dyn(value1_5, var_i_3))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let _78 := mload(/** @src 0:12242:12252  \"amounts[i]\" */ memory_array_index_access_address_dyn(value2_2, var_i_3))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _77)\n                            let _79 := 0x20\n                            mstore(_79, _3)\n                            let _80 := keccak256(_3, _1)\n                            mstore(_3, _75)\n                            mstore(_79, _80)\n                            let _81 := sload(keccak256(_3, _1))\n                            /// @src 0:12322:12392  \"require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\")\"\n                            require_helper_stringliteral_294a(/** @src 0:12330:12351  \"fromBalance >= amount\" */ iszero(lt(_81, _78)))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _77)\n                            mstore(_79, _3)\n                            let _82 := keccak256(_3, _1)\n                            mstore(_3, _75)\n                            mstore(_79, _82)\n                            sstore(keccak256(_3, _1), sub(/** @src 0:12456:12476  \"fromBalance - amount\" */ _81, _78))\n                        }\n                        /// @src 0:12516:12571  \"TransferBatch(operator, from, address(0), ids, amounts)\"\n                        let _83 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        /// @src 0:12516:12571  \"TransferBatch(operator, from, address(0), ids, amounts)\"\n                        log4(_83, sub(abi_encode_array_uint256_dyn_array_uint256_dyn(_83, value1_5, value2_2), _83), 0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:12516:12571  \"TransferBatch(operator, from, address(0), ids, amounts)\" */ _75, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                        finalize_allocation_32936(mload(_1))\n                        return(_3, _3)\n                    }\n                    case 0x88a99f02 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_7, param_8 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_7)\n                        mstore(0x20, _2)\n                        let dataSlot_4 := keccak256(_3, _1)\n                        /// @src 13:666:727  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\"\n                        if iszero(lt(param_8, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 13:666:727  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\" */ dataSlot_4)))\n                        {\n                            revert(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _3)\n                        }\n                        /// @src 13:666:727  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\"\n                        let slot, offset_12 := storage_array_index_access_struct_CurrentOwner__dyn(dataSlot_4, param_8)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let cleaned_2 := and(sload(/** @src 13:666:727  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\" */ slot), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let _84 := sload(/** @src 13:666:727  \"mapping(uint256 => CurrentOwner[]) public tokenIdCurrentOwner\" */ add(slot, 1))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_address_uint256(memPos_9, cleaned_2, _84), memPos_9))\n                    }\n                    case 0x8d824273 {\n                        if callvalue() { revert(_3, _3) }\n                        let _85 := 32\n                        if slt(add(calldatasize(), not(3)), _85) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(_85, /** @src 13:5999:6012  \"initialOwners\" */ 0x03)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _86 := 1\n                        let _87 := sload(/** @src 13:5999:6023  \"initialOwners[id].amount\" */ add(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), _86))\n                        /// @src 13:6034:6060  \"uint256 realVoteNumber = 0\"\n                        let var_realVoteNumber := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        mstore(_85, /** @src 13:6096:6104  \"voteInfo\" */ 0x05)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_5 := keccak256(_3, _1)\n                        let length_2 := sload(dataSlot_5)\n                        let _88 := array_allocation_size_array_uint256_dyn(length_2)\n                        let memPtr_7 := mload(_1)\n                        finalize_allocation(memPtr_7, _88)\n                        mstore(memPtr_7, length_2)\n                        let mpos := memPtr_7\n                        mpos := add(memPtr_7, _85)\n                        mstore(_3, dataSlot_5)\n                        let spos := keccak256(_3, _85)\n                        let i_4 := _3\n                        for { } lt(i_4, length_2) { i_4 := add(i_4, _86) }\n                        {\n                            mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                            mpos := add(mpos, _85)\n                            spos := add(spos, 2)\n                        }\n                        /// @src 13:6124:6134  \"uint i = 0\"\n                        let var_i_4 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 13:6119:6225  \"for (uint i = 0; i < voteList.length; i++) {...\"\n                        for { }\n                        /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _86\n                        /// @src 13:6124:6134  \"uint i = 0\"\n                        {\n                            /// @src 13:6157:6160  \"i++\"\n                            var_i_4 := increment_uint256(var_i_4)\n                        }\n                        {\n                            /// @src 13:6136:6155  \"i < voteList.length\"\n                            if iszero(lt(var_i_4, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:6140:6155  \"voteList.length\" */ memPtr_7)))\n                            /// @src 13:6136:6155  \"i < voteList.length\"\n                            { break }\n                            /// @src 13:6177:6213  \"realVoteNumber += voteList[i].number\"\n                            var_realVoteNumber := checked_add_uint256(var_realVoteNumber, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:6195:6213  \"voteList[i].number\" */ add(/** @src 13:6195:6206  \"voteList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_7, var_i_4)), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _85)))\n                        }\n                        let memPos_10 := mload(_1)\n                        mstore(memPos_10, _87)\n                        mstore(add(memPos_10, _85), var_realVoteNumber)\n                        return(memPos_10, _1)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr_8 := mload(_1)\n                        let ret_5 := _3\n                        let slotValue_2 := sload(/** @src 13:973:993  \"string public symbol\" */ 10)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let length_3 := extract_byte_array_length(slotValue_2)\n                        mstore(memPtr_8, length_3)\n                        let _89 := 0x20\n                        let _90 := 1\n                        switch and(slotValue_2, _90)\n                        case 0 {\n                            mstore(add(memPtr_8, _89), and(slotValue_2, not(255)))\n                            ret_5 := add(add(memPtr_8, shl(5, iszero(iszero(length_3)))), _89)\n                        }\n                        case 1 {\n                            mstore(_3, /** @src 13:973:993  \"string public symbol\" */ 10)\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let dataPos_2 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let i_5 := _3\n                            for { } lt(i_5, length_3) { i_5 := add(i_5, _89) }\n                            {\n                                mstore(add(add(memPtr_8, i_5), _89), sload(dataPos_2))\n                                dataPos_2 := add(dataPos_2, _90)\n                            }\n                            ret_5 := add(add(memPtr_8, i_5), _89)\n                        }\n                        finalize_allocation(memPtr_8, sub(ret_5, memPtr_8))\n                        let memPos_11 := mload(_1)\n                        mstore(memPos_11, _89)\n                        return(memPos_11, sub(abi_encode_string(memPtr_8, add(memPos_11, _89)), memPos_11))\n                    }\n                    case 0x9eb79a75 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_9, param_10 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(_3, param_9)\n                        mstore(0x20, /** @src 13:734:776  \"mapping(uint256 => Vote[]) public voteInfo\" */ 5)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_6 := keccak256(_3, _1)\n                        /// @src 13:734:776  \"mapping(uint256 => Vote[]) public voteInfo\"\n                        if iszero(lt(param_10, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 13:734:776  \"mapping(uint256 => Vote[]) public voteInfo\" */ dataSlot_6)))\n                        {\n                            revert(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _3)\n                        }\n                        /// @src 13:734:776  \"mapping(uint256 => Vote[]) public voteInfo\"\n                        let slot_1, offset_13 := storage_array_index_access_struct_CurrentOwner__dyn(dataSlot_6, param_10)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let cleaned_3 := and(sload(/** @src 13:734:776  \"mapping(uint256 => Vote[]) public voteInfo\" */ slot_1), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        let _91 := sload(/** @src 13:734:776  \"mapping(uint256 => Vote[]) public voteInfo\" */ add(slot_1, 1))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_12 := mload(_1)\n                        return(memPos_12, sub(abi_encode_address_uint256(memPos_12, cleaned_3, _91), memPos_12))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_6 := abi_decode_address_21483()\n                        let value_5 := calldataload(36)\n                        let _92 := iszero(iszero(value_5))\n                        if iszero(eq(value_5, _92)) { revert(_3, _3) }\n                        let _93 := and(/** @src 0:12901:12918  \"owner != operator\" */ value0_6, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 0:12901:12918  \"owner != operator\" */ eq(/** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _93)\n                        {\n                            let memPtr_9 := mload(_1)\n                            mstore(memPtr_9, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(memPtr_9, _2), 32)\n                            mstore(add(memPtr_9, 36), 41)\n                            mstore(add(memPtr_9, 68), \"ERC1155: setting approval status\")\n                            mstore(add(memPtr_9, 100), \" for self\")\n                            revert(memPtr_9, 132)\n                        }\n                        mstore(_3, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(0x20, /** @src 0:12974:12992  \"_operatorApprovals\" */ 0x01)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _94 := keccak256(_3, _1)\n                        mstore(_3, _93)\n                        mstore(0x20, _94)\n                        let dataSlot_7 := keccak256(_3, _1)\n                        let value_6 := and(sload(dataSlot_7), not(255))\n                        sstore(dataSlot_7, or(value_6, and(_92, 255)))\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        let _95 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        mstore(_95, _92)\n                        /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_95, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x20, /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ _93)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xa4b645eb {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_3, _3) }\n                        let value0_7 := abi_decode_address_21483()\n                        let value_7 := calldataload(36)\n                        let value_8 := calldataload(68)\n                        let offset_14 := calldataload(100)\n                        let _96 := 0xffffffffffffffff\n                        if gt(offset_14, _96) { revert(_3, _3) }\n                        let value3_2 := abi_decode_string(add(_2, offset_14), calldatasize())\n                        let offset_15 := calldataload(132)\n                        if gt(offset_15, _96) { revert(_3, _3) }\n                        let value4_1 := abi_decode_string(add(_2, offset_15), calldatasize())\n                        let _97 := and(/** @src 0:8717:8733  \"to != address(0)\" */ value0_7, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:8709:8771  \"require(to != address(0), \\\"ERC1155: mint to the zero address\\\")\"\n                        require_helper_stringliteral_ebf0(/** @src 0:8717:8733  \"to != address(0)\" */ iszero(iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _97)))\n                        /// @src 0:8846:8867  \"_asSingletonArray(id)\"\n                        pop(fun_asSingletonArray(value_7))\n                        /// @src 0:8904:8929  \"_asSingletonArray(amount)\"\n                        pop(fun_asSingletonArray(value_8))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, value_7)\n                        let _98 := 32\n                        mstore(_98, _3)\n                        let _99 := keccak256(_3, _1)\n                        mstore(_3, _97)\n                        mstore(_98, _99)\n                        let dataSlot_8 := keccak256(_3, _1)\n                        sstore(dataSlot_8, /** @src 0:9017:9044  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:9017:9044  \"_balances[id][to] += amount\" */ dataSlot_8), value_8))\n                        /// @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\"\n                        let _100 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        mstore(_100, value_7)\n                        mstore(add(_100, _98), value_8)\n                        /// @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\"\n                        log4(_100, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1, /** @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:9059:9111  \"TransferSingle(operator, address(0), to, id, amount)\" */ _97)\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        if /** @src 5:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 5:1702:1721  \"account.code.length\" */ extcodesize(value0_7)))\n                        /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                        {\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let _101 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                            let _102 := shl(224, 0xf23a6e61)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            mstore(_101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _102)\n                            mstore(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ add(_101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _3)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), value_7)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), value_8)\n                            mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), 160)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let trySuccessCondition_2 := call(gas(), _97, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _101, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(value4_1, add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164)), /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _101), _101, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _98)\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            let expr_10 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                            /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                            if trySuccessCondition_2\n                            {\n                                let _103 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _98\n                                /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                                if gt(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _98, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ returndatasize()) { _103 := returndatasize() }\n                                finalize_allocation(_101, _103)\n                                expr_10 := abi_decode_bytes4_fromMemory(_101, add(_101, _103))\n                            }\n                            /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            switch iszero(trySuccessCondition_2)\n                            case 0 {\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                if /** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ iszero(eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ expr_10, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _102))\n                                /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                                {\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    let _104 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    mstore(_104, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                    /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                                    revert(_104, sub(abi_encode_stringliteral(add(_104, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _104))\n                                }\n                            }\n                            default /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                            {\n                                let _105 := 1\n                                if eq(147028384, return_data_selector())\n                                {\n                                    /// @src 0:15911:15992  \"catch Error(string memory reason) {...\"\n                                    let _106 := try_decode_error_message()\n                                    if _106\n                                    {\n                                        _105 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        let _107 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        mstore(_107, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                        mstore(/** @src 0:15963:15977  \"revert(reason)\" */ add(_107, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2), _98)\n                                        /// @src 0:15963:15977  \"revert(reason)\"\n                                        revert(_107, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_106, add(/** @src 0:15963:15977  \"revert(reason)\" */ _107, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:15963:15977  \"revert(reason)\" */ _107))\n                                    }\n                                }\n                                /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                                if _105\n                                {\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    let _108 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    mstore(_108, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                    /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                                    revert(_108, sub(abi_encode_stringliteral_f591(add(_108, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)), /** @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _108))\n                                }\n                            }\n                        }\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPtr_10 := mload(_1)\n                        finalize_allocation_21493(memPtr_10)\n                        mstore(memPtr_10, _97)\n                        mstore(/** @src 13:2478:2567  \"InitialOwner({...\" */ add(memPtr_10, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _98), value_8)\n                        mstore(_3, value_7)\n                        mstore(_98, /** @src 13:2578:2591  \"initialOwners\" */ 0x03)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        copy_struct_to_storage_from_struct_InitialOwner_to_struct_InitialOwner(keccak256(_3, _1), memPtr_10)\n                        let memPtr_11 := mload(_1)\n                        finalize_allocation_21493(memPtr_11)\n                        mstore(memPtr_11, _97)\n                        mstore(/** @src 13:2762:2851  \"CurrentOwner({...\" */ add(memPtr_11, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _98), value_8)\n                        mstore(_3, value_7)\n                        mstore(_98, _2)\n                        /// @src 13:2862:2909  \"tokenIdCurrentOwner[tokenId].push(currentOwner)\"\n                        array_push_from_struct_CurrentOwner_to_array_struct_CurrentOwner_storage_dyn_ptr(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), /** @src 13:2862:2909  \"tokenIdCurrentOwner[tokenId].push(currentOwner)\" */ memPtr_11)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, value_7)\n                        mstore(_98, /** @src 13:1919:1924  \"_uris\" */ 0x08)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_9 := keccak256(_3, _1)\n                        let newLen_2 := mload(value3_2)\n                        if gt(newLen_2, _96)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        let _109 := extract_byte_array_length(sload(dataSlot_9))\n                        if gt(_109, 31)\n                        {\n                            mstore(_3, dataSlot_9)\n                            let data_1 := keccak256(_3, _98)\n                            let deleteStart_2 := add(data_1, shr(5, add(newLen_2, 31)))\n                            if lt(newLen_2, _98) { deleteStart_2 := data_1 }\n                            let _110 := add(data_1, shr(5, add(_109, 31)))\n                            let start_2 := deleteStart_2\n                            for { } lt(start_2, _110) { start_2 := add(start_2, 1) }\n                            { sstore(start_2, _3) }\n                        }\n                        let srcOffset_2 := _3\n                        srcOffset_2 := _98\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd_2 := and(newLen_2, not(31))\n                            mstore(_3, dataSlot_9)\n                            let dstPtr_2 := keccak256(_3, _98)\n                            let i_6 := _3\n                            for { } lt(i_6, loopEnd_2) { i_6 := add(i_6, _98) }\n                            {\n                                sstore(dstPtr_2, mload(add(value3_2, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, 1)\n                                srcOffset_2 := add(srcOffset_2, _98)\n                            }\n                            if lt(loopEnd_2, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(value3_2, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(/** @src 13:2578:2591  \"initialOwners\" */ 0x03, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ newLen_2), 248), not(0)))))\n                            }\n                            sstore(dataSlot_9, add(shl(1, newLen_2), 1))\n                        }\n                        default {\n                            let value_9 := _3\n                            if newLen_2\n                            {\n                                value_9 := mload(add(value3_2, srcOffset_2))\n                            }\n                            sstore(dataSlot_9, or(and(value_9, not(shr(shl(/** @src 13:2578:2591  \"initialOwners\" */ 0x03, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ newLen_2), not(0)))), shl(1, newLen_2)))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0xb50fd9f7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let value0_8 := abi_decode_address_21483()\n                        let offset_16 := calldataload(68)\n                        let _111 := 0xffffffffffffffff\n                        if gt(offset_16, _111) { revert(_3, _3) }\n                        let value2_3, value3_3 := abi_decode_bytes_calldata(add(_2, offset_16), calldatasize())\n                        let offset_17 := calldataload(100)\n                        if gt(offset_17, _111) { revert(_3, _3) }\n                        let value4_2 := abi_decode_string(add(_2, offset_17), calldatasize())\n                        /// @src 13:7761:7790  \"getHash(sender, nonce, _data)\"\n                        let _112 := fun_getHash(value0_8, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ calldataload(36), /** @src 13:7761:7790  \"getHash(sender, nonce, _data)\" */ value2_3, value3_3)\n                        /// @src 8:7353:7510  \"assembly {...\"\n                        mstore(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 8:7353:7510  \"assembly {...\" */ \"\\x19Ethereum Signed Message:\\n32\")\n                        mstore(0x1c, _112)\n                        let var_message := keccak256(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, /** @src 8:7353:7510  \"assembly {...\" */ 0x3c)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, var_message)\n                        mstore(32, /** @src 13:7954:7962  \"executed\" */ 0x06)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        if iszero(/** @src 13:7953:7981  \"!executed[signedMessageHash]\" */ iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(_3, _1)), 0xff)))\n                        {\n                            let memPtr_12 := mload(_1)\n                            mstore(memPtr_12, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(memPtr_12, _2), 32)\n                            mstore(add(memPtr_12, 36), 17)\n                            mstore(add(memPtr_12, 68), \"Already executed!\")\n                            revert(memPtr_12, 100)\n                        }\n                        /// @src 8:3800:3827  \"tryRecover(hash, signature)\"\n                        let expr_component, expr_component_1 := fun_tryRecover_2150(var_message, value4_2)\n                        /// @src 8:3849:3854  \"error\"\n                        fun_throwError(expr_component_1)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPos_13 := mload(_1)\n                        mstore(memPos_13, and(expr_component, sub(shl(160, 1), 1)))\n                        return(memPos_13, 32)\n                    }\n                    case 0xc18dfec3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_9 := abi_decode_address_21483()\n                        /// @src 13:5663:5667  \"true\"\n                        fun_setApprovalForAll(value0_9, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_decode_address())\n                        return(_3, _3)\n                    }\n                    case 0xc2f1eafd {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_10 := abi_decode_address_21483()\n                        let value1_6 := abi_decode_address()\n                        let value_10 := calldataload(68)\n                        /// @src 13:5170:5191  \"balanceOf(_voter, id)\"\n                        let expr_11 := fun_balanceOf(value0_10, value_10)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPtr_13 := mload(_1)\n                        finalize_allocation_21493(memPtr_13)\n                        mstore(memPtr_13, and(value0_10, sub(shl(160, 1), 1)))\n                        mstore(/** @src 13:5224:5305  \"Vote({...\" */ add(memPtr_13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32), expr_11)\n                        mstore(_3, value_10)\n                        mstore(32, /** @src 13:5316:5324  \"voteInfo\" */ 0x05)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_10 := keccak256(_3, _1)\n                        let oldLen := sload(dataSlot_10)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        sstore(dataSlot_10, add(oldLen, 1))\n                        let slot_2, offset_18 := storage_array_index_access_struct_CurrentOwner__dyn(dataSlot_10, oldLen)\n                        update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(slot_2, offset_18, memPtr_13)\n                        /// @src 13:5390:5394  \"true\"\n                        fun_setApprovalForAll(value0_10, value1_6)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xd0e30db0 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        return(_3, _3)\n                    }\n                    case 0xdaddb9c8 {\n                        if callvalue() { revert(_3, _3) }\n                        let _113 := 32\n                        if slt(add(calldatasize(), not(3)), _113) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(_113, /** @src 13:6369:6382  \"initialOwners\" */ 0x03)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _114 := 1\n                        let _115 := sload(/** @src 13:6369:6393  \"initialOwners[id].amount\" */ add(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ keccak256(_3, _1), _114))\n                        /// @src 13:6441:6460  \"bool result = false\"\n                        let var_result := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 13:6404:6430  \"uint256 realVoteNumber = 0\"\n                        let var_realVoteNumber_1 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        mstore(_113, /** @src 13:6496:6504  \"voteInfo\" */ 0x05)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let dataSlot_11 := keccak256(_3, _1)\n                        let length_4 := sload(dataSlot_11)\n                        let _116 := array_allocation_size_array_uint256_dyn(length_4)\n                        let memPtr_14 := mload(_1)\n                        finalize_allocation(memPtr_14, _116)\n                        mstore(memPtr_14, length_4)\n                        let mpos_1 := memPtr_14\n                        mpos_1 := add(memPtr_14, _113)\n                        mstore(_3, dataSlot_11)\n                        let spos_1 := keccak256(_3, _113)\n                        let i_7 := _3\n                        for { } lt(i_7, length_4) { i_7 := add(i_7, _114) }\n                        {\n                            mstore(mpos_1, read_from_storage_reference_type_struct_CurrentOwner(spos_1))\n                            mpos_1 := add(mpos_1, _113)\n                            spos_1 := add(spos_1, 2)\n                        }\n                        /// @src 13:6524:6534  \"uint i = 0\"\n                        let var_i_5 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 13:6519:6625  \"for (uint i = 0; i < voteList.length; i++) {...\"\n                        for { }\n                        /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _114\n                        /// @src 13:6524:6534  \"uint i = 0\"\n                        {\n                            /// @src 13:6557:6560  \"i++\"\n                            var_i_5 := increment_uint256(var_i_5)\n                        }\n                        {\n                            /// @src 13:6536:6555  \"i < voteList.length\"\n                            if iszero(lt(var_i_5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:6540:6555  \"voteList.length\" */ memPtr_14)))\n                            /// @src 13:6536:6555  \"i < voteList.length\"\n                            { break }\n                            /// @src 13:6577:6613  \"realVoteNumber += voteList[i].number\"\n                            var_realVoteNumber_1 := checked_add_uint256(var_realVoteNumber_1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:6595:6613  \"voteList[i].number\" */ add(/** @src 13:6595:6606  \"voteList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_14, var_i_5)), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _113)))\n                        }\n                        /// @src 13:6759:6773  \"per > standard\"\n                        let expr_12 := gt(/** @src 13:6649:6689  \"calculatePercentage(realVoteNumber, all)\" */ fun_calculatePercentage(var_realVoteNumber_1, _115), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 66)\n                        /// @src 13:6755:6815  \"if (per > standard) {...\"\n                        if expr_12\n                        {\n                            /// @src 13:6790:6803  \"result = true\"\n                            var_result := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _114\n                        }\n                        /// @src 13:6825:6887  \"if (per <= standard) {...\"\n                        if /** @src 13:6829:6844  \"per <= standard\" */ iszero(expr_12)\n                        /// @src 13:6825:6887  \"if (per <= standard) {...\"\n                        {\n                            /// @src 13:6861:6875  \"result = false\"\n                            var_result := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        }\n                        let memPos_14 := mload(_1)\n                        mstore(memPos_14, iszero(iszero(var_result)))\n                        return(memPos_14, _113)\n                    }\n                    case 0xe2314541 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_11 := abi_decode_address_21483()\n                        let offset_19 := calldataload(68)\n                        if gt(offset_19, 0xffffffffffffffff) { revert(_3, _3) }\n                        let value2_4, value3_4 := abi_decode_bytes_calldata(add(_2, offset_19), calldatasize())\n                        let ret_6 := fun_getHash(value0_11, calldataload(36), value2_4, value3_4)\n                        let memPos_15 := mload(_1)\n                        mstore(memPos_15, ret_6)\n                        return(memPos_15, 32)\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_12 := abi_decode_address_21483()\n                        let value1_7 := abi_decode_address()\n                        let _117 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_12, _117))\n                        mstore(32, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let _118 := keccak256(_3, _1)\n                        mstore(_3, and(value1_7, _117))\n                        mstore(32, _118)\n                        let value_11 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_16 := mload(_1)\n                        mstore(memPos_16, iszero(iszero(value_11)))\n                        return(memPos_16, 32)\n                    }\n                    case 0xf242432a {\n                        if callvalue() { revert(_3, _3) }\n                        let param_11, param_12, param_13, param_14, param_15 := abi_decode_addresst_addresst_uint256t_uint256t_bytes(calldatasize())\n                        fun_safeTransferFrom(param_11, param_12, param_13, param_14, param_15)\n                        return(_3, _3)\n                    }\n                    case 0xf3fef3a3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value_12 := calldataload(_2)\n                        let _119 := and(value_12, sub(shl(160, 1), 1))\n                        if iszero(eq(value_12, _119)) { revert(_3, _3) }\n                        let value_13 := calldataload(36)\n                        if iszero(/** @src 13:7391:7423  \"contractAddress.balance > amount\" */ gt(/** @src 13:7391:7414  \"contractAddress.balance\" */ selfbalance(), /** @src 13:7391:7423  \"contractAddress.balance > amount\" */ value_13))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        {\n                            let memPtr_15 := mload(_1)\n                            mstore(memPtr_15, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(add(memPtr_15, _2), 32)\n                            mstore(add(memPtr_15, 36), 23)\n                            mstore(add(memPtr_15, 68), \"less amount to withdraw\")\n                            revert(memPtr_15, 100)\n                        }\n                        /// @src 13:7462:7482  \"rec.transfer(amount)\"\n                        let _120 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3\n                        /// @src 13:7462:7482  \"rec.transfer(amount)\"\n                        if iszero(value_13) { _120 := 2300 }\n                        if iszero(call(_120, _119, value_13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _3, _3, _3))\n                        /// @src 13:7462:7482  \"rec.transfer(amount)\"\n                        {\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        return(_3, _3)\n                    }\n                    case 0xf5298aca {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_13 := abi_decode_address_21483()\n                        let value_14 := calldataload(36)\n                        let value_15 := calldataload(68)\n                        let _121 := and(/** @src 3:512:535  \"account == _msgSender()\" */ value0_13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:512:578  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        let expr_13 := /** @src 3:512:535  \"account == _msgSender()\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _121, /** @src 6:719:729  \"msg.sender\" */ caller())\n                        /// @src 3:512:578  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                        if iszero(expr_13)\n                        {\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(_3, _121)\n                            mstore(32, 1)\n                            let _122 := keccak256(_3, _1)\n                            mstore(_3, /** @src 6:719:729  \"msg.sender\" */ caller())\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(32, _122)\n                            /// @src 3:512:578  \"account == _msgSender() || isApprovedForAll(account, _msgSender())\"\n                            expr_13 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(_3, _1)), 0xff)\n                        }\n                        /// @src 3:491:650  \"require(...\"\n                        require_helper_stringliteral_47c7(expr_13)\n                        /// @src 0:10830:10896  \"require(from != address(0), \\\"ERC1155: burn from the zero address\\\")\"\n                        require_helper_stringliteral_87fd(/** @src 0:10838:10856  \"from != address(0)\" */ iszero(iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _121)))\n                        /// @src 0:10971:10992  \"_asSingletonArray(id)\"\n                        pop(fun_asSingletonArray(value_14))\n                        /// @src 0:11029:11054  \"_asSingletonArray(amount)\"\n                        pop(fun_asSingletonArray(value_15))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        let memPtr_16 := mload(_1)\n                        finalize_allocation_32936(memPtr_16)\n                        mstore(memPtr_16, _3)\n                        mstore(_3, value_14)\n                        mstore(0x20, _3)\n                        let _123 := keccak256(_3, _1)\n                        mstore(_3, _121)\n                        mstore(0x20, _123)\n                        let _124 := sload(keccak256(_3, _1))\n                        /// @src 0:11193:11263  \"require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\")\"\n                        require_helper_stringliteral_294a(/** @src 0:11201:11222  \"fromBalance >= amount\" */ iszero(lt(_124, value_15)))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(_3, value_14)\n                        mstore(0x20, _3)\n                        let _125 := keccak256(_3, _1)\n                        mstore(_3, _121)\n                        mstore(0x20, _125)\n                        sstore(keccak256(_3, _1), sub(/** @src 0:11319:11339  \"fromBalance - amount\" */ _124, value_15))\n                        /// @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\"\n                        let _126 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_1)\n                        mstore(_126, value_14)\n                        mstore(add(_126, 0x20), value_15)\n                        /// @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\"\n                        log4(_126, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1, /** @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:11365:11419  \"TransferSingle(operator, from, address(0), id, amount)\" */ _121, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                        finalize_allocation_32936(mload(_1))\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_21483() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_21493(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_32936(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                array := memPtr\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_uint256_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_uint256_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_decode_addresst_addresst_uint256t_uint256t_bytes(dataEnd) -> value0, value1, value2, value3, value4\n            {\n                if slt(add(dataEnd, not(3)), 160) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n                value3 := calldataload(100)\n                let offset := calldataload(132)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value4 := abi_decode_string(add(4, offset), dataEnd)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function storage_array_index_access_struct_CurrentOwner__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x20)\n                slot := add(data, shl(1, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            /// @ast-id 115 @src 0:2185:2412  \"function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account, var_id) -> var\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := and(/** @src 0:2298:2319  \"account != address(0)\" */ var_account, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1))\n                if /** @src 0:2298:2319  \"account != address(0)\" */ iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: address zero is not a v\")\n                    mstore(add(memPtr, 100), \"alid owner\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(0x20, /** @src 0:2317:2318  \"0\" */ 0x00)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _2 := keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                mstore(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                mstore(0x20, _2)\n                /// @src 0:2376:2405  \"return _balances[id][account]\"\n                var := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(keccak256(/** @src 0:2317:2318  \"0\" */ 0x00, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function require_helper_stringliteral_47c7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC1155: caller is not token own\")\n                    mstore(add(memPtr, 100), \"er or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 252 @src 0:3576:3970  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_id, var_amount, var_data_mpos)\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:3776:3796  \"from == _msgSender()\" */ var_from, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                let expr := /** @src 0:3776:3796  \"from == _msgSender()\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2, /** @src 6:719:729  \"msg.sender\" */ caller())\n                /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                if iszero(expr)\n                {\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                    mstore(0x20, /** @src 0:3465:3483  \"_operatorApprovals\" */ 0x01)\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:719:729  \"msg.sender\" */ caller())\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(0x20, _3)\n                    /// @src 0:3776:3836  \"from == _msgSender() || isApprovedForAll(from, _msgSender())\"\n                    expr := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)), 0xff)\n                }\n                /// @src 0:3755:3908  \"require(...\"\n                require_helper_stringliteral_47c7(expr)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _4 := and(/** @src 0:5099:5115  \"to != address(0)\" */ var_to, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                /// @src 0:5091:5157  \"require(to != address(0), \\\"ERC1155: transfer to the zero address\\\")\"\n                require_helper_stringliteral_6faf(/** @src 0:5099:5115  \"to != address(0)\" */ iszero(iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)))\n                /// @src 0:5232:5253  \"_asSingletonArray(id)\"\n                pop(fun_asSingletonArray(var_id))\n                /// @src 0:5290:5315  \"_asSingletonArray(amount)\"\n                pop(fun_asSingletonArray(var_amount))\n                /// @src 0:5113:5114  \"0\"\n                let _5 := 0x00\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                let _6 := 0x20\n                mstore(_6, /** @src 0:5113:5114  \"0\" */ _5)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _7 := 0x40\n                let _8 := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                mstore(_6, _8)\n                let _9 := sload(keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7))\n                /// @src 0:5448:5524  \"require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\")\"\n                require_helper_stringliteral_8ac7(/** @src 0:5456:5477  \"fromBalance >= amount\" */ iszero(lt(_9, var_amount)))\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(_6, /** @src 0:5113:5114  \"0\" */ _5)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _10 := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                mstore(_6, _10)\n                sstore(keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7), sub(/** @src 0:5580:5600  \"fromBalance - amount\" */ _9, var_amount))\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_id)\n                mstore(_6, /** @src 0:5113:5114  \"0\" */ _5)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _11 := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                mstore(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                mstore(_6, _11)\n                let dataSlot := keccak256(/** @src 0:5113:5114  \"0\" */ _5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7)\n                sstore(dataSlot, /** @src 0:5620:5647  \"_balances[id][to] += amount\" */ checked_add_uint256(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sload(/** @src 0:5620:5647  \"_balances[id][to] += amount\" */ dataSlot), var_amount))\n                /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                let _12 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                mstore(_12, var_id)\n                mstore(add(_12, _6), var_amount)\n                /// @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\"\n                log4(_12, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _7, /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ 0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62, /** @src 6:719:729  \"msg.sender\" */ caller(), /** @src 0:5663:5709  \"TransferSingle(operator, from, to, id, amount)\" */ _2, _4)\n                /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                if /** @src 5:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 5:1702:1721  \"account.code.length\" */ extcodesize(var_to)))\n                /// @src 0:15588:16104  \"if (to.isContract()) {...\"\n                {\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    let _13 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                    let _14 := shl(224, 0xf23a6e61)\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    mstore(_13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _14)\n                    mstore(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ add(_13, 4), /** @src 6:719:729  \"msg.sender\" */ caller())\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), _2)\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), var_id)\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), var_amount)\n                    mstore(add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132), 160)\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    let trySuccessCondition := call(gas(), _4, /** @src 0:5113:5114  \"0\" */ _5, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(var_data_mpos, add(/** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 164)), /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ _13), _13, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6)\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    let expr_1 := /** @src 0:5113:5114  \"0\" */ _5\n                    /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                    if trySuccessCondition\n                    {\n                        let _15 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6\n                        /// @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\"\n                        if gt(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ returndatasize()) { _15 := returndatasize() }\n                        finalize_allocation(_13, _15)\n                        expr_1 := abi_decode_bytes4_fromMemory(_13, add(_13, _15))\n                    }\n                    /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                        if /** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ iszero(eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 0:15748:15803  \"response != IERC1155Receiver.onERC1155Received.selector\" */ expr_1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0xffffffff)), _14))\n                        /// @src 0:15744:15896  \"if (response != IERC1155Receiver.onERC1155Received.selector) {...\"\n                        {\n                            /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                            let _16 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                            /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                            mstore(_16, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                            /// @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\"\n                            revert(_16, sub(abi_encode_stringliteral(add(_16, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ 4)), /** @src 0:15827:15877  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ _16))\n                        }\n                    }\n                    default /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                    {\n                        let _17 := 1\n                        if eq(147028384, return_data_selector())\n                        {\n                            /// @src 0:15911:15992  \"catch Error(string memory reason) {...\"\n                            let _18 := try_decode_error_message()\n                            if _18\n                            {\n                                _17 := /** @src 0:5113:5114  \"0\" */ _5\n                                /// @src 0:15963:15977  \"revert(reason)\"\n                                let _19 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                                /// @src 0:15963:15977  \"revert(reason)\"\n                                mstore(_19, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                mstore(/** @src 0:15963:15977  \"revert(reason)\" */ add(_19, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ 4), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _6)\n                                /// @src 0:15963:15977  \"revert(reason)\"\n                                revert(_19, sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ abi_encode_string(_18, add(/** @src 0:15963:15977  \"revert(reason)\" */ _19, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36)), /** @src 0:15963:15977  \"revert(reason)\" */ _19))\n                            }\n                        }\n                        /// @src 0:15623:16094  \"try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {...\"\n                        if _17\n                        {\n                            /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                            let _20 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(_7)\n                            /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                            mstore(_20, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                            /// @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\"\n                            revert(_20, sub(abi_encode_stringliteral_f591(add(_20, /** @src 0:15627:15699  \"IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data)\" */ 4)), /** @src 0:16017:16079  \"revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\")\" */ _20))\n                        }\n                    }\n                }\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function require_helper_stringliteral_6faf(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC1155: transfer to the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_8ac7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 42)\n                    mstore(add(memPtr, 68), \"ERC1155: insufficient balance fo\")\n                    mstore(add(memPtr, 100), \"r transfer\")\n                    revert(memPtr, 132)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral_e909(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 40)\n                    mstore(add(memPtr, 68), \"ERC1155: ids and amounts length \")\n                    mstore(add(memPtr, 100), \"mismatch\")\n                    revert(memPtr, 132)\n                }\n            }\n            function abi_encode_array_uint256_dyn_array_uint256_dyn(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                tail := abi_encode_array_uint256_dyn(value1, tail_1)\n            }\n            /// @ast-id 1027 @src 0:12790:13083  \"function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {...\"\n            function fun_setApprovalForAll(var_owner, var_operator)\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:12901:12918  \"owner != operator\" */ var_operator, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                let _3 := and(/** @src 0:12901:12918  \"owner != operator\" */ var_owner, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1)\n                if /** @src 0:12901:12918  \"owner != operator\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3, _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC1155: setting approval status\")\n                    mstore(add(memPtr, 100), \" for self\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                mstore(0x20, /** @src 13:5663:5667  \"true\" */ 0x01)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                mstore(0x20, _4)\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 13:5663:5667  \"true\" */ 0x01))\n                /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                let _5 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(0x40)\n                mstore(_5, /** @src 13:5663:5667  \"true\" */ 0x01)\n                /// @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_5, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x20, /** @src 0:13035:13076  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, _3, _2)\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                value0 := value\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 40)\n                mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n                mstore(add(headStart, 96), \"d tokens\")\n                tail := add(headStart, 128)\n            }\n            function return_data_selector() -> sig\n            {\n                if gt(returndatasize(), 3)\n                {\n                    returndatacopy(0, 0, 4)\n                    sig := shr(224, mload(0))\n                }\n            }\n            function try_decode_error_message() -> ret\n            {\n                if lt(returndatasize(), 0x44) { leave }\n                let data := mload(64)\n                let _1 := not(3)\n                returndatacopy(data, 4, add(returndatasize(), _1))\n                let offset := mload(data)\n                let _2 := returndatasize()\n                let _3 := 0xffffffffffffffff\n                if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n                let msg := add(data, offset)\n                let length := mload(msg)\n                if gt(length, _3) { leave }\n                if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n                finalize_allocation(data, add(add(offset, length), 0x20))\n                ret := msg\n            }\n            function abi_encode_stringliteral_f591(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 52)\n                mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n                mstore(add(headStart, 96), \"Receiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1221 @src 0:16914:17107  \"function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {...\"\n            function fun_asSingletonArray(var_element) -> var_mpos\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_21493(memPtr)\n                mstore(memPtr, /** @src 0:17047:17048  \"1\" */ 0x01)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataStart := add(memPtr, 32)\n                calldatacopy(dataStart, calldatasize(), 32)\n                if iszero(mload(memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n                }\n                mstore(/** @src 0:17059:17077  \"array[0] = element\" */ dataStart, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_element)\n                /// @src 0:17088:17100  \"return array\"\n                var_mpos := memPtr\n            }\n            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n            function require_helper_stringliteral_87fd(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC1155: burn from the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_294a(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC1155: burn amount exceeds bal\")\n                    mstore(add(memPtr, 100), \"ance\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_ebf0(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC1155: mint to the zero addres\")\n                    mstore(add(memPtr, 100), \"s\")\n                    revert(memPtr, 132)\n                }\n            }\n            function copy_struct_to_storage_from_struct_InitialOwner_to_struct_InitialOwner(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(mload(value), sub(shl(160, 1), 1))))\n                sstore(add(slot, 1), mload(add(value, 32)))\n            }\n            function update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(slot, offset, value)\n            {\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                copy_struct_to_storage_from_struct_InitialOwner_to_struct_InitialOwner(slot, value)\n            }\n            function array_push_from_struct_CurrentOwner_to_array_struct_CurrentOwner_storage_dyn_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_CurrentOwner__dyn(array, oldLen)\n                update_storage_value_struct_CurrentOwner_to_struct_CurrentOwner(slot, offset, value0)\n            }\n            function read_from_storage_reference_type_struct_CurrentOwner(slot) -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation_21493(memPtr)\n                value := memPtr\n                mstore(memPtr, and(sload(slot), sub(shl(160, 1), 1)))\n                mstore(add(memPtr, 32), sload(add(slot, 1)))\n            }\n            /// @ast-id 3819 @src 13:3855:4193  \"function getShareExit(uint256 _tokenId, address owner) internal view returns (bool){...\"\n            function fun_getShareExit(var_tokenId, var_owner) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_tokenId)\n                let _2 := 0x20\n                mstore(_2, /** @src 13:3980:3999  \"tokenIdCurrentOwner\" */ 0x04)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x40)\n                let length := sload(dataSlot)\n                let _3 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr := mload(0x40)\n                finalize_allocation(memPtr, _3)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                mpos := add(memPtr, _2)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ dataSlot)\n                let spos := keccak256(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                let i := /** @src -1:-1:-1 */ _1\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 2)\n                }\n                /// @src 13:4025:4035  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 13:4020:4163  \"for (uint i = 0; i < shares.length; i++) {...\"\n                for { }\n                /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                /// @src 13:4025:4035  \"uint i = 0\"\n                {\n                    /// @src 13:4056:4059  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 13:4037:4054  \"i < shares.length\"\n                    if iszero(lt(var_i, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:4041:4054  \"shares.length\" */ memPtr)))\n                    /// @src 13:4037:4054  \"i < shares.length\"\n                    { break }\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _4 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 13:4080:4089  \"shares[i]\" */ mload(memory_array_index_access_address_dyn(memPtr, var_i))), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                    /// @src 13:4076:4152  \"if (shares[i].owner == owner) {...\"\n                    if /** @src 13:4080:4104  \"shares[i].owner == owner\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 13:4080:4104  \"shares[i].owner == owner\" */ var_owner, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4))\n                    /// @src 13:4076:4152  \"if (shares[i].owner == owner) {...\"\n                    {\n                        /// @src 13:4125:4136  \"return true\"\n                        var := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                        /// @src 13:4125:4136  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 13:4173:4185  \"return false\"\n                var := /** @src -1:-1:-1 */ _1\n            }\n            /// @ast-id 3874 @src 13:4201:4642  \"function getShareEntity(uint256 _tokenId, address owner) internal view returns (CurrentOwner memory){...\"\n            function fun_getShareEntity(var__tokenId, var_owner) -> var_3827_mpos\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_21493(memPtr)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(memPtr, /** @src -1:-1:-1 */ _1)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let _2 := 32\n                mstore(add(memPtr, _2), /** @src -1:-1:-1 */ _1)\n                /// @src 13:4312:4338  \"CurrentOwner  memory share\"\n                let var_share_mpos := /** @src -1:-1:-1 */ _1\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_21493(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ _1)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(add(memPtr_1, _2), /** @src -1:-1:-1 */ _1)\n                /// @src 13:4312:4338  \"CurrentOwner  memory share\"\n                var_share_mpos := memPtr_1\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var__tokenId)\n                mstore(_2, /** @src 13:4383:4402  \"tokenIdCurrentOwner\" */ 0x04)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 64)\n                let length := sload(dataSlot)\n                let _3 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr_2 := mload(64)\n                finalize_allocation(memPtr_2, _3)\n                mstore(memPtr_2, length)\n                let mpos := memPtr_2\n                mpos := add(memPtr_2, _2)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ dataSlot)\n                let spos := keccak256(/** @src -1:-1:-1 */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2)\n                let i := /** @src -1:-1:-1 */ _1\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 2)\n                }\n                /// @src 13:4428:4438  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 13:4423:4612  \"for (uint i = 0; i < shareList.length; i++) {...\"\n                for { }\n                /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                /// @src 13:4428:4438  \"uint i = 0\"\n                {\n                    /// @src 13:4462:4465  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 13:4440:4460  \"i < shareList.length\"\n                    if iszero(lt(var_i, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:4444:4460  \"shareList.length\" */ memPtr_2)))\n                    /// @src 13:4440:4460  \"i < shareList.length\"\n                    { break }\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _4 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 13:4486:4498  \"shareList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_2, var_i))), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4)\n                    /// @src 13:4482:4601  \"if (shareList[i].owner == owner) {...\"\n                    if /** @src 13:4486:4513  \"shareList[i].owner == owner\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 13:4486:4513  \"shareList[i].owner == owner\" */ var_owner, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _4))\n                    /// @src 13:4482:4601  \"if (shareList[i].owner == owner) {...\"\n                    {\n                        /// @src 13:4534:4554  \"share = shareList[i]\"\n                        var_share_mpos := /** @src 13:4542:4554  \"shareList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr_2, var_i))\n                        /// @src 13:4573:4585  \"return share\"\n                        var_3827_mpos := var_share_mpos\n                        leave\n                    }\n                }\n                /// @src 13:4622:4634  \"return share\"\n                var_3827_mpos := var_share_mpos\n            }\n            /// @ast-id 3925 @src 13:4650:5059  \"function getShareArrayIndex(uint256 _tokenId, address owner) internal view returns (uint256){...\"\n            function fun_getShareArrayIndex(var_tokenId, var_owner) -> var\n            {\n                /// @src 13:4753:4766  \"uint256 index\"\n                let var_index := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0\n                mstore(var_index, var_tokenId)\n                let _1 := 0x20\n                mstore(_1, /** @src 13:4811:4830  \"tokenIdCurrentOwner\" */ 0x04)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                let dataSlot := keccak256(var_index, 0x40)\n                let length := sload(dataSlot)\n                let _2 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr := mload(0x40)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                mpos := add(memPtr, _1)\n                mstore(var_index, dataSlot)\n                let spos := keccak256(var_index, _1)\n                let i := var_index\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, read_from_storage_reference_type_struct_CurrentOwner(spos))\n                    mpos := add(mpos, _1)\n                    spos := add(spos, 2)\n                }\n                /// @src 13:4856:4866  \"uint i = 0\"\n                let var_i := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_index\n                /// @src 13:4851:5029  \"for (uint i = 0; i < shareList.length; i++) {...\"\n                for { }\n                /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1\n                /// @src 13:4856:4866  \"uint i = 0\"\n                {\n                    /// @src 13:4890:4893  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 13:4868:4888  \"i < shareList.length\"\n                    if iszero(lt(var_i, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 13:4872:4888  \"shareList.length\" */ memPtr)))\n                    /// @src 13:4868:4888  \"i < shareList.length\"\n                    { break }\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let _3 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 13:4914:4926  \"shareList[i]\" */ mload(memory_array_index_access_address_dyn(memPtr, var_i))), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3)\n                    /// @src 13:4910:5018  \"if (shareList[i].owner == owner) {...\"\n                    if /** @src 13:4914:4941  \"shareList[i].owner == owner\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ cleaned, and(/** @src 13:4914:4941  \"shareList[i].owner == owner\" */ var_owner, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _3))\n                    /// @src 13:4910:5018  \"if (shareList[i].owner == owner) {...\"\n                    {\n                        /// @src 13:4962:4971  \"index = i\"\n                        var_index := var_i\n                        /// @src 13:4990:5002  \"return index\"\n                        var := var_i\n                        leave\n                    }\n                }\n                /// @src 13:5039:5051  \"return index\"\n                var := var_index\n            }\n            /// @ast-id 4160 @src 13:6926:7200  \"function calculatePercentage(uint256 numerator, uint256 denominator) public pure returns (uint256) {...\"\n            function fun_calculatePercentage(var_numerator, var_denominator) -> var\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if /** @src 13:7044:7060  \"denominator != 0\" */ iszero(var_denominator)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"Denominator must be a non-zero v\")\n                    mstore(add(memPtr, 100), \"alue\")\n                    revert(memPtr, 132)\n                }\n                let product := mul(var_numerator, /** @src 13:7146:7149  \"100\" */ 0x64)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if iszero(or(iszero(var_numerator), eq(/** @src 13:7146:7149  \"100\" */ 0x64, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ div(product, var_numerator))))\n                {\n                    mstore(/** @src 13:7059:7060  \"0\" */ 0x00, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src 13:7059:7060  \"0\" */ 0x00, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n                }\n                /// @src 13:7175:7192  \"return percentage\"\n                var := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ div(product, var_denominator)\n            }\n            /// @ast-id 2104 @src 8:570:1081  \"function _throwError(RecoverError error) private pure {...\"\n            function fun_throwError(var_error)\n            {\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                if iszero(lt(var_error, 5))\n                {\n                    mstore(/** @src 8:647:667  \"RecoverError.NoError\" */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src 8:647:667  \"RecoverError.NoError\" */ 0, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 0x24)\n                }\n                /// @src 8:634:1075  \"if (error == RecoverError.NoError) {...\"\n                switch /** @src 8:638:667  \"error == RecoverError.NoError\" */ iszero(var_error)\n                case /** @src 8:634:1075  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                    /// @src 8:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    switch /** @src 8:734:772  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 1)\n                    case /** @src 8:730:1075  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                        /// @src 8:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        switch /** @src 8:843:887  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 8:852:887  \"RecoverError.InvalidSignatureLength\" */ 2)\n                        case /** @src 8:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                            /// @src 8:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            if /** @src 8:965:1004  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 8:974:1004  \"RecoverError.InvalidSignatureS\" */ 3)\n                            /// @src 8:961:1075  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            {\n                                /// @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                let _1 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(64)\n                                /// @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                mstore(_1, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                                mstore(/** @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ add(_1, 4), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                                mstore(add(/** @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), 34)\n                                mstore(add(/** @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), \"ECDSA: invalid signature 's' val\")\n                                mstore(add(/** @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\" */ _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100), \"ue\")\n                                /// @src 8:1020:1064  \"revert(\\\"ECDSA: invalid signature 's' value\\\")\"\n                                revert(_1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 132)\n                            }\n                        }\n                        default /// @src 8:839:1075  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        {\n                            /// @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            let _2 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(64)\n                            /// @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            mstore(_2, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                            /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                            mstore(/** @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\" */ add(_2, 4), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                            mstore(add(/** @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\" */ _2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), 31)\n                            mstore(add(/** @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\" */ _2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), \"ECDSA: invalid signature length\")\n                            /// @src 8:903:944  \"revert(\\\"ECDSA: invalid signature length\\\")\"\n                            revert(_2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100)\n                        }\n                    }\n                    default /// @src 8:730:1075  \"if (error == RecoverError.InvalidSignature) {...\"\n                    {\n                        /// @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        let _3 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(64)\n                        /// @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        mstore(_3, /** @src 0:16625:16675  \"revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\")\" */ shl(229, 4594637))\n                        /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                        mstore(/** @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\" */ add(_3, 4), /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32)\n                        mstore(add(/** @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\" */ _3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 36), 24)\n                        mstore(add(/** @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\" */ _3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 68), \"ECDSA: invalid signature\")\n                        /// @src 8:788:822  \"revert(\\\"ECDSA: invalid signature\\\")\"\n                        revert(_3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 100)\n                    }\n                }\n                default /// @src 8:634:1075  \"if (error == RecoverError.NoError) {...\"\n                {\n                    /// @src 8:683:690  \"return;\"\n                    leave\n                }\n            }\n            /// @ast-id 2150 @src 8:2145:2875  \"function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {...\"\n            function fun_tryRecover_2150(var_hash, var_signature_mpos) -> var_, var\n            {\n                /// @src 8:2259:2869  \"if (signature.length == 65) {...\"\n                switch /** @src 8:2263:2285  \"signature.length == 65\" */ eq(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(/** @src 8:2263:2279  \"signature.length\" */ var_signature_mpos), /** @src 8:2283:2285  \"65\" */ 0x41)\n                case /** @src 8:2259:2869  \"if (signature.length == 65) {...\" */ 0 {\n                    /// @src 8:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    var_ := /** @src 8:2818:2819  \"0\" */ 0x00\n                    /// @src 8:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    var := /** @src 8:2822:2857  \"RecoverError.InvalidSignatureLength\" */ 2\n                    /// @src 8:2802:2858  \"return (address(0), RecoverError.InvalidSignatureLength)\"\n                    leave\n                }\n                default /// @src 8:2259:2869  \"if (signature.length == 65) {...\"\n                {\n                    /// @src 8:2546:2726  \"assembly {...\"\n                    let var_r := mload(add(var_signature_mpos, 0x20))\n                    /// @src 8:2746:2771  \"tryRecover(hash, v, r, s)\"\n                    let expr_component, expr_2136_component := fun_tryRecover(var_hash, /** @src 8:2546:2726  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 8:2546:2726  \"assembly {...\" */ mload(add(var_signature_mpos, 0x60))), /** @src 8:2746:2771  \"tryRecover(hash, v, r, s)\" */ var_r, /** @src 8:2546:2726  \"assembly {...\" */ mload(add(var_signature_mpos, 0x40)))\n                    /// @src 8:2739:2771  \"return tryRecover(hash, v, r, s)\"\n                    var_ := expr_component\n                    var := expr_2136_component\n                    leave\n                }\n            }\n            /// @ast-id 2318 @src 8:5009:6465  \"function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {...\"\n            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1\n            {\n                /// @src 8:6004:6165  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                if /** @src 8:6008:6087  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 8:6021:6087  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                /// @src 8:6004:6165  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                {\n                    /// @src 8:6103:6154  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var := /** @src 8:6119:6120  \"0\" */ 0x00\n                    /// @src 8:6103:6154  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    var_1 := /** @src 8:6123:6153  \"RecoverError.InvalidSignatureS\" */ 3\n                    /// @src 8:6103:6154  \"return (address(0), RecoverError.InvalidSignatureS)\"\n                    leave\n                }\n                /// @src 8:6276:6300  \"ecrecover(hash, v, r, s)\"\n                let _1 := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(64)\n                mstore(_1, var_hash)\n                mstore(add(_1, 32), and(var_v, 0xff))\n                mstore(add(_1, 64), var_r)\n                mstore(add(_1, 96), var_s)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 8:6276:6300  \"ecrecover(hash, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 8:6276:6300  \"ecrecover(hash, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 32))\n                /// @src 8:6276:6300  \"ecrecover(hash, v, r, s)\"\n                {\n                    /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 8:6276:6300  \"ecrecover(hash, v, r, s)\"\n                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                /// @src 8:6310:6411  \"if (signer == address(0)) {...\"\n                if /** @src 8:6314:6334  \"signer == address(0)\" */ iszero(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ and(/** @src 8:6314:6334  \"signer == address(0)\" */ _3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 8:6310:6411  \"if (signer == address(0)) {...\"\n                {\n                    /// @src 8:6350:6400  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 8:6350:6400  \"return (address(0), RecoverError.InvalidSignature)\"\n                    var_1 := /** @src 8:6276:6300  \"ecrecover(hash, v, r, s)\" */ 1\n                    /// @src 8:6350:6400  \"return (address(0), RecoverError.InvalidSignature)\"\n                    leave\n                }\n                /// @src 8:6421:6458  \"return (signer, RecoverError.NoError)\"\n                var := _3\n                var_1 := /** @src -1:-1:-1 */ _2\n            }\n            /// @ast-id 4271 @src 13:8107:8279  \"function getHash(address sender, uint nonce, bytes calldata _data) public pure returns (bytes32) {...\"\n            function fun_getHash(var_sender, var_nonce, var_data_offset, var_data_length) -> var\n            {\n                /// @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\"\n                let expr_mpos := /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ mload(64)\n                /// @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\"\n                let _1 := add(expr_mpos, 0x20)\n                /// @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\"\n                mstore(_1, and(shl(96, var_sender), not(0xffffffffffffffffffffffff)))\n                mstore(add(/** @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\" */ expr_mpos, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 52), var_nonce)\n                calldatacopy(add(/** @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\" */ expr_mpos, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 84), var_data_offset, var_data_length)\n                let _2 := add(/** @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\" */ expr_mpos, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ var_data_length)\n                mstore(add(_2, 84), /** @src -1:-1:-1 */ 0)\n                /// @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\"\n                let _3 := sub(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _2, /** @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\" */ expr_mpos)\n                mstore(expr_mpos, add(_3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 52))\n                /// @src 13:8232:8270  \"abi.encodePacked(sender, nonce, _data)\"\n                finalize_allocation(expr_mpos, add(_3, /** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ 84))\n                /// @src 13:8215:8271  \"return keccak256(abi.encodePacked(sender, nonce, _data))\"\n                var := /** @src 13:8222:8271  \"keccak256(abi.encodePacked(sender, nonce, _data))\" */ keccak256(/** @src 13:268:8286  \"contract AiYueNFTExchange is ERC1155, ERC1155Burnable {...\" */ _1, mload(/** @src 13:8222:8271  \"keccak256(abi.encodePacked(sender, nonce, _data))\" */ expr_mpos))\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b2e0ea71795fddcec1f4203b6d49bc3385be9a2b0e589c2f4da6b8214d5074fb64736f6c63430008120033\"\n    }\n}\n","hash":"010008af729ae8a81eca89b74a860a159aca98087e1089d5252fd1c71d637c02","factoryDependencies":{}}}}}}